   1               		.file	"interrupt.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	__vector_16
  12               	__vector_16:
  13               	.LFB0:
  14               		.file 1 "src/interrupt.c"
   1:src/interrupt.c **** /********************************
   2:src/interrupt.c ****  * INTERRUPT LIBRARY
   3:src/interrupt.c ****  * 
   4:src/interrupt.c ****  * Created by aliakbarp
   5:src/interrupt.c **** ********************************/
   6:src/interrupt.c **** #include <avr/io.h>
   7:src/interrupt.c **** #include <avr/interrupt.h>
   8:src/interrupt.c **** #include "interrupt.h"
   9:src/interrupt.c **** 
  10:src/interrupt.c **** // TIMER 0 overflow interrupt function
  11:src/interrupt.c **** ISR(TIMER0_OVF_vect){
  15               		.loc 1 11 0
  16               		.cfi_startproc
  17 0000 1F92      		push r1
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 1, -2
  21 0002 0F92      		push r0
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 0, -3
  25 0004 0FB6      		in r0,__SREG__
  26 0006 0F92      		push r0
  27 0008 1124      		clr __zero_reg__
  28               	/* prologue: Signal */
  29               	/* frame size = 0 */
  30               	/* stack size = 3 */
  31               	.L__stack_usage = 3
  32               	/* epilogue start */
  12:src/interrupt.c **** 	
  13:src/interrupt.c **** }
  33               		.loc 1 13 0
  34 000a 0F90      		pop r0
  35 000c 0FBE      		out __SREG__,r0
  36 000e 0F90      		pop r0
  37 0010 1F90      		pop r1
  38 0012 1895      		reti
  39               		.cfi_endproc
  40               	.LFE0:
  42               	.global	__addsf3
  43               	.global	__vector_9
  45               	__vector_9:
  46               	.LFB1:
  14:src/interrupt.c **** 
  15:src/interrupt.c **** // TIMER 2 overflow interrupt function
  16:src/interrupt.c **** ISR(TIMER2_OVF_vect){
  47               		.loc 1 16 0
  48               		.cfi_startproc
  49 0014 1F92      		push r1
  50               	.LCFI2:
  51               		.cfi_def_cfa_offset 3
  52               		.cfi_offset 1, -2
  53 0016 0F92      		push r0
  54               	.LCFI3:
  55               		.cfi_def_cfa_offset 4
  56               		.cfi_offset 0, -3
  57 0018 0FB6      		in r0,__SREG__
  58 001a 0F92      		push r0
  59 001c 1124      		clr __zero_reg__
  60 001e 2F93      		push r18
  61               	.LCFI4:
  62               		.cfi_def_cfa_offset 5
  63               		.cfi_offset 18, -4
  64 0020 3F93      		push r19
  65               	.LCFI5:
  66               		.cfi_def_cfa_offset 6
  67               		.cfi_offset 19, -5
  68 0022 4F93      		push r20
  69               	.LCFI6:
  70               		.cfi_def_cfa_offset 7
  71               		.cfi_offset 20, -6
  72 0024 5F93      		push r21
  73               	.LCFI7:
  74               		.cfi_def_cfa_offset 8
  75               		.cfi_offset 21, -7
  76 0026 6F93      		push r22
  77               	.LCFI8:
  78               		.cfi_def_cfa_offset 9
  79               		.cfi_offset 22, -8
  80 0028 7F93      		push r23
  81               	.LCFI9:
  82               		.cfi_def_cfa_offset 10
  83               		.cfi_offset 23, -9
  84 002a 8F93      		push r24
  85               	.LCFI10:
  86               		.cfi_def_cfa_offset 11
  87               		.cfi_offset 24, -10
  88 002c 9F93      		push r25
  89               	.LCFI11:
  90               		.cfi_def_cfa_offset 12
  91               		.cfi_offset 25, -11
  92 002e AF93      		push r26
  93               	.LCFI12:
  94               		.cfi_def_cfa_offset 13
  95               		.cfi_offset 26, -12
  96 0030 BF93      		push r27
  97               	.LCFI13:
  98               		.cfi_def_cfa_offset 14
  99               		.cfi_offset 27, -13
 100 0032 EF93      		push r30
 101               	.LCFI14:
 102               		.cfi_def_cfa_offset 15
 103               		.cfi_offset 30, -14
 104 0034 FF93      		push r31
 105               	.LCFI15:
 106               		.cfi_def_cfa_offset 16
 107               		.cfi_offset 31, -15
 108               	/* prologue: Signal */
 109               	/* frame size = 0 */
 110               	/* stack size = 15 */
 111               	.L__stack_usage = 15
  17:src/interrupt.c **** 	extern double timer2_overflow;
  18:src/interrupt.c **** 	timer2_overflow++;
 112               		.loc 1 18 0
 113 0036 20E0      		ldi r18,0
 114 0038 30E0      		ldi r19,0
 115 003a 40E8      		ldi r20,lo8(-128)
 116 003c 5FE3      		ldi r21,lo8(63)
 117 003e 6091 0000 		lds r22,timer2_overflow
 118 0042 7091 0000 		lds r23,timer2_overflow+1
 119 0046 8091 0000 		lds r24,timer2_overflow+2
 120 004a 9091 0000 		lds r25,timer2_overflow+3
 121 004e 0E94 0000 		call __addsf3
 122               	.LVL0:
 123 0052 6093 0000 		sts timer2_overflow,r22
 124 0056 7093 0000 		sts timer2_overflow+1,r23
 125 005a 8093 0000 		sts timer2_overflow+2,r24
 126 005e 9093 0000 		sts timer2_overflow+3,r25
  19:src/interrupt.c **** 	TIFR2=0x00;
 127               		.loc 1 19 0
 128 0062 17BA      		out 0x17,__zero_reg__
 129               	/* epilogue start */
  20:src/interrupt.c **** }
 130               		.loc 1 20 0
 131 0064 FF91      		pop r31
 132 0066 EF91      		pop r30
 133 0068 BF91      		pop r27
 134 006a AF91      		pop r26
 135 006c 9F91      		pop r25
 136 006e 8F91      		pop r24
 137 0070 7F91      		pop r23
 138 0072 6F91      		pop r22
 139 0074 5F91      		pop r21
 140 0076 4F91      		pop r20
 141 0078 3F91      		pop r19
 142 007a 2F91      		pop r18
 143 007c 0F90      		pop r0
 144 007e 0FBE      		out __SREG__,r0
 145 0080 0F90      		pop r0
 146 0082 1F90      		pop r1
 147 0084 1895      		reti
 148               		.cfi_endproc
 149               	.LFE1:
 151               	.Letext0:
 152               		.file 2 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 interrupt.c
     /tmp/ccxxnOzi.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccxxnOzi.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccxxnOzi.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccxxnOzi.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccxxnOzi.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccxxnOzi.s:12     .text:0000000000000000 __vector_16
     /tmp/ccxxnOzi.s:45     .text:0000000000000014 __vector_9

UNDEFINED SYMBOLS
__addsf3
timer2_overflow
