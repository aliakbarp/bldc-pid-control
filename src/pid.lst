   1               		.file	"pid.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	__mulsf3
  11               	.global	__addsf3
  12               	.global	__subsf3
  13               	.global	__divsf3
  14               	.global	pid_output
  16               	pid_output:
  17               	.LFB0:
  18               		.file 1 "src/pid.c"
   1:src/pid.c     **** /********************************
   2:src/pid.c     ****  * PID LIBRARY
   3:src/pid.c     ****  * 
   4:src/pid.c     ****  * Created by aliakbarp
   5:src/pid.c     **** ********************************/
   6:src/pid.c     **** 
   7:src/pid.c     **** #include "pid.h"
   8:src/pid.c     **** 
   9:src/pid.c     **** double last_integral = 0;
  10:src/pid.c     **** 
  11:src/pid.c     **** double pid_output(double error, double last_error, double sampling_time){
  19               		.loc 1 11 0
  20               		.cfi_startproc
  21               	.LVL0:
  22 0000 4F92      		push r4
  23               	.LCFI0:
  24               		.cfi_def_cfa_offset 3
  25               		.cfi_offset 4, -2
  26 0002 5F92      		push r5
  27               	.LCFI1:
  28               		.cfi_def_cfa_offset 4
  29               		.cfi_offset 5, -3
  30 0004 6F92      		push r6
  31               	.LCFI2:
  32               		.cfi_def_cfa_offset 5
  33               		.cfi_offset 6, -4
  34 0006 7F92      		push r7
  35               	.LCFI3:
  36               		.cfi_def_cfa_offset 6
  37               		.cfi_offset 7, -5
  38 0008 8F92      		push r8
  39               	.LCFI4:
  40               		.cfi_def_cfa_offset 7
  41               		.cfi_offset 8, -6
  42 000a 9F92      		push r9
  43               	.LCFI5:
  44               		.cfi_def_cfa_offset 8
  45               		.cfi_offset 9, -7
  46 000c AF92      		push r10
  47               	.LCFI6:
  48               		.cfi_def_cfa_offset 9
  49               		.cfi_offset 10, -8
  50 000e BF92      		push r11
  51               	.LCFI7:
  52               		.cfi_def_cfa_offset 10
  53               		.cfi_offset 11, -9
  54 0010 CF92      		push r12
  55               	.LCFI8:
  56               		.cfi_def_cfa_offset 11
  57               		.cfi_offset 12, -10
  58 0012 DF92      		push r13
  59               	.LCFI9:
  60               		.cfi_def_cfa_offset 12
  61               		.cfi_offset 13, -11
  62 0014 EF92      		push r14
  63               	.LCFI10:
  64               		.cfi_def_cfa_offset 13
  65               		.cfi_offset 14, -12
  66 0016 FF92      		push r15
  67               	.LCFI11:
  68               		.cfi_def_cfa_offset 14
  69               		.cfi_offset 15, -13
  70 0018 0F93      		push r16
  71               	.LCFI12:
  72               		.cfi_def_cfa_offset 15
  73               		.cfi_offset 16, -14
  74 001a 1F93      		push r17
  75               	.LCFI13:
  76               		.cfi_def_cfa_offset 16
  77               		.cfi_offset 17, -15
  78 001c CF93      		push r28
  79               	.LCFI14:
  80               		.cfi_def_cfa_offset 17
  81               		.cfi_offset 28, -16
  82 001e DF93      		push r29
  83               	.LCFI15:
  84               		.cfi_def_cfa_offset 18
  85               		.cfi_offset 29, -17
  86 0020 CDB7      		in r28,__SP_L__
  87 0022 DEB7      		in r29,__SP_H__
  88               	.LCFI16:
  89               		.cfi_def_cfa_register 28
  90 0024 2897      		sbiw r28,8
  91               	.LCFI17:
  92               		.cfi_def_cfa_offset 26
  93 0026 0FB6      		in __tmp_reg__,__SREG__
  94 0028 F894      		cli
  95 002a DEBF      		out __SP_H__,r29
  96 002c 0FBE      		out __SREG__,__tmp_reg__
  97 002e CDBF      		out __SP_L__,r28
  98               	/* prologue: function */
  99               	/* frame size = 8 */
 100               	/* stack size = 24 */
 101               	.L__stack_usage = 24
 102 0030 4B01      		movw r8,r22
 103 0032 5C01      		movw r10,r24
 104 0034 2983      		std Y+1,r18
 105 0036 3A83      		std Y+2,r19
 106 0038 4B83      		std Y+3,r20
 107 003a 5C83      		std Y+4,r21
 108 003c 2701      		movw r4,r14
 109 003e 3801      		movw r6,r16
 110               	.LVL1:
  12:src/pid.c     **** 	double integral = 0;
  13:src/pid.c     **** 	double derivatif = 0;
  14:src/pid.c     **** 	double output = 0;
  15:src/pid.c     **** 	integral = last_integral + (error * sampling_time);
 111               		.loc 1 15 0
 112 0040 A801      		movw r20,r16
 113 0042 9701      		movw r18,r14
 114               	.LVL2:
 115 0044 0E94 0000 		call __mulsf3
 116               	.LVL3:
 117 0048 2091 0000 		lds r18,last_integral
 118 004c 3091 0000 		lds r19,last_integral+1
 119 0050 4091 0000 		lds r20,last_integral+2
 120 0054 5091 0000 		lds r21,last_integral+3
 121 0058 0E94 0000 		call __addsf3
 122               	.LVL4:
 123 005c 6B01      		movw r12,r22
 124 005e 7C01      		movw r14,r24
 125               	.LVL5:
  16:src/pid.c     **** 	derivatif = (error - last_error) / sampling_time;
  17:src/pid.c     **** 	output = (KP * error) + (KI*integral) + (KD*derivatif);
  18:src/pid.c     **** 	last_integral = integral;
 126               		.loc 1 18 0
 127 0060 6093 0000 		sts last_integral,r22
 128 0064 7093 0000 		sts last_integral+1,r23
 129 0068 8093 0000 		sts last_integral+2,r24
 130 006c 9093 0000 		sts last_integral+3,r25
  17:src/pid.c     **** 	output = (KP * error) + (KI*integral) + (KD*derivatif);
 131               		.loc 1 17 0
 132 0070 2FE6      		ldi r18,lo8(111)
 133 0072 32E1      		ldi r19,lo8(18)
 134 0074 43E0      		ldi r20,lo8(3)
 135 0076 5AE3      		ldi r21,lo8(58)
 136 0078 C501      		movw r24,r10
 137 007a B401      		movw r22,r8
 138 007c 0E94 0000 		call __mulsf3
 139               	.LVL6:
 140 0080 6D83      		std Y+5,r22
 141 0082 7E83      		std Y+6,r23
 142 0084 8F83      		std Y+7,r24
 143 0086 9887      		std Y+8,r25
 144 0088 20E0      		ldi r18,0
 145 008a 30E0      		ldi r19,0
 146 008c A901      		movw r20,r18
 147 008e C701      		movw r24,r14
 148 0090 B601      		movw r22,r12
 149 0092 0E94 0000 		call __mulsf3
 150               	.LVL7:
 151 0096 9B01      		movw r18,r22
 152 0098 AC01      		movw r20,r24
 153 009a 6D81      		ldd r22,Y+5
 154 009c 7E81      		ldd r23,Y+6
 155 009e 8F81      		ldd r24,Y+7
 156 00a0 9885      		ldd r25,Y+8
 157 00a2 0E94 0000 		call __addsf3
 158               	.LVL8:
 159 00a6 6B01      		movw r12,r22
 160 00a8 7C01      		movw r14,r24
 161               	.LVL9:
  16:src/pid.c     **** 	derivatif = (error - last_error) / sampling_time;
 162               		.loc 1 16 0
 163 00aa 2981      		ldd r18,Y+1
 164 00ac 3A81      		ldd r19,Y+2
 165 00ae 4B81      		ldd r20,Y+3
 166 00b0 5C81      		ldd r21,Y+4
 167 00b2 C501      		movw r24,r10
 168 00b4 B401      		movw r22,r8
 169 00b6 0E94 0000 		call __subsf3
 170               	.LVL10:
 171 00ba A301      		movw r20,r6
 172 00bc 9201      		movw r18,r4
 173 00be 0E94 0000 		call __divsf3
 174               	.LVL11:
  17:src/pid.c     **** 	output = (KP * error) + (KI*integral) + (KD*derivatif);
 175               		.loc 1 17 0
 176 00c2 20E0      		ldi r18,0
 177 00c4 30E0      		ldi r19,0
 178 00c6 A901      		movw r20,r18
 179 00c8 0E94 0000 		call __mulsf3
 180               	.LVL12:
 181 00cc 9B01      		movw r18,r22
 182 00ce AC01      		movw r20,r24
 183 00d0 C701      		movw r24,r14
 184 00d2 B601      		movw r22,r12
 185 00d4 0E94 0000 		call __addsf3
 186               	.LVL13:
 187               	/* epilogue start */
  19:src/pid.c     **** 	return output;
  20:src/pid.c     **** }
 188               		.loc 1 20 0
 189 00d8 2896      		adiw r28,8
 190 00da 0FB6      		in __tmp_reg__,__SREG__
 191 00dc F894      		cli
 192 00de DEBF      		out __SP_H__,r29
 193 00e0 0FBE      		out __SREG__,__tmp_reg__
 194 00e2 CDBF      		out __SP_L__,r28
 195 00e4 DF91      		pop r29
 196 00e6 CF91      		pop r28
 197 00e8 1F91      		pop r17
 198 00ea 0F91      		pop r16
 199 00ec FF90      		pop r15
 200 00ee EF90      		pop r14
 201               	.LVL14:
 202 00f0 DF90      		pop r13
 203 00f2 CF90      		pop r12
 204 00f4 BF90      		pop r11
 205 00f6 AF90      		pop r10
 206 00f8 9F90      		pop r9
 207 00fa 8F90      		pop r8
 208               	.LVL15:
 209 00fc 7F90      		pop r7
 210 00fe 6F90      		pop r6
 211 0100 5F90      		pop r5
 212 0102 4F90      		pop r4
 213               	.LVL16:
 214 0104 0895      		ret
 215               		.cfi_endproc
 216               	.LFE0:
 218               	.global	last_integral
 219               		.section .bss
 222               	last_integral:
 223 0000 0000 0000 		.zero	4
 224               		.text
 225               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 pid.c
     /tmp/ccydsl7j.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccydsl7j.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccydsl7j.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccydsl7j.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccydsl7j.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccydsl7j.s:16     .text:0000000000000000 pid_output
     /tmp/ccydsl7j.s:222    .bss:0000000000000000 last_integral

UNDEFINED SYMBOLS
__mulsf3
__addsf3
__subsf3
__divsf3
__do_clear_bss
