
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00001ef2  00001f86  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ef2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000b2  00800112  00800112  00001f98  2**0
                  ALLOC
  3 .stab         00005ac0  00000000  00000000  00001f98  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001543  00000000  00000000  00007a58  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00008f9b  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000e0  00000000  00000000  00008fac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000011e3  00000000  00000000  0000908c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000007cc  00000000  00000000  0000a26f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000594  00000000  00000000  0000aa3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000004b8  00000000  00000000  0000afd0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000004a9  00000000  00000000  0000b488  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000de7  00000000  00000000  0000b931  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000028  00000000  00000000  0000c718  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__ctors_end>
       4:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
       8:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
       c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      10:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      14:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      18:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      1c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      20:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      24:	0c 94 06 03 	jmp	0x60c	; 0x60c <__vector_9>
      28:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      2c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      30:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      34:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      38:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      3c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      40:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <__vector_16>
      44:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      48:	0c 94 14 04 	jmp	0x828	; 0x828 <__vector_18>
      4c:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <__vector_19>
      50:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      54:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      58:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      5c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      60:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      64:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>

00000068 <__c.2115>:
      68:	48 7a 00                                            Hz.

0000006b <__c.2109>:
      6b:	72 70 6d 00                                         rpm.

0000006f <__c.2086>:
      6f:	6e 61 6e 00                                         nan.

00000073 <__c.2084>:
      73:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      83:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      93:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      a3:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      b3:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      c3:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      d3:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      e3:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      f3:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     103:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     113:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     123:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     133:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     143:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     153:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     163:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000171 <pstr_nan>:
     171:	4e 41 4e                                            NAN

00000174 <pstr_inity>:
     174:	49 4e 49 54 59                                      INITY

00000179 <pstr_inf>:
     179:	49 4e 46                                            INF

0000017c <pwr_m10>:
     17c:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     18c:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000194 <pwr_p10>:
     194:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     1a4:	ca 1b 0e 5a ae c5 9d 74                             ...Z...t

000001ac <__ctors_end>:
     1ac:	11 24       	eor	r1, r1
     1ae:	1f be       	out	0x3f, r1	; 63
     1b0:	cf ef       	ldi	r28, 0xFF	; 255
     1b2:	d8 e0       	ldi	r29, 0x08	; 8
     1b4:	de bf       	out	0x3e, r29	; 62
     1b6:	cd bf       	out	0x3d, r28	; 61

000001b8 <__do_copy_data>:
     1b8:	11 e0       	ldi	r17, 0x01	; 1
     1ba:	a0 e0       	ldi	r26, 0x00	; 0
     1bc:	b1 e0       	ldi	r27, 0x01	; 1
     1be:	e2 ef       	ldi	r30, 0xF2	; 242
     1c0:	fe e1       	ldi	r31, 0x1E	; 30
     1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <__do_copy_data+0x10>
     1c4:	05 90       	lpm	r0, Z+
     1c6:	0d 92       	st	X+, r0
     1c8:	a2 31       	cpi	r26, 0x12	; 18
     1ca:	b1 07       	cpc	r27, r17
     1cc:	d9 f7       	brne	.-10     	; 0x1c4 <__do_copy_data+0xc>

000001ce <__do_clear_bss>:
     1ce:	11 e0       	ldi	r17, 0x01	; 1
     1d0:	a2 e1       	ldi	r26, 0x12	; 18
     1d2:	b1 e0       	ldi	r27, 0x01	; 1
     1d4:	01 c0       	rjmp	.+2      	; 0x1d8 <.do_clear_bss_start>

000001d6 <.do_clear_bss_loop>:
     1d6:	1d 92       	st	X+, r1

000001d8 <.do_clear_bss_start>:
     1d8:	a4 3c       	cpi	r26, 0xC4	; 196
     1da:	b1 07       	cpc	r27, r17
     1dc:	e1 f7       	brne	.-8      	; 0x1d6 <.do_clear_bss_loop>
     1de:	0e 94 0c 05 	call	0xa18	; 0xa18 <main>
     1e2:	0c 94 77 0f 	jmp	0x1eee	; 0x1eee <_exit>

000001e6 <__bad_interrupt>:
     1e6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001ea <lcd_e_port_low>:
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     1ea:	2b 98       	cbi	0x05, 3	; 5
     1ec:	08 95       	ret

000001ee <lcd_e_port_high>:
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     1ee:	2b 9a       	sbi	0x05, 3	; 5
     1f0:	08 95       	ret

000001f2 <lcd_write>:
          rs     1: write data
                 0: write instruction
Returns:  none
*************************************************************************/
static void lcd_write(uint8_t data,uint8_t rs)
  {
     1f2:	cf 93       	push	r28
     1f4:	df 93       	push	r29
     1f6:	c8 2f       	mov	r28, r24
     1f8:	d6 2f       	mov	r29, r22
          Delay_us(5);
          PrevCmdInvolvedAddressCounter=0;
        }
    #endif

    if (rs)
     1fa:	66 23       	and	r22, r22
     1fc:	11 f0       	breq	.+4      	; 0x202 <lcd_write+0x10>
      {
        lcd_rs_port_high();                            // RS=1: Write Character
     1fe:	2c 9a       	sbi	0x05, 4	; 5
     200:	01 c0       	rjmp	.+2      	; 0x204 <lcd_write+0x12>
        PrevCmdInvolvedAddressCounter=1;
        #endif
      }
    else
      {
        lcd_rs_port_low();                          // RS=0: Write Command
     202:	2c 98       	cbi	0x05, 4	; 5
        PrevCmdInvolvedAddressCounter=0;
        #endif
      }

    #if LCD_BITS==4
      lcd_db7_port_set(data&_BV(7));                  //Output High Nibble
     204:	c7 ff       	sbrs	r28, 7
     206:	02 c0       	rjmp	.+4      	; 0x20c <lcd_write+0x1a>
     208:	5f 9a       	sbi	0x0b, 7	; 11
     20a:	01 c0       	rjmp	.+2      	; 0x20e <lcd_write+0x1c>
     20c:	5f 98       	cbi	0x0b, 7	; 11
      lcd_db6_port_set(data&_BV(6));
     20e:	c6 ff       	sbrs	r28, 6
     210:	02 c0       	rjmp	.+4      	; 0x216 <lcd_write+0x24>
     212:	28 9a       	sbi	0x05, 0	; 5
     214:	01 c0       	rjmp	.+2      	; 0x218 <lcd_write+0x26>
     216:	28 98       	cbi	0x05, 0	; 5
      lcd_db5_port_set(data&_BV(5));
     218:	c5 ff       	sbrs	r28, 5
     21a:	02 c0       	rjmp	.+4      	; 0x220 <lcd_write+0x2e>
     21c:	29 9a       	sbi	0x05, 1	; 5
     21e:	01 c0       	rjmp	.+2      	; 0x222 <lcd_write+0x30>
     220:	29 98       	cbi	0x05, 1	; 5
      lcd_db4_port_set(data&_BV(4));
     222:	c4 ff       	sbrs	r28, 4
     224:	02 c0       	rjmp	.+4      	; 0x22a <lcd_write+0x38>
     226:	2d 9a       	sbi	0x05, 5	; 5
     228:	01 c0       	rjmp	.+2      	; 0x22c <lcd_write+0x3a>
     22a:	2d 98       	cbi	0x05, 5	; 5

      Delay_ns(100);
     22c:	00 c0       	rjmp	.+0      	; 0x22e <lcd_write+0x3c>
      lcd_e_port_high();
     22e:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_e_port_high>

      Delay_ns(500);
     232:	82 e0       	ldi	r24, 0x02	; 2
     234:	8a 95       	dec	r24
     236:	f1 f7       	brne	.-4      	; 0x234 <lcd_write+0x42>
     238:	00 c0       	rjmp	.+0      	; 0x23a <lcd_write+0x48>
      lcd_e_port_low();
     23a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <lcd_e_port_low>

      lcd_db7_port_set(data&_BV(3));                  //Output High Nibble
     23e:	c3 ff       	sbrs	r28, 3
     240:	02 c0       	rjmp	.+4      	; 0x246 <lcd_write+0x54>
     242:	5f 9a       	sbi	0x0b, 7	; 11
     244:	01 c0       	rjmp	.+2      	; 0x248 <lcd_write+0x56>
     246:	5f 98       	cbi	0x0b, 7	; 11
      lcd_db6_port_set(data&_BV(2));
     248:	c2 ff       	sbrs	r28, 2
     24a:	02 c0       	rjmp	.+4      	; 0x250 <lcd_write+0x5e>
     24c:	28 9a       	sbi	0x05, 0	; 5
     24e:	01 c0       	rjmp	.+2      	; 0x252 <lcd_write+0x60>
     250:	28 98       	cbi	0x05, 0	; 5
      lcd_db5_port_set(data&_BV(1));
     252:	c1 ff       	sbrs	r28, 1
     254:	02 c0       	rjmp	.+4      	; 0x25a <lcd_write+0x68>
     256:	29 9a       	sbi	0x05, 1	; 5
     258:	01 c0       	rjmp	.+2      	; 0x25c <lcd_write+0x6a>
     25a:	29 98       	cbi	0x05, 1	; 5
      lcd_db4_port_set(data&_BV(0));
     25c:	c0 ff       	sbrs	r28, 0
     25e:	02 c0       	rjmp	.+4      	; 0x264 <lcd_write+0x72>
     260:	2d 9a       	sbi	0x05, 5	; 5
     262:	01 c0       	rjmp	.+2      	; 0x266 <lcd_write+0x74>
     264:	2d 98       	cbi	0x05, 5	; 5

      Delay_ns(100);
     266:	00 c0       	rjmp	.+0      	; 0x268 <lcd_write+0x76>
      lcd_e_port_high();
     268:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_e_port_high>

      Delay_ns(500);
     26c:	92 e0       	ldi	r25, 0x02	; 2
     26e:	9a 95       	dec	r25
     270:	f1 f7       	brne	.-4      	; 0x26e <lcd_write+0x7c>
     272:	00 c0       	rjmp	.+0      	; 0x274 <lcd_write+0x82>
      lcd_e_port_low();
     274:	0e 94 f5 00 	call	0x1ea	; 0x1ea <lcd_e_port_low>

      lcd_db7_port_high();                            // All Data Pins High (Inactive)
     278:	5f 9a       	sbi	0x0b, 7	; 11
      lcd_db6_port_high();
     27a:	28 9a       	sbi	0x05, 0	; 5
      lcd_db5_port_high();
     27c:	29 9a       	sbi	0x05, 1	; 5
      lcd_db4_port_high();
     27e:	2d 9a       	sbi	0x05, 5	; 5
      lcd_db1_port_high();
      lcd_db0_port_high();
    #endif

    #if (WAIT_MODE==0 || RW_LINE_IMPLEMENTED==0)
      if (!rs && data<=((1<<LCD_CLR) | (1<<LCD_HOME))) // Is command clrscr or home?
     280:	d1 11       	cpse	r29, r1
     282:	08 c0       	rjmp	.+16     	; 0x294 <lcd_write+0xa2>
     284:	c4 30       	cpi	r28, 0x04	; 4
     286:	30 f4       	brcc	.+12     	; 0x294 <lcd_write+0xa2>
        Delay_us(1640);
     288:	8f e9       	ldi	r24, 0x9F	; 159
     28a:	99 e1       	ldi	r25, 0x19	; 25
     28c:	01 97       	sbiw	r24, 0x01	; 1
     28e:	f1 f7       	brne	.-4      	; 0x28c <lcd_write+0x9a>
     290:	00 c0       	rjmp	.+0      	; 0x292 <lcd_write+0xa0>
     292:	03 c0       	rjmp	.+6      	; 0x29a <lcd_write+0xa8>
      else Delay_us(40);
     294:	95 ed       	ldi	r25, 0xD5	; 213
     296:	9a 95       	dec	r25
     298:	f1 f7       	brne	.-4      	; 0x296 <lcd_write+0xa4>
     29a:	00 00       	nop
    #endif
  }
     29c:	df 91       	pop	r29
     29e:	cf 91       	pop	r28
     2a0:	08 95       	ret

000002a2 <lcd_command>:
Input:   instruction to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
  {
    lcd_write(cmd,0);
     2a2:	60 e0       	ldi	r22, 0x00	; 0
     2a4:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <lcd_write>

000002a8 <lcd_goto>:
Input:    pos position
Returns:  none
*************************************************************************/
void lcd_goto(uint8_t pos)
  {
    lcd_command((1<<LCD_DDRAM)+pos);
     2a8:	80 58       	subi	r24, 0x80	; 128
     2aa:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <lcd_command>

000002ae <lcd_gotoxy>:
  
void lcd_gotoxy(uint8_t x, uint8_t y)
  {
	register uint8_t DDRAMAddr;
	// remap lines into proper order
	switch(y)
     2ae:	62 30       	cpi	r22, 0x02	; 2
     2b0:	31 f0       	breq	.+12     	; 0x2be <lcd_gotoxy+0x10>
     2b2:	63 30       	cpi	r22, 0x03	; 3
     2b4:	31 f0       	breq	.+12     	; 0x2c2 <lcd_gotoxy+0x14>
     2b6:	61 30       	cpi	r22, 0x01	; 1
     2b8:	29 f4       	brne	.+10     	; 0x2c4 <lcd_gotoxy+0x16>
	{
	case 0: DDRAMAddr = LCD_LINE0_DDRAMADDR+x; break;
	case 1: DDRAMAddr = LCD_LINE1_DDRAMADDR+x; break;
     2ba:	80 5c       	subi	r24, 0xC0	; 192
     2bc:	03 c0       	rjmp	.+6      	; 0x2c4 <lcd_gotoxy+0x16>
	case 2: DDRAMAddr = LCD_LINE2_DDRAMADDR+x; break;
     2be:	8c 5e       	subi	r24, 0xEC	; 236
     2c0:	01 c0       	rjmp	.+2      	; 0x2c4 <lcd_gotoxy+0x16>
	case 3: DDRAMAddr = LCD_LINE3_DDRAMADDR+x; break;
     2c2:	8c 5a       	subi	r24, 0xAC	; 172
	default: DDRAMAddr = LCD_LINE0_DDRAMADDR+x;
	}
	// set data address
	lcd_command(1<<LCD_DDRAM | DDRAMAddr);
     2c4:	80 68       	ori	r24, 0x80	; 128
     2c6:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <lcd_command>

000002ca <lcd_clrscr>:
Input:    none
Returns:  none
*************************************************************************/
void lcd_clrscr(void)
  {
    lcd_command(1<<LCD_CLR);
     2ca:	81 e0       	ldi	r24, 0x01	; 1
     2cc:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <lcd_command>

000002d0 <lcd_home>:
Input:    none
Returns:  none
*************************************************************************/
void lcd_home(void)
  {
    lcd_command(1<<LCD_HOME);
     2d0:	82 e0       	ldi	r24, 0x02	; 2
     2d2:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <lcd_command>

000002d6 <lcd_putc>:
Input:    character to be displayed
Returns:  none
*************************************************************************/
void lcd_putc(char c)
  {
    lcd_write(c,1);
     2d6:	61 e0       	ldi	r22, 0x01	; 1
     2d8:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <lcd_write>

000002dc <lcd_puts>:
Display string
Input:    string to be displayed
Returns:  none
*************************************************************************/
void lcd_puts(const char *s)
  {
     2dc:	cf 93       	push	r28
     2de:	df 93       	push	r29
     2e0:	ec 01       	movw	r28, r24
    register char c;

    while ((c=*s++)) 
     2e2:	89 91       	ld	r24, Y+
     2e4:	88 23       	and	r24, r24
     2e6:	19 f0       	breq	.+6      	; 0x2ee <lcd_puts+0x12>
      lcd_putc(c);
     2e8:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <lcd_putc>
     2ec:	fa cf       	rjmp	.-12     	; 0x2e2 <lcd_puts+0x6>
  }
     2ee:	df 91       	pop	r29
     2f0:	cf 91       	pop	r28
     2f2:	08 95       	ret

000002f4 <lcd_puts_P>:
Display string from flash
Input:    string to be displayed
Returns:  none
*************************************************************************/
void lcd_puts_P(const char *progmem_s)
  {
     2f4:	cf 93       	push	r28
     2f6:	df 93       	push	r29
     2f8:	fc 01       	movw	r30, r24
    register char c;

    while ((c=pgm_read_byte(progmem_s++))) 
     2fa:	84 91       	lpm	r24, Z
     2fc:	ef 01       	movw	r28, r30
     2fe:	21 96       	adiw	r28, 0x01	; 1
     300:	88 23       	and	r24, r24
     302:	21 f0       	breq	.+8      	; 0x30c <lcd_puts_P+0x18>
      lcd_putc(c);
     304:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <lcd_putc>
     308:	fe 01       	movw	r30, r28
     30a:	f7 cf       	rjmp	.-18     	; 0x2fa <lcd_puts_P+0x6>
  }
     30c:	df 91       	pop	r29
     30e:	cf 91       	pop	r28
     310:	08 95       	ret

00000312 <lcd_init>:
      case 4 : DDR(LCD_E4_PORT)|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                DDR(LCD_E_PORT)|=_BV(LCD_E_PIN);
     312:	23 9a       	sbi	0x04, 3	; 4
*************************************************************************/
void lcd_init(void)
  {
    //Set All Pins as Output
    lcd_e_ddr_high();
    lcd_rs_ddr_high();
     314:	24 9a       	sbi	0x04, 4	; 4
    #if RW_LINE_IMPLEMENTED==1
      lcd_rw_ddr_high();
    #endif
    lcd_db7_ddr_high();
     316:	57 9a       	sbi	0x0a, 7	; 10
    lcd_db6_ddr_high();
     318:	20 9a       	sbi	0x04, 0	; 4
    lcd_db5_ddr_high();
     31a:	21 9a       	sbi	0x04, 1	; 4
    lcd_db4_ddr_high();
     31c:	25 9a       	sbi	0x04, 5	; 4
      lcd_db1_ddr_high();
      lcd_db0_ddr_high();
    #endif

    //Set All Control Lines Low
    lcd_e_port_low();
     31e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <lcd_e_port_low>
    lcd_rs_port_low();
     322:	2c 98       	cbi	0x05, 4	; 5
    #if RW_LINE_IMPLEMENTED==1
      lcd_rw_port_low();
    #endif

    //Set All Data Lines High
    lcd_db7_port_high();
     324:	5f 9a       	sbi	0x0b, 7	; 11
    lcd_db6_port_high();
     326:	28 9a       	sbi	0x05, 0	; 5
    lcd_db5_port_high();
     328:	29 9a       	sbi	0x05, 1	; 5
    lcd_db4_port_high();
     32a:	2d 9a       	sbi	0x05, 5	; 5
      lcd_db1_port_high();
      lcd_db0_port_high();
    #endif

    //Startup Delay
    Delay_ms(DELAY_RESET);
     32c:	8f e5       	ldi	r24, 0x5F	; 95
     32e:	9a ee       	ldi	r25, 0xEA	; 234
     330:	01 97       	sbiw	r24, 0x01	; 1
     332:	f1 f7       	brne	.-4      	; 0x330 <lcd_init+0x1e>
     334:	00 c0       	rjmp	.+0      	; 0x336 <lcd_init+0x24>
     336:	00 00       	nop

    //Initialize Display
    lcd_db7_port_low();
     338:	5f 98       	cbi	0x0b, 7	; 11
    lcd_db6_port_low();
     33a:	28 98       	cbi	0x05, 0	; 5
    Delay_ns(100);
     33c:	00 c0       	rjmp	.+0      	; 0x33e <lcd_init+0x2c>
    lcd_e_port_high();
     33e:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_e_port_high>
    Delay_ns(500);
     342:	92 e0       	ldi	r25, 0x02	; 2
     344:	9a 95       	dec	r25
     346:	f1 f7       	brne	.-4      	; 0x344 <lcd_init+0x32>
     348:	00 c0       	rjmp	.+0      	; 0x34a <lcd_init+0x38>
    lcd_e_port_low();
     34a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <lcd_e_port_low>

    Delay_us(4100);
     34e:	8f e0       	ldi	r24, 0x0F	; 15
     350:	90 e4       	ldi	r25, 0x40	; 64
     352:	01 97       	sbiw	r24, 0x01	; 1
     354:	f1 f7       	brne	.-4      	; 0x352 <lcd_init+0x40>
     356:	00 c0       	rjmp	.+0      	; 0x358 <lcd_init+0x46>
     358:	00 00       	nop

    lcd_e_port_high();
     35a:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_e_port_high>
    Delay_ns(500);
     35e:	92 e0       	ldi	r25, 0x02	; 2
     360:	9a 95       	dec	r25
     362:	f1 f7       	brne	.-4      	; 0x360 <lcd_init+0x4e>
     364:	00 c0       	rjmp	.+0      	; 0x366 <lcd_init+0x54>
    lcd_e_port_low();
     366:	0e 94 f5 00 	call	0x1ea	; 0x1ea <lcd_e_port_low>

    Delay_us(100);
     36a:	8f e8       	ldi	r24, 0x8F	; 143
     36c:	91 e0       	ldi	r25, 0x01	; 1
     36e:	01 97       	sbiw	r24, 0x01	; 1
     370:	f1 f7       	brne	.-4      	; 0x36e <lcd_init+0x5c>
     372:	00 c0       	rjmp	.+0      	; 0x374 <lcd_init+0x62>
     374:	00 00       	nop

    lcd_e_port_high();
     376:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_e_port_high>
    Delay_ns(500);
     37a:	92 e0       	ldi	r25, 0x02	; 2
     37c:	9a 95       	dec	r25
     37e:	f1 f7       	brne	.-4      	; 0x37c <lcd_init+0x6a>
     380:	00 c0       	rjmp	.+0      	; 0x382 <lcd_init+0x70>
    lcd_e_port_low();
     382:	0e 94 f5 00 	call	0x1ea	; 0x1ea <lcd_e_port_low>

    Delay_us(40);
     386:	85 ed       	ldi	r24, 0xD5	; 213
     388:	8a 95       	dec	r24
     38a:	f1 f7       	brne	.-4      	; 0x388 <lcd_init+0x76>
     38c:	00 00       	nop

    //Init differs between 4-bit and 8-bit from here
    #if (LCD_BITS==4)
      lcd_db4_port_low();
     38e:	2d 98       	cbi	0x05, 5	; 5
      Delay_ns(100);
     390:	00 c0       	rjmp	.+0      	; 0x392 <lcd_init+0x80>
      lcd_e_port_high();
     392:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_e_port_high>
      Delay_ns(500);
     396:	92 e0       	ldi	r25, 0x02	; 2
     398:	9a 95       	dec	r25
     39a:	f1 f7       	brne	.-4      	; 0x398 <lcd_init+0x86>
     39c:	00 c0       	rjmp	.+0      	; 0x39e <lcd_init+0x8c>
      lcd_e_port_low();
     39e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <lcd_e_port_low>
      Delay_us(40);
     3a2:	85 ed       	ldi	r24, 0xD5	; 213
     3a4:	8a 95       	dec	r24
     3a6:	f1 f7       	brne	.-4      	; 0x3a4 <lcd_init+0x92>
     3a8:	00 00       	nop

      lcd_db4_port_low();
     3aa:	2d 98       	cbi	0x05, 5	; 5
      Delay_ns(100);
     3ac:	00 c0       	rjmp	.+0      	; 0x3ae <lcd_init+0x9c>
      lcd_e_port_high();
     3ae:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_e_port_high>
      Delay_ns(500);
     3b2:	92 e0       	ldi	r25, 0x02	; 2
     3b4:	9a 95       	dec	r25
     3b6:	f1 f7       	brne	.-4      	; 0x3b4 <lcd_init+0xa2>
     3b8:	00 c0       	rjmp	.+0      	; 0x3ba <lcd_init+0xa8>
      lcd_e_port_low();
     3ba:	0e 94 f5 00 	call	0x1ea	; 0x1ea <lcd_e_port_low>
      Delay_ns(500);
     3be:	82 e0       	ldi	r24, 0x02	; 2
     3c0:	8a 95       	dec	r24
     3c2:	f1 f7       	brne	.-4      	; 0x3c0 <lcd_init+0xae>
     3c4:	00 c0       	rjmp	.+0      	; 0x3c6 <lcd_init+0xb4>

      #if (LCD_DISPLAYS==1)
        if (LCD_DISPLAY_LINES>1)
          lcd_db7_port_high();
     3c6:	5f 9a       	sbi	0x0b, 7	; 11
          }
        if (c>1)
          lcd_db7_port_high();
      #endif

      Delay_ns(100);
     3c8:	00 c0       	rjmp	.+0      	; 0x3ca <lcd_init+0xb8>
      lcd_e_port_high();
     3ca:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_e_port_high>
      Delay_ns(500);
     3ce:	92 e0       	ldi	r25, 0x02	; 2
     3d0:	9a 95       	dec	r25
     3d2:	f1 f7       	brne	.-4      	; 0x3d0 <lcd_init+0xbe>
     3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <lcd_init+0xc4>
      lcd_e_port_low();
     3d6:	0e 94 f5 00 	call	0x1ea	; 0x1ea <lcd_e_port_low>
      Delay_us(40);
     3da:	85 ed       	ldi	r24, 0xD5	; 213
     3dc:	8a 95       	dec	r24
     3de:	f1 f7       	brne	.-4      	; 0x3dc <lcd_init+0xca>
     3e0:	00 00       	nop
      lcd_e_port_low();
      Delay_us(40);
    #endif

    //Display Off
    lcd_command(_BV(LCD_DISPLAYMODE));
     3e2:	88 e0       	ldi	r24, 0x08	; 8
     3e4:	0e 94 51 01 	call	0x2a2	; 0x2a2 <lcd_command>

    //Display Clear
    lcd_clrscr();
     3e8:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_clrscr>

    //Entry Mode Set
    lcd_command(_BV(LCD_ENTRY_MODE) | _BV(LCD_ENTRY_INC));
     3ec:	86 e0       	ldi	r24, 0x06	; 6
     3ee:	0e 94 51 01 	call	0x2a2	; 0x2a2 <lcd_command>

    //Display On
    lcd_command(_BV(LCD_DISPLAYMODE) | _BV(LCD_DISPLAYMODE_ON));
     3f2:	8c e0       	ldi	r24, 0x0C	; 12
     3f4:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <lcd_command>

000003f8 <pid_output>:

#include "pid.h"

double last_integral = 0;

double pid_output(double error, double last_error, double sampling_time){
     3f8:	4f 92       	push	r4
     3fa:	5f 92       	push	r5
     3fc:	6f 92       	push	r6
     3fe:	7f 92       	push	r7
     400:	8f 92       	push	r8
     402:	9f 92       	push	r9
     404:	af 92       	push	r10
     406:	bf 92       	push	r11
     408:	cf 92       	push	r12
     40a:	df 92       	push	r13
     40c:	ef 92       	push	r14
     40e:	ff 92       	push	r15
     410:	0f 93       	push	r16
     412:	1f 93       	push	r17
     414:	cf 93       	push	r28
     416:	df 93       	push	r29
     418:	cd b7       	in	r28, 0x3d	; 61
     41a:	de b7       	in	r29, 0x3e	; 62
     41c:	28 97       	sbiw	r28, 0x08	; 8
     41e:	0f b6       	in	r0, 0x3f	; 63
     420:	f8 94       	cli
     422:	de bf       	out	0x3e, r29	; 62
     424:	0f be       	out	0x3f, r0	; 63
     426:	cd bf       	out	0x3d, r28	; 61
     428:	4b 01       	movw	r8, r22
     42a:	5c 01       	movw	r10, r24
     42c:	29 83       	std	Y+1, r18	; 0x01
     42e:	3a 83       	std	Y+2, r19	; 0x02
     430:	4b 83       	std	Y+3, r20	; 0x03
     432:	5c 83       	std	Y+4, r21	; 0x04
     434:	27 01       	movw	r4, r14
     436:	38 01       	movw	r6, r16
	double integral = 0;
	double derivatif = 0;
	double output = 0;
	integral = last_integral + (error * sampling_time);
     438:	a8 01       	movw	r20, r16
     43a:	97 01       	movw	r18, r14
     43c:	0e 94 87 0b 	call	0x170e	; 0x170e <__mulsf3>
     440:	20 91 44 01 	lds	r18, 0x0144
     444:	30 91 45 01 	lds	r19, 0x0145
     448:	40 91 46 01 	lds	r20, 0x0146
     44c:	50 91 47 01 	lds	r21, 0x0147
     450:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__addsf3>
     454:	6b 01       	movw	r12, r22
     456:	7c 01       	movw	r14, r24
	derivatif = (error - last_error) / sampling_time;
	output = (KP * error) + (KI*integral) + (KD*derivatif);
	last_integral = integral;
     458:	60 93 44 01 	sts	0x0144, r22
     45c:	70 93 45 01 	sts	0x0145, r23
     460:	80 93 46 01 	sts	0x0146, r24
     464:	90 93 47 01 	sts	0x0147, r25
	double integral = 0;
	double derivatif = 0;
	double output = 0;
	integral = last_integral + (error * sampling_time);
	derivatif = (error - last_error) / sampling_time;
	output = (KP * error) + (KI*integral) + (KD*derivatif);
     468:	26 ea       	ldi	r18, 0xA6	; 166
     46a:	3b e9       	ldi	r19, 0x9B	; 155
     46c:	44 e4       	ldi	r20, 0x44	; 68
     46e:	5b e3       	ldi	r21, 0x3B	; 59
     470:	c5 01       	movw	r24, r10
     472:	b4 01       	movw	r22, r8
     474:	0e 94 87 0b 	call	0x170e	; 0x170e <__mulsf3>
     478:	6d 83       	std	Y+5, r22	; 0x05
     47a:	7e 83       	std	Y+6, r23	; 0x06
     47c:	8f 83       	std	Y+7, r24	; 0x07
     47e:	98 87       	std	Y+8, r25	; 0x08
     480:	20 e0       	ldi	r18, 0x00	; 0
     482:	30 e0       	ldi	r19, 0x00	; 0
     484:	a9 01       	movw	r20, r18
     486:	c7 01       	movw	r24, r14
     488:	b6 01       	movw	r22, r12
     48a:	0e 94 87 0b 	call	0x170e	; 0x170e <__mulsf3>
     48e:	9b 01       	movw	r18, r22
     490:	ac 01       	movw	r20, r24
     492:	6d 81       	ldd	r22, Y+5	; 0x05
     494:	7e 81       	ldd	r23, Y+6	; 0x06
     496:	8f 81       	ldd	r24, Y+7	; 0x07
     498:	98 85       	ldd	r25, Y+8	; 0x08
     49a:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__addsf3>
     49e:	6b 01       	movw	r12, r22
     4a0:	7c 01       	movw	r14, r24
double pid_output(double error, double last_error, double sampling_time){
	double integral = 0;
	double derivatif = 0;
	double output = 0;
	integral = last_integral + (error * sampling_time);
	derivatif = (error - last_error) / sampling_time;
     4a2:	29 81       	ldd	r18, Y+1	; 0x01
     4a4:	3a 81       	ldd	r19, Y+2	; 0x02
     4a6:	4b 81       	ldd	r20, Y+3	; 0x03
     4a8:	5c 81       	ldd	r21, Y+4	; 0x04
     4aa:	c5 01       	movw	r24, r10
     4ac:	b4 01       	movw	r22, r8
     4ae:	0e 94 d8 09 	call	0x13b0	; 0x13b0 <__subsf3>
     4b2:	a3 01       	movw	r20, r6
     4b4:	92 01       	movw	r18, r4
     4b6:	0e 94 41 0a 	call	0x1482	; 0x1482 <__divsf3>
	output = (KP * error) + (KI*integral) + (KD*derivatif);
     4ba:	20 e0       	ldi	r18, 0x00	; 0
     4bc:	30 e0       	ldi	r19, 0x00	; 0
     4be:	a9 01       	movw	r20, r18
     4c0:	0e 94 87 0b 	call	0x170e	; 0x170e <__mulsf3>
     4c4:	9b 01       	movw	r18, r22
     4c6:	ac 01       	movw	r20, r24
     4c8:	c7 01       	movw	r24, r14
     4ca:	b6 01       	movw	r22, r12
     4cc:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__addsf3>
	last_integral = integral;
	return output;
}
     4d0:	28 96       	adiw	r28, 0x08	; 8
     4d2:	0f b6       	in	r0, 0x3f	; 63
     4d4:	f8 94       	cli
     4d6:	de bf       	out	0x3e, r29	; 62
     4d8:	0f be       	out	0x3f, r0	; 63
     4da:	cd bf       	out	0x3d, r28	; 61
     4dc:	df 91       	pop	r29
     4de:	cf 91       	pop	r28
     4e0:	1f 91       	pop	r17
     4e2:	0f 91       	pop	r16
     4e4:	ff 90       	pop	r15
     4e6:	ef 90       	pop	r14
     4e8:	df 90       	pop	r13
     4ea:	cf 90       	pop	r12
     4ec:	bf 90       	pop	r11
     4ee:	af 90       	pop	r10
     4f0:	9f 90       	pop	r9
     4f2:	8f 90       	pop	r8
     4f4:	7f 90       	pop	r7
     4f6:	6f 90       	pop	r6
     4f8:	5f 90       	pop	r5
     4fa:	4f 90       	pop	r4
     4fc:	08 95       	ret

000004fe <timer0_init>:
#include <avr/io.h>
#include <util/delay.h>

void timer0_init(void){
	// T0, input for clock signal
	DDRD&=~(1<<DDD4);
     4fe:	54 98       	cbi	0x0a, 4	; 10
	// T0, internal pull-up
	PORTD|=(1<<PD4);
     500:	5c 9a       	sbi	0x0b, 4	; 11
	// Input clock from T0, rising edge
	TCCR0B|=(1<<CS02)|(1<<CS01)|(1<<CS00);
     502:	85 b5       	in	r24, 0x25	; 37
     504:	87 60       	ori	r24, 0x07	; 7
     506:	85 bd       	out	0x25, r24	; 37
	// Enable overflow interrupt
	TIMSK0|=(1<<TOIE0);
     508:	ee e6       	ldi	r30, 0x6E	; 110
     50a:	f0 e0       	ldi	r31, 0x00	; 0
     50c:	80 81       	ld	r24, Z
     50e:	81 60       	ori	r24, 0x01	; 1
     510:	80 83       	st	Z, r24
     512:	08 95       	ret

00000514 <timer1_init>:
}

void timer1_init(void){
	// PINB2 as output, PWM generator pin
	DDRB|=(1<<DDB2);
     514:	22 9a       	sbi	0x04, 2	; 4
	// OC1B activation for PWM output pin (COM)
	// Fast PWM mode, with ICR1 as TOP (WGM)
	TCCR1A|=(1<<COM1B1)|(1<<WGM11);
     516:	e0 e8       	ldi	r30, 0x80	; 128
     518:	f0 e0       	ldi	r31, 0x00	; 0
     51a:	80 81       	ld	r24, Z
     51c:	82 62       	ori	r24, 0x22	; 34
     51e:	80 83       	st	Z, r24
	// Prescaller 8 (CS)
	TCCR1B|=(1<<WGM13)|(1<<WGM12)|(1<<CS11);
     520:	e1 e8       	ldi	r30, 0x81	; 129
     522:	f0 e0       	ldi	r31, 0x00	; 0
     524:	80 81       	ld	r24, Z
     526:	8a 61       	ori	r24, 0x1A	; 26
     528:	80 83       	st	Z, r24
	// TOP value of TIMER1 counting
	ICR1 = 20000;
     52a:	80 e2       	ldi	r24, 0x20	; 32
     52c:	9e e4       	ldi	r25, 0x4E	; 78
     52e:	90 93 87 00 	sts	0x0087, r25
     532:	80 93 86 00 	sts	0x0086, r24
     536:	08 95       	ret

00000538 <timer2_init>:
}

void timer2_init(void){
	// No prescalling
	TCCR2B|=(1<<CS21);
     538:	e1 eb       	ldi	r30, 0xB1	; 177
     53a:	f0 e0       	ldi	r31, 0x00	; 0
     53c:	80 81       	ld	r24, Z
     53e:	82 60       	ori	r24, 0x02	; 2
     540:	80 83       	st	Z, r24
	// Enable overflow interrupt 
	TIMSK2|=(1<<TOIE2);
     542:	e0 e7       	ldi	r30, 0x70	; 112
     544:	f0 e0       	ldi	r31, 0x00	; 0
     546:	80 81       	ld	r24, Z
     548:	81 60       	ori	r24, 0x01	; 1
     54a:	80 83       	st	Z, r24
     54c:	08 95       	ret

0000054e <millisec>:
}

void millisec(int d){
	int i = 0;
	for(i=0; i<d; i++){
     54e:	20 e0       	ldi	r18, 0x00	; 0
     550:	30 e0       	ldi	r19, 0x00	; 0
     552:	28 17       	cp	r18, r24
     554:	39 07       	cpc	r19, r25
     556:	4c f4       	brge	.+18     	; 0x56a <millisec+0x1c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     558:	ef e9       	ldi	r30, 0x9F	; 159
     55a:	ff e0       	ldi	r31, 0x0F	; 15
     55c:	31 97       	sbiw	r30, 0x01	; 1
     55e:	f1 f7       	brne	.-4      	; 0x55c <millisec+0xe>
     560:	00 c0       	rjmp	.+0      	; 0x562 <millisec+0x14>
     562:	00 00       	nop
     564:	2f 5f       	subi	r18, 0xFF	; 255
     566:	3f 4f       	sbci	r19, 0xFF	; 255
     568:	f4 cf       	rjmp	.-24     	; 0x552 <millisec+0x4>
		_delay_ms(1);
	}
}
     56a:	08 95       	ret

0000056c <bldc_init>:

void bldc_init(void){
     56c:	ef 92       	push	r14
     56e:	ff 92       	push	r15
     570:	0f 93       	push	r16
     572:	1f 93       	push	r17
     574:	cf 93       	push	r28
     576:	df 93       	push	r29
	TCNT0 = 0;
     578:	16 bc       	out	0x26, r1	; 38
	while(TCNT0 <= 32){
		OCR1B = 1000;
     57a:	08 ee       	ldi	r16, 0xE8	; 232
     57c:	13 e0       	ldi	r17, 0x03	; 3
		for(g=1500; g<2200; g+=100){
			OCR1B = g;
			millisec(600);
		}
		for(g=2200; g>2080; g-=100){
			OCR1B = g;
     57e:	84 e3       	ldi	r24, 0x34	; 52
     580:	e8 2e       	mov	r14, r24
     582:	88 e0       	ldi	r24, 0x08	; 8
     584:	f8 2e       	mov	r15, r24
	}
}

void bldc_init(void){
	TCNT0 = 0;
	while(TCNT0 <= 32){
     586:	86 b5       	in	r24, 0x26	; 38
     588:	81 32       	cpi	r24, 0x21	; 33
     58a:	48 f5       	brcc	.+82     	; 0x5de <bldc_init+0x72>
		OCR1B = 1000;
     58c:	10 93 8b 00 	sts	0x008B, r17
     590:	00 93 8a 00 	sts	0x008A, r16
		millisec(1000);
     594:	88 ee       	ldi	r24, 0xE8	; 232
     596:	93 e0       	ldi	r25, 0x03	; 3
     598:	0e 94 a7 02 	call	0x54e	; 0x54e <millisec>
		uint16_t g;
		for(g=1500; g<2200; g+=100){
     59c:	cc ed       	ldi	r28, 0xDC	; 220
     59e:	d5 e0       	ldi	r29, 0x05	; 5
			OCR1B = g;
     5a0:	d0 93 8b 00 	sts	0x008B, r29
     5a4:	c0 93 8a 00 	sts	0x008A, r28
			millisec(600);
     5a8:	88 e5       	ldi	r24, 0x58	; 88
     5aa:	92 e0       	ldi	r25, 0x02	; 2
     5ac:	0e 94 a7 02 	call	0x54e	; 0x54e <millisec>
	TCNT0 = 0;
	while(TCNT0 <= 32){
		OCR1B = 1000;
		millisec(1000);
		uint16_t g;
		for(g=1500; g<2200; g+=100){
     5b0:	cc 59       	subi	r28, 0x9C	; 156
     5b2:	df 4f       	sbci	r29, 0xFF	; 255
     5b4:	c8 39       	cpi	r28, 0x98	; 152
     5b6:	88 e0       	ldi	r24, 0x08	; 8
     5b8:	d8 07       	cpc	r29, r24
     5ba:	91 f7       	brne	.-28     	; 0x5a0 <bldc_init+0x34>
			OCR1B = g;
			millisec(600);
		}
		for(g=2200; g>2080; g-=100){
			OCR1B = g;
     5bc:	d0 93 8b 00 	sts	0x008B, r29
     5c0:	c0 93 8a 00 	sts	0x008A, r28
			millisec(600);
     5c4:	88 e5       	ldi	r24, 0x58	; 88
     5c6:	92 e0       	ldi	r25, 0x02	; 2
     5c8:	0e 94 a7 02 	call	0x54e	; 0x54e <millisec>
		for(g=1500; g<2200; g+=100){
			OCR1B = g;
			millisec(600);
		}
		for(g=2200; g>2080; g-=100){
			OCR1B = g;
     5cc:	f0 92 8b 00 	sts	0x008B, r15
     5d0:	e0 92 8a 00 	sts	0x008A, r14
			millisec(600);
     5d4:	88 e5       	ldi	r24, 0x58	; 88
     5d6:	92 e0       	ldi	r25, 0x02	; 2
     5d8:	0e 94 a7 02 	call	0x54e	; 0x54e <millisec>
     5dc:	d4 cf       	rjmp	.-88     	; 0x586 <bldc_init+0x1a>
		}
	}
}
     5de:	df 91       	pop	r29
     5e0:	cf 91       	pop	r28
     5e2:	1f 91       	pop	r17
     5e4:	0f 91       	pop	r16
     5e6:	ff 90       	pop	r15
     5e8:	ef 90       	pop	r14
     5ea:	08 95       	ret

000005ec <timer_init>:

void timer_init(void){
	timer0_init();
     5ec:	0e 94 7f 02 	call	0x4fe	; 0x4fe <timer0_init>
	timer1_init();
     5f0:	0e 94 8a 02 	call	0x514	; 0x514 <timer1_init>
	timer2_init();
     5f4:	0c 94 9c 02 	jmp	0x538	; 0x538 <timer2_init>

000005f8 <__vector_16>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "interrupt.h"

// TIMER 0 overflow interrupt function
ISR(TIMER0_OVF_vect){
     5f8:	1f 92       	push	r1
     5fa:	0f 92       	push	r0
     5fc:	0f b6       	in	r0, 0x3f	; 63
     5fe:	0f 92       	push	r0
     600:	11 24       	eor	r1, r1
	
}
     602:	0f 90       	pop	r0
     604:	0f be       	out	0x3f, r0	; 63
     606:	0f 90       	pop	r0
     608:	1f 90       	pop	r1
     60a:	18 95       	reti

0000060c <__vector_9>:

// TIMER 2 overflow interrupt function
ISR(TIMER2_OVF_vect){
     60c:	1f 92       	push	r1
     60e:	0f 92       	push	r0
     610:	0f b6       	in	r0, 0x3f	; 63
     612:	0f 92       	push	r0
     614:	11 24       	eor	r1, r1
     616:	2f 93       	push	r18
     618:	3f 93       	push	r19
     61a:	4f 93       	push	r20
     61c:	5f 93       	push	r21
     61e:	6f 93       	push	r22
     620:	7f 93       	push	r23
     622:	8f 93       	push	r24
     624:	9f 93       	push	r25
     626:	af 93       	push	r26
     628:	bf 93       	push	r27
     62a:	ef 93       	push	r30
     62c:	ff 93       	push	r31
	extern double timer2_overflow;
	timer2_overflow++;
     62e:	20 e0       	ldi	r18, 0x00	; 0
     630:	30 e0       	ldi	r19, 0x00	; 0
     632:	40 e8       	ldi	r20, 0x80	; 128
     634:	5f e3       	ldi	r21, 0x3F	; 63
     636:	60 91 40 01 	lds	r22, 0x0140
     63a:	70 91 41 01 	lds	r23, 0x0141
     63e:	80 91 42 01 	lds	r24, 0x0142
     642:	90 91 43 01 	lds	r25, 0x0143
     646:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__addsf3>
     64a:	60 93 40 01 	sts	0x0140, r22
     64e:	70 93 41 01 	sts	0x0141, r23
     652:	80 93 42 01 	sts	0x0142, r24
     656:	90 93 43 01 	sts	0x0143, r25
	TIFR2=0x00;
     65a:	17 ba       	out	0x17, r1	; 23
}
     65c:	ff 91       	pop	r31
     65e:	ef 91       	pop	r30
     660:	bf 91       	pop	r27
     662:	af 91       	pop	r26
     664:	9f 91       	pop	r25
     666:	8f 91       	pop	r24
     668:	7f 91       	pop	r23
     66a:	6f 91       	pop	r22
     66c:	5f 91       	pop	r21
     66e:	4f 91       	pop	r20
     670:	3f 91       	pop	r19
     672:	2f 91       	pop	r18
     674:	0f 90       	pop	r0
     676:	0f be       	out	0x3f, r0	; 63
     678:	0f 90       	pop	r0
     67a:	1f 90       	pop	r1
     67c:	18 95       	reti

0000067e <lcd_display>:
#include "interface.h"
#include <stdlib.h>
#include <string.h>
#include <src/uart.h>

void lcd_display(uint8_t x, uint8_t y, char buffer[33]){
     67e:	08 95       	ret

00000680 <serial_display>:
		lcd_gotoxy(x, y);
		lcd_puts(buffer);
	#endif
}

void serial_display(double rpm){
     680:	ef 92       	push	r14
     682:	ff 92       	push	r15
     684:	0f 93       	push	r16
     686:	1f 93       	push	r17
     688:	cf 93       	push	r28
     68a:	df 93       	push	r29
     68c:	cd b7       	in	r28, 0x3d	; 61
     68e:	de b7       	in	r29, 0x3e	; 62
     690:	2a 97       	sbiw	r28, 0x0a	; 10
     692:	0f b6       	in	r0, 0x3f	; 63
     694:	f8 94       	cli
     696:	de bf       	out	0x3e, r29	; 62
     698:	0f be       	out	0x3f, r0	; 63
     69a:	cd bf       	out	0x3d, r28	; 61
	#if defined NEED_SERIAL
		unsigned char arr[10];
		snprintf(arr, sizeof(rpm)+3, "%.3f", rpm);
     69c:	9f 93       	push	r25
     69e:	8f 93       	push	r24
     6a0:	7f 93       	push	r23
     6a2:	6f 93       	push	r22
     6a4:	88 e0       	ldi	r24, 0x08	; 8
     6a6:	91 e0       	ldi	r25, 0x01	; 1
     6a8:	9f 93       	push	r25
     6aa:	8f 93       	push	r24
     6ac:	1f 92       	push	r1
     6ae:	87 e0       	ldi	r24, 0x07	; 7
     6b0:	8f 93       	push	r24
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5f       	subi	r16, 0xFF	; 255
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	1f 93       	push	r17
     6ba:	0f 93       	push	r16
     6bc:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <snprintf>
     6c0:	78 01       	movw	r14, r16
		for(int g=0; g<strlen(arr); g++){
     6c2:	0f b6       	in	r0, 0x3f	; 63
     6c4:	f8 94       	cli
     6c6:	de bf       	out	0x3e, r29	; 62
     6c8:	0f be       	out	0x3f, r0	; 63
     6ca:	cd bf       	out	0x3d, r28	; 61
     6cc:	f8 01       	movw	r30, r16
     6ce:	01 90       	ld	r0, Z+
     6d0:	00 20       	and	r0, r0
     6d2:	e9 f7       	brne	.-6      	; 0x6ce <serial_display+0x4e>
     6d4:	31 97       	sbiw	r30, 0x01	; 1
     6d6:	e0 1b       	sub	r30, r16
     6d8:	f1 0b       	sbc	r31, r17
     6da:	c7 01       	movw	r24, r14
     6dc:	80 1b       	sub	r24, r16
     6de:	91 0b       	sbc	r25, r17
     6e0:	8e 17       	cp	r24, r30
     6e2:	9f 07       	cpc	r25, r31
     6e4:	30 f4       	brcc	.+12     	; 0x6f2 <serial_display+0x72>
			//Send back to terminal
			uart_putc((uint8_t)arr[g]);
     6e6:	f7 01       	movw	r30, r14
     6e8:	81 91       	ld	r24, Z+
     6ea:	7f 01       	movw	r14, r30
     6ec:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <uart_putc>
     6f0:	ed cf       	rjmp	.-38     	; 0x6cc <serial_display+0x4c>
		}
	#endif
}
     6f2:	2a 96       	adiw	r28, 0x0a	; 10
     6f4:	0f b6       	in	r0, 0x3f	; 63
     6f6:	f8 94       	cli
     6f8:	de bf       	out	0x3e, r29	; 62
     6fa:	0f be       	out	0x3f, r0	; 63
     6fc:	cd bf       	out	0x3d, r28	; 61
     6fe:	df 91       	pop	r29
     700:	cf 91       	pop	r28
     702:	1f 91       	pop	r17
     704:	0f 91       	pop	r16
     706:	ff 90       	pop	r15
     708:	ef 90       	pop	r14
     70a:	08 95       	ret

0000070c <serial_rpm>:

void serial_rpm(double rpm, double hertz){
     70c:	af 92       	push	r10
     70e:	bf 92       	push	r11
     710:	cf 92       	push	r12
     712:	df 92       	push	r13
     714:	ef 92       	push	r14
     716:	ff 92       	push	r15
     718:	0f 93       	push	r16
     71a:	1f 93       	push	r17
     71c:	cf 93       	push	r28
     71e:	df 93       	push	r29
     720:	cd b7       	in	r28, 0x3d	; 61
     722:	de b7       	in	r29, 0x3e	; 62
     724:	2a 97       	sbiw	r28, 0x0a	; 10
     726:	0f b6       	in	r0, 0x3f	; 63
     728:	f8 94       	cli
     72a:	de bf       	out	0x3e, r29	; 62
     72c:	0f be       	out	0x3f, r0	; 63
     72e:	cd bf       	out	0x3d, r28	; 61
     730:	d2 2e       	mov	r13, r18
     732:	c3 2e       	mov	r12, r19
     734:	b4 2e       	mov	r11, r20
     736:	a5 2e       	mov	r10, r21
	#if defined NEED_SERIAL
		unsigned char arr[10];
		snprintf(arr, sizeof(rpm)+3, "%.2f", rpm);
     738:	9f 93       	push	r25
     73a:	8f 93       	push	r24
     73c:	7f 93       	push	r23
     73e:	6f 93       	push	r22
     740:	8d e0       	ldi	r24, 0x0D	; 13
     742:	91 e0       	ldi	r25, 0x01	; 1
     744:	9f 93       	push	r25
     746:	8f 93       	push	r24
     748:	1f 92       	push	r1
     74a:	87 e0       	ldi	r24, 0x07	; 7
     74c:	8f 93       	push	r24
     74e:	8e 01       	movw	r16, r28
     750:	0f 5f       	subi	r16, 0xFF	; 255
     752:	1f 4f       	sbci	r17, 0xFF	; 255
     754:	1f 93       	push	r17
     756:	0f 93       	push	r16
     758:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <snprintf>
		for(int g=0; g<strlen(arr); g++){
     75c:	0f b6       	in	r0, 0x3f	; 63
     75e:	f8 94       	cli
     760:	de bf       	out	0x3e, r29	; 62
     762:	0f be       	out	0x3f, r0	; 63
     764:	cd bf       	out	0x3d, r28	; 61
     766:	78 01       	movw	r14, r16
     768:	f8 01       	movw	r30, r16
     76a:	01 90       	ld	r0, Z+
     76c:	00 20       	and	r0, r0
     76e:	e9 f7       	brne	.-6      	; 0x76a <serial_rpm+0x5e>
     770:	31 97       	sbiw	r30, 0x01	; 1
     772:	e0 1b       	sub	r30, r16
     774:	f1 0b       	sbc	r31, r17
     776:	c7 01       	movw	r24, r14
     778:	80 1b       	sub	r24, r16
     77a:	91 0b       	sbc	r25, r17
     77c:	8e 17       	cp	r24, r30
     77e:	9f 07       	cpc	r25, r31
     780:	30 f4       	brcc	.+12     	; 0x78e <serial_rpm+0x82>
			//Send back to terminal
			uart_putc((uint8_t)arr[g]);
     782:	f7 01       	movw	r30, r14
     784:	81 91       	ld	r24, Z+
     786:	7f 01       	movw	r14, r30
     788:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <uart_putc>
     78c:	ed cf       	rjmp	.-38     	; 0x768 <serial_rpm+0x5c>
		}
		uart_putc(32);
     78e:	80 e2       	ldi	r24, 0x20	; 32
     790:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <uart_putc>
		uart_puts_P("rpm");
     794:	8b e6       	ldi	r24, 0x6B	; 107
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	0e 94 fd 04 	call	0x9fa	; 0x9fa <uart_puts_p>
		uart_putc(9);
     79c:	89 e0       	ldi	r24, 0x09	; 9
     79e:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <uart_putc>
		//uart_putc("#");
		snprintf(arr, sizeof(hertz)+3, "%.2f", hertz);
     7a2:	af 92       	push	r10
     7a4:	bf 92       	push	r11
     7a6:	cf 92       	push	r12
     7a8:	df 92       	push	r13
     7aa:	8d e0       	ldi	r24, 0x0D	; 13
     7ac:	91 e0       	ldi	r25, 0x01	; 1
     7ae:	9f 93       	push	r25
     7b0:	8f 93       	push	r24
     7b2:	1f 92       	push	r1
     7b4:	87 e0       	ldi	r24, 0x07	; 7
     7b6:	8f 93       	push	r24
     7b8:	1f 93       	push	r17
     7ba:	0f 93       	push	r16
     7bc:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <snprintf>
		for(int g=0; g<strlen(arr); g++){
     7c0:	0f b6       	in	r0, 0x3f	; 63
     7c2:	f8 94       	cli
     7c4:	de bf       	out	0x3e, r29	; 62
     7c6:	0f be       	out	0x3f, r0	; 63
     7c8:	cd bf       	out	0x3d, r28	; 61
     7ca:	78 01       	movw	r14, r16
     7cc:	f8 01       	movw	r30, r16
     7ce:	01 90       	ld	r0, Z+
     7d0:	00 20       	and	r0, r0
     7d2:	e9 f7       	brne	.-6      	; 0x7ce <serial_rpm+0xc2>
     7d4:	31 97       	sbiw	r30, 0x01	; 1
     7d6:	e0 1b       	sub	r30, r16
     7d8:	f1 0b       	sbc	r31, r17
     7da:	c7 01       	movw	r24, r14
     7dc:	80 1b       	sub	r24, r16
     7de:	91 0b       	sbc	r25, r17
     7e0:	8e 17       	cp	r24, r30
     7e2:	9f 07       	cpc	r25, r31
     7e4:	30 f4       	brcc	.+12     	; 0x7f2 <serial_rpm+0xe6>
			//Send back to terminal
			uart_putc((uint8_t)arr[g]);
     7e6:	f7 01       	movw	r30, r14
     7e8:	81 91       	ld	r24, Z+
     7ea:	7f 01       	movw	r14, r30
     7ec:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <uart_putc>
     7f0:	ed cf       	rjmp	.-38     	; 0x7cc <serial_rpm+0xc0>
		}
		uart_putc(32);
     7f2:	80 e2       	ldi	r24, 0x20	; 32
     7f4:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <uart_putc>
		uart_puts_P("Hz");
     7f8:	88 e6       	ldi	r24, 0x68	; 104
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	0e 94 fd 04 	call	0x9fa	; 0x9fa <uart_puts_p>
		uart_putc(10);
     800:	8a e0       	ldi	r24, 0x0A	; 10
     802:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <uart_putc>
	#endif
}
     806:	2a 96       	adiw	r28, 0x0a	; 10
     808:	0f b6       	in	r0, 0x3f	; 63
     80a:	f8 94       	cli
     80c:	de bf       	out	0x3e, r29	; 62
     80e:	0f be       	out	0x3f, r0	; 63
     810:	cd bf       	out	0x3d, r28	; 61
     812:	df 91       	pop	r29
     814:	cf 91       	pop	r28
     816:	1f 91       	pop	r17
     818:	0f 91       	pop	r16
     81a:	ff 90       	pop	r15
     81c:	ef 90       	pop	r14
     81e:	df 90       	pop	r13
     820:	cf 90       	pop	r12
     822:	bf 90       	pop	r11
     824:	af 90       	pop	r10
     826:	08 95       	ret

00000828 <__vector_18>:
ISR (UART0_RECEIVE_INTERRUPT)	
/*************************************************************************
Function: UART Receive Complete interrupt
Purpose:  called when the UART has received a character
**************************************************************************/
{
     828:	1f 92       	push	r1
     82a:	0f 92       	push	r0
     82c:	0f b6       	in	r0, 0x3f	; 63
     82e:	0f 92       	push	r0
     830:	11 24       	eor	r1, r1
     832:	2f 93       	push	r18
     834:	3f 93       	push	r19
     836:	4f 93       	push	r20
     838:	5f 93       	push	r21
     83a:	6f 93       	push	r22
     83c:	7f 93       	push	r23
     83e:	8f 93       	push	r24
     840:	9f 93       	push	r25
     842:	af 93       	push	r26
     844:	bf 93       	push	r27
     846:	cf 93       	push	r28
     848:	ef 93       	push	r30
     84a:	ff 93       	push	r31
    extern unsigned int i;
	extern bool serial_complete;
	extern double desired_rpm;
 
    /* read UART status register and UART data register */
    usr  = UART0_STATUS;
     84c:	c0 91 c0 00 	lds	r28, 0x00C0
    data = UART0_DATA;
     850:	20 91 c6 00 	lds	r18, 0x00C6
#elif defined(FE) && defined(DOR)
    lastRxError = usr & (_BV(FE)|_BV(DOR) );
#endif

    /* calculate buffer index */ 
    tmphead = ( UART_RxHead + 1) & UART_RX_BUFFER_MASK;
     854:	e0 91 4a 01 	lds	r30, 0x014A
     858:	ef 5f       	subi	r30, 0xFF	; 255
     85a:	ef 71       	andi	r30, 0x1F	; 31
    
    if ( tmphead == UART_RxTail ) {
     85c:	80 91 49 01 	lds	r24, 0x0149
     860:	e8 17       	cp	r30, r24
     862:	41 f0       	breq	.+16     	; 0x874 <__vector_18+0x4c>
    
    /* get FEn (Frame Error) DORn (Data OverRun) UPEn (USART Parity Error) bits */
#if defined(FE) && defined(DOR) && defined(UPE)
    lastRxError = usr & (_BV(FE)|_BV(DOR)|_BV(UPE) );
#elif defined(FE0) && defined(DOR0) && defined(UPE0)
    lastRxError = usr & (_BV(FE0)|_BV(DOR0)|_BV(UPE0) );
     864:	cc 71       	andi	r28, 0x1C	; 28
    if ( tmphead == UART_RxTail ) {
        /* error: receive buffer overflow */
        lastRxError = UART_BUFFER_OVERFLOW >> 8;
    }else{
        /* store new index */
        UART_RxHead = tmphead;
     866:	e0 93 4a 01 	sts	0x014A, r30
        /* store received data in buffer */
        UART_RxBuf[tmphead] = data;
     86a:	f0 e0       	ldi	r31, 0x00	; 0
     86c:	e3 5b       	subi	r30, 0xB3	; 179
     86e:	fe 4f       	sbci	r31, 0xFE	; 254
     870:	20 83       	st	Z, r18
     872:	01 c0       	rjmp	.+2      	; 0x876 <__vector_18+0x4e>
    /* calculate buffer index */ 
    tmphead = ( UART_RxHead + 1) & UART_RX_BUFFER_MASK;
    
    if ( tmphead == UART_RxTail ) {
        /* error: receive buffer overflow */
        lastRxError = UART_BUFFER_OVERFLOW >> 8;
     874:	c2 e0       	ldi	r28, 0x02	; 2
        UART_RxHead = tmphead;
        /* store received data in buffer */
        UART_RxBuf[tmphead] = data;
    }

	if(data != 10){
     876:	2a 30       	cpi	r18, 0x0A	; 10
     878:	81 f0       	breq	.+32     	; 0x89a <__vector_18+0x72>
		if(data >= 48){
     87a:	20 33       	cpi	r18, 0x30	; 48
     87c:	28 f1       	brcs	.+74     	; 0x8c8 <__vector_18+0xa0>
			line[i] = data;
     87e:	80 91 14 01 	lds	r24, 0x0114
     882:	90 91 15 01 	lds	r25, 0x0115
     886:	fc 01       	movw	r30, r24
     888:	e9 56       	subi	r30, 0x69	; 105
     88a:	fe 4f       	sbci	r31, 0xFE	; 254
     88c:	20 83       	st	Z, r18
			i++;
     88e:	01 96       	adiw	r24, 0x01	; 1
     890:	90 93 15 01 	sts	0x0115, r25
     894:	80 93 14 01 	sts	0x0114, r24
     898:	17 c0       	rjmp	.+46     	; 0x8c8 <__vector_18+0xa0>
		}
	} else {
		desired_rpm = atof(line);
     89a:	87 e9       	ldi	r24, 0x97	; 151
     89c:	91 e0       	ldi	r25, 0x01	; 1
     89e:	0e 94 21 0c 	call	0x1842	; 0x1842 <atof>
     8a2:	60 93 00 01 	sts	0x0100, r22
     8a6:	70 93 01 01 	sts	0x0101, r23
     8aa:	80 93 02 01 	sts	0x0102, r24
     8ae:	90 93 03 01 	sts	0x0103, r25
     8b2:	e7 e9       	ldi	r30, 0x97	; 151
     8b4:	f1 e0       	ldi	r31, 0x01	; 1
		for(int g=0; g<10; g++){
			line[g] = 0;
     8b6:	11 92       	st	Z+, r1
			line[i] = data;
			i++;
		}
	} else {
		desired_rpm = atof(line);
		for(int g=0; g<10; g++){
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	e1 3a       	cpi	r30, 0xA1	; 161
     8bc:	f8 07       	cpc	r31, r24
     8be:	d9 f7       	brne	.-10     	; 0x8b6 <__vector_18+0x8e>
			line[g] = 0;
		}
		i = 0;
     8c0:	10 92 15 01 	sts	0x0115, r1
     8c4:	10 92 14 01 	sts	0x0114, r1
	}
	
    UART_LastRxError |= lastRxError;   
     8c8:	80 91 48 01 	lds	r24, 0x0148
     8cc:	8c 2b       	or	r24, r28
     8ce:	80 93 48 01 	sts	0x0148, r24
}
     8d2:	ff 91       	pop	r31
     8d4:	ef 91       	pop	r30
     8d6:	cf 91       	pop	r28
     8d8:	bf 91       	pop	r27
     8da:	af 91       	pop	r26
     8dc:	9f 91       	pop	r25
     8de:	8f 91       	pop	r24
     8e0:	7f 91       	pop	r23
     8e2:	6f 91       	pop	r22
     8e4:	5f 91       	pop	r21
     8e6:	4f 91       	pop	r20
     8e8:	3f 91       	pop	r19
     8ea:	2f 91       	pop	r18
     8ec:	0f 90       	pop	r0
     8ee:	0f be       	out	0x3f, r0	; 63
     8f0:	0f 90       	pop	r0
     8f2:	1f 90       	pop	r1
     8f4:	18 95       	reti

000008f6 <__vector_19>:
ISR (UART0_TRANSMIT_INTERRUPT)
/*************************************************************************
Function: UART Data Register Empty interrupt
Purpose:  called when the UART is ready to transmit the next byte
**************************************************************************/
{
     8f6:	1f 92       	push	r1
     8f8:	0f 92       	push	r0
     8fa:	0f b6       	in	r0, 0x3f	; 63
     8fc:	0f 92       	push	r0
     8fe:	11 24       	eor	r1, r1
     900:	8f 93       	push	r24
     902:	9f 93       	push	r25
     904:	ef 93       	push	r30
     906:	ff 93       	push	r31
    unsigned char tmptail;

    
    if ( UART_TxHead != UART_TxTail) {
     908:	90 91 4c 01 	lds	r25, 0x014C
     90c:	80 91 4b 01 	lds	r24, 0x014B
     910:	98 17       	cp	r25, r24
     912:	69 f0       	breq	.+26     	; 0x92e <__stack+0x2f>
        /* calculate and store new buffer index */
        tmptail = (UART_TxTail + 1) & UART_TX_BUFFER_MASK;
     914:	e0 91 4b 01 	lds	r30, 0x014B
     918:	ef 5f       	subi	r30, 0xFF	; 255
     91a:	ef 71       	andi	r30, 0x1F	; 31
        UART_TxTail = tmptail;
     91c:	e0 93 4b 01 	sts	0x014B, r30
        /* get one byte from buffer and write it to UART */
        UART0_DATA = UART_TxBuf[tmptail];  /* start transmission */
     920:	f0 e0       	ldi	r31, 0x00	; 0
     922:	e3 59       	subi	r30, 0x93	; 147
     924:	fe 4f       	sbci	r31, 0xFE	; 254
     926:	80 81       	ld	r24, Z
     928:	80 93 c6 00 	sts	0x00C6, r24
     92c:	05 c0       	rjmp	.+10     	; 0x938 <__stack+0x39>
    }else{
        /* tx buffer empty, disable UDRE interrupt */
        UART0_CONTROL &= ~_BV(UART0_UDRIE);
     92e:	80 91 c1 00 	lds	r24, 0x00C1
     932:	8f 7d       	andi	r24, 0xDF	; 223
     934:	80 93 c1 00 	sts	0x00C1, r24
    }
}
     938:	ff 91       	pop	r31
     93a:	ef 91       	pop	r30
     93c:	9f 91       	pop	r25
     93e:	8f 91       	pop	r24
     940:	0f 90       	pop	r0
     942:	0f be       	out	0x3f, r0	; 63
     944:	0f 90       	pop	r0
     946:	1f 90       	pop	r1
     948:	18 95       	reti

0000094a <uart_init>:
Input:    baudrate using macro UART_BAUD_SELECT()
Returns:  none
**************************************************************************/
void uart_init(unsigned int baudrate)
{
    UART_TxHead = 0;
     94a:	10 92 4c 01 	sts	0x014C, r1
    UART_TxTail = 0;
     94e:	10 92 4b 01 	sts	0x014B, r1
    UART_RxHead = 0;
     952:	10 92 4a 01 	sts	0x014A, r1
    UART_RxTail = 0;
     956:	10 92 49 01 	sts	0x0149, r1
#endif
#endif
#endif

    /* Set baud rate */
    if ( baudrate & 0x8000 )
     95a:	97 ff       	sbrs	r25, 7
     95c:	03 c0       	rjmp	.+6      	; 0x964 <uart_init+0x1a>
    {
        #if UART0_BIT_U2X
        UART0_STATUS = (1<<UART0_BIT_U2X);  //Enable 2x speed 
     95e:	22 e0       	ldi	r18, 0x02	; 2
     960:	20 93 c0 00 	sts	0x00C0, r18
        #endif
    } 
    #if defined(UART0_UBRRH)
    UART0_UBRRH = (unsigned char)((baudrate>>8)&0x80) ;
     964:	90 78       	andi	r25, 0x80	; 128
     966:	90 93 c5 00 	sts	0x00C5, r25
    #endif    
    UART0_UBRRL = (unsigned char) (baudrate&0x00FF);
     96a:	80 93 c4 00 	sts	0x00C4, r24
      
    /* Enable USART receiver and transmitter and receive complete interrupt */
    UART0_CONTROL = _BV(UART0_BIT_RXCIE)|(1<<UART0_BIT_RXEN)|(1<<UART0_BIT_TXEN);
     96e:	88 e9       	ldi	r24, 0x98	; 152
     970:	80 93 c1 00 	sts	0x00C1, r24
    /* Set frame format: asynchronous, 8data, no parity, 1stop bit */
    #ifdef UART0_CONTROLC
    #ifdef UART0_BIT_URSEL
    UART0_CONTROLC = (1<<UART0_BIT_URSEL)|(1<<UART0_BIT_UCSZ1)|(1<<UART0_BIT_UCSZ0);
    #else
    UART0_CONTROLC = (1<<UART0_BIT_UCSZ1)|(1<<UART0_BIT_UCSZ0);
     974:	86 e0       	ldi	r24, 0x06	; 6
     976:	80 93 c2 00 	sts	0x00C2, r24
     97a:	08 95       	ret

0000097c <uart_getc>:
    unsigned char tmptail;
    unsigned char data;
    unsigned char lastRxError;


    if ( UART_RxHead == UART_RxTail ) {
     97c:	90 91 4a 01 	lds	r25, 0x014A
     980:	80 91 49 01 	lds	r24, 0x0149
     984:	98 17       	cp	r25, r24
     986:	a9 f0       	breq	.+42     	; 0x9b2 <uart_getc+0x36>
        return UART_NO_DATA;   /* no data available */
    }
    
    /* calculate buffer index */
    tmptail = (UART_RxTail + 1) & UART_RX_BUFFER_MASK;
     988:	90 91 49 01 	lds	r25, 0x0149
     98c:	9f 5f       	subi	r25, 0xFF	; 255
     98e:	9f 71       	andi	r25, 0x1F	; 31
    
    /* get data from receive buffer */
    data = UART_RxBuf[tmptail];
     990:	e9 2f       	mov	r30, r25
     992:	f0 e0       	ldi	r31, 0x00	; 0
     994:	e3 5b       	subi	r30, 0xB3	; 179
     996:	fe 4f       	sbci	r31, 0xFE	; 254
     998:	20 81       	ld	r18, Z
    lastRxError = UART_LastRxError;
     99a:	80 91 48 01 	lds	r24, 0x0148
    
    /* store buffer index */
    UART_RxTail = tmptail; 
     99e:	90 93 49 01 	sts	0x0149, r25
    
    UART_LastRxError = 0;
     9a2:	10 92 48 01 	sts	0x0148, r1
    return (lastRxError << 8) + data;
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	98 2f       	mov	r25, r24
     9aa:	88 27       	eor	r24, r24
     9ac:	82 0f       	add	r24, r18
     9ae:	91 1d       	adc	r25, r1
     9b0:	08 95       	ret
    unsigned char data;
    unsigned char lastRxError;


    if ( UART_RxHead == UART_RxTail ) {
        return UART_NO_DATA;   /* no data available */
     9b2:	80 e0       	ldi	r24, 0x00	; 0
     9b4:	91 e0       	ldi	r25, 0x01	; 1
    UART_RxTail = tmptail; 
    
    UART_LastRxError = 0;
    return (lastRxError << 8) + data;

}/* uart_getc */
     9b6:	08 95       	ret

000009b8 <uart_putc>:
void uart_putc(unsigned char data)
{
    unsigned char tmphead;

    
    tmphead  = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
     9b8:	90 91 4c 01 	lds	r25, 0x014C
     9bc:	9f 5f       	subi	r25, 0xFF	; 255
     9be:	9f 71       	andi	r25, 0x1F	; 31
    
    while ( tmphead == UART_TxTail ){
     9c0:	20 91 4b 01 	lds	r18, 0x014B
     9c4:	92 17       	cp	r25, r18
     9c6:	e1 f3       	breq	.-8      	; 0x9c0 <uart_putc+0x8>
        ;/* wait for free space in buffer */
    }
    
    UART_TxBuf[tmphead] = data;
     9c8:	e9 2f       	mov	r30, r25
     9ca:	f0 e0       	ldi	r31, 0x00	; 0
     9cc:	e3 59       	subi	r30, 0x93	; 147
     9ce:	fe 4f       	sbci	r31, 0xFE	; 254
     9d0:	80 83       	st	Z, r24
    UART_TxHead = tmphead;
     9d2:	90 93 4c 01 	sts	0x014C, r25

    /* enable UDRE interrupt */
    UART0_CONTROL    |= _BV(UART0_UDRIE);
     9d6:	80 91 c1 00 	lds	r24, 0x00C1
     9da:	80 62       	ori	r24, 0x20	; 32
     9dc:	80 93 c1 00 	sts	0x00C1, r24
     9e0:	08 95       	ret

000009e2 <uart_puts>:
Purpose:  transmit string to UART
Input:    string to be transmitted
Returns:  none          
**************************************************************************/
void uart_puts(const char *s )
{
     9e2:	cf 93       	push	r28
     9e4:	df 93       	push	r29
     9e6:	ec 01       	movw	r28, r24
    while (*s) 
     9e8:	89 91       	ld	r24, Y+
     9ea:	88 23       	and	r24, r24
     9ec:	19 f0       	breq	.+6      	; 0x9f4 <uart_puts+0x12>
      uart_putc(*s++);
     9ee:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <uart_putc>
     9f2:	fa cf       	rjmp	.-12     	; 0x9e8 <uart_puts+0x6>

}/* uart_puts */
     9f4:	df 91       	pop	r29
     9f6:	cf 91       	pop	r28
     9f8:	08 95       	ret

000009fa <uart_puts_p>:
Purpose:  transmit string from program memory to UART
Input:    program memory string to be transmitted
Returns:  none
**************************************************************************/
void uart_puts_p(const char *progmem_s )
{
     9fa:	cf 93       	push	r28
     9fc:	df 93       	push	r29
     9fe:	fc 01       	movw	r30, r24
    register char c;
    
    while ( (c = pgm_read_byte(progmem_s++)) ) 
     a00:	84 91       	lpm	r24, Z
     a02:	ef 01       	movw	r28, r30
     a04:	21 96       	adiw	r28, 0x01	; 1
     a06:	88 23       	and	r24, r24
     a08:	21 f0       	breq	.+8      	; 0xa12 <uart_puts_p+0x18>
      uart_putc(c);
     a0a:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <uart_putc>
     a0e:	fe 01       	movw	r30, r28
     a10:	f7 cf       	rjmp	.-18     	; 0xa00 <uart_puts_p+0x6>

}/* uart_puts_p */
     a12:	df 91       	pop	r29
     a14:	cf 91       	pop	r28
     a16:	08 95       	ret

00000a18 <main>:

#include <src/initlib.h> 

#define NEED_TIME_STAMP

int main(void){
     a18:	cf 93       	push	r28
     a1a:	df 93       	push	r29
     a1c:	00 d0       	rcall	.+0      	; 0xa1e <main+0x6>
     a1e:	00 d0       	rcall	.+0      	; 0xa20 <main+0x8>
     a20:	cd b7       	in	r28, 0x3d	; 61
     a22:	de b7       	in	r29, 0x3e	; 62
	// disable global interrupt
	cli();
     a24:	f8 94       	cli
	timer_init();
     a26:	0e 94 f6 02 	call	0x5ec	; 0x5ec <timer_init>
	lcd_init();
     a2a:	0e 94 89 01 	call	0x312	; 0x312 <lcd_init>
	bldc_init();
     a2e:	0e 94 b6 02 	call	0x56c	; 0x56c <bldc_init>
	uart_init( UART_BAUD_SELECT(UART_BAUD_RATE,F_CPU) ); 
     a32:	87 e6       	ldi	r24, 0x67	; 103
     a34:	90 e0       	ldi	r25, 0x00	; 0
     a36:	0e 94 a5 04 	call	0x94a	; 0x94a <uart_init>
	// enable global interrupt
	sei();
     a3a:	78 94       	sei
	set_pid = true;
     a3c:	81 e0       	ldi	r24, 0x01	; 1
     a3e:	80 93 3c 01 	sts	0x013C, r24
			//hertz = 4 * (rpm/60);
			// calibration factor
		//	set_pid = true;
		//	get_rpm = false;
		//}
		sampling_rate = 0;
     a42:	10 92 34 01 	sts	0x0134, r1
     a46:	10 92 35 01 	sts	0x0135, r1
     a4a:	10 92 36 01 	sts	0x0136, r1
     a4e:	10 92 37 01 	sts	0x0137, r1
		data_sampling_time = 0;
     a52:	10 92 38 01 	sts	0x0138, r1
     a56:	10 92 39 01 	sts	0x0139, r1
     a5a:	10 92 3a 01 	sts	0x013A, r1
     a5e:	10 92 3b 01 	sts	0x013B, r1
		timer0_counting = 0;
     a62:	16 bc       	out	0x26, r1	; 38
		timer2_overflow = 0;
     a64:	10 92 40 01 	sts	0x0140, r1
     a68:	10 92 41 01 	sts	0x0141, r1
     a6c:	10 92 42 01 	sts	0x0142, r1
     a70:	10 92 43 01 	sts	0x0143, r1
		timer2_counting = 0;
     a74:	10 92 b2 00 	sts	0x00B2, r1
		while((timer0_counting <= timer0_counting_limit)){};
     a78:	86 b5       	in	r24, 0x26	; 38
     a7a:	85 31       	cpi	r24, 0x15	; 21
     a7c:	e8 f3       	brcs	.-6      	; 0xa78 <main+0x60>
		timer2_temp = timer2_counting;
     a7e:	60 91 b2 00 	lds	r22, 0x00B2
     a82:	70 e0       	ldi	r23, 0x00	; 0
     a84:	80 e0       	ldi	r24, 0x00	; 0
     a86:	90 e0       	ldi	r25, 0x00	; 0
     a88:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__floatunsisf>
     a8c:	60 93 18 01 	sts	0x0118, r22
     a90:	70 93 19 01 	sts	0x0119, r23
     a94:	80 93 1a 01 	sts	0x011A, r24
     a98:	90 93 1b 01 	sts	0x011B, r25
		timer2_overflow_temp = timer2_overflow;
     a9c:	80 91 40 01 	lds	r24, 0x0140
     aa0:	90 91 41 01 	lds	r25, 0x0141
     aa4:	a0 91 42 01 	lds	r26, 0x0142
     aa8:	b0 91 43 01 	lds	r27, 0x0143
     aac:	80 93 24 01 	sts	0x0124, r24
     ab0:	90 93 25 01 	sts	0x0125, r25
     ab4:	a0 93 26 01 	sts	0x0126, r26
     ab8:	b0 93 27 01 	sts	0x0127, r27
		while(sampling_rate <20){
     abc:	80 90 34 01 	lds	r8, 0x0134
     ac0:	90 90 35 01 	lds	r9, 0x0135
     ac4:	a0 90 36 01 	lds	r10, 0x0136
     ac8:	b0 90 37 01 	lds	r11, 0x0137
     acc:	20 e0       	ldi	r18, 0x00	; 0
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	40 ea       	ldi	r20, 0xA0	; 160
     ad2:	51 e4       	ldi	r21, 0x41	; 65
     ad4:	c5 01       	movw	r24, r10
     ad6:	b4 01       	movw	r22, r8
     ad8:	0e 94 3d 0a 	call	0x147a	; 0x147a <__cmpsf2>
     adc:	87 ff       	sbrs	r24, 7
     ade:	43 c0       	rjmp	.+134    	; 0xb66 <main+0x14e>
			sampling_rate = (double) timer2_overflow * 256 + (double)timer2_counting;
     ae0:	b0 90 b2 00 	lds	r11, 0x00B2
     ae4:	20 e0       	ldi	r18, 0x00	; 0
     ae6:	30 e0       	ldi	r19, 0x00	; 0
     ae8:	40 e8       	ldi	r20, 0x80	; 128
     aea:	53 e4       	ldi	r21, 0x43	; 67
     aec:	60 91 40 01 	lds	r22, 0x0140
     af0:	70 91 41 01 	lds	r23, 0x0141
     af4:	80 91 42 01 	lds	r24, 0x0142
     af8:	90 91 43 01 	lds	r25, 0x0143
     afc:	0e 94 87 0b 	call	0x170e	; 0x170e <__mulsf3>
     b00:	6b 01       	movw	r12, r22
     b02:	7c 01       	movw	r14, r24
     b04:	6b 2d       	mov	r22, r11
     b06:	70 e0       	ldi	r23, 0x00	; 0
     b08:	80 e0       	ldi	r24, 0x00	; 0
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__floatunsisf>
     b10:	9b 01       	movw	r18, r22
     b12:	ac 01       	movw	r20, r24
     b14:	c7 01       	movw	r24, r14
     b16:	b6 01       	movw	r22, r12
     b18:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__addsf3>
			sampling_rate = (double) sampling_rate * 5E-4/(rotation_sampling);
     b1c:	2f e6       	ldi	r18, 0x6F	; 111
     b1e:	32 e1       	ldi	r19, 0x12	; 18
     b20:	43 e0       	ldi	r20, 0x03	; 3
     b22:	5a e3       	ldi	r21, 0x3A	; 58
     b24:	0e 94 87 0b 	call	0x170e	; 0x170e <__mulsf3>
     b28:	20 e0       	ldi	r18, 0x00	; 0
     b2a:	30 e0       	ldi	r19, 0x00	; 0
     b2c:	40 ea       	ldi	r20, 0xA0	; 160
     b2e:	50 e4       	ldi	r21, 0x40	; 64
     b30:	0e 94 41 0a 	call	0x1482	; 0x1482 <__divsf3>
			sampling_rate = (double) 0.9531 * sampling_rate + (double) 0.0187;
     b34:	2d e5       	ldi	r18, 0x5D	; 93
     b36:	3e ef       	ldi	r19, 0xFE	; 254
     b38:	43 e7       	ldi	r20, 0x73	; 115
     b3a:	5f e3       	ldi	r21, 0x3F	; 63
     b3c:	0e 94 87 0b 	call	0x170e	; 0x170e <__mulsf3>
     b40:	2e eb       	ldi	r18, 0xBE	; 190
     b42:	30 e3       	ldi	r19, 0x30	; 48
     b44:	49 e9       	ldi	r20, 0x99	; 153
     b46:	5c e3       	ldi	r21, 0x3C	; 60
     b48:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__addsf3>
     b4c:	60 93 34 01 	sts	0x0134, r22
     b50:	70 93 35 01 	sts	0x0135, r23
     b54:	80 93 36 01 	sts	0x0136, r24
     b58:	90 93 37 01 	sts	0x0137, r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b5c:	85 e0       	ldi	r24, 0x05	; 5
     b5e:	8a 95       	dec	r24
     b60:	f1 f7       	brne	.-4      	; 0xb5e <main+0x146>
     b62:	00 00       	nop
     b64:	ab cf       	rjmp	.-170    	; 0xabc <main+0xa4>
			_delay_us(1);
			//serial_display(timer2_overflow);
			//uart_putc(10);
		}	
		// get total counting for TIMER2
		data_sampling_time = (double) timer2_overflow_temp * 256 + (double)timer2_temp;
     b66:	20 e0       	ldi	r18, 0x00	; 0
     b68:	30 e0       	ldi	r19, 0x00	; 0
     b6a:	40 e8       	ldi	r20, 0x80	; 128
     b6c:	53 e4       	ldi	r21, 0x43	; 67
     b6e:	60 91 24 01 	lds	r22, 0x0124
     b72:	70 91 25 01 	lds	r23, 0x0125
     b76:	80 91 26 01 	lds	r24, 0x0126
     b7a:	90 91 27 01 	lds	r25, 0x0127
     b7e:	0e 94 87 0b 	call	0x170e	; 0x170e <__mulsf3>
     b82:	20 91 18 01 	lds	r18, 0x0118
     b86:	30 91 19 01 	lds	r19, 0x0119
     b8a:	40 91 1a 01 	lds	r20, 0x011A
     b8e:	50 91 1b 01 	lds	r21, 0x011B
     b92:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__addsf3>
		// convert TIMER2 count to millisecond, for each rotation
		data_sampling_time = (double) data_sampling_time * 5E-4/(rotation_sampling);
     b96:	2f e6       	ldi	r18, 0x6F	; 111
     b98:	32 e1       	ldi	r19, 0x12	; 18
     b9a:	43 e0       	ldi	r20, 0x03	; 3
     b9c:	5a e3       	ldi	r21, 0x3A	; 58
     b9e:	0e 94 87 0b 	call	0x170e	; 0x170e <__mulsf3>
     ba2:	20 e0       	ldi	r18, 0x00	; 0
     ba4:	30 e0       	ldi	r19, 0x00	; 0
     ba6:	40 ea       	ldi	r20, 0xA0	; 160
     ba8:	50 e4       	ldi	r21, 0x40	; 64
     baa:	0e 94 41 0a 	call	0x1482	; 0x1482 <__divsf3>
		// Get millisecond based on calibration with ms reference
		data_sampling_time = (double) 0.9531 * data_sampling_time + (double) 0.0187;
     bae:	2d e5       	ldi	r18, 0x5D	; 93
     bb0:	3e ef       	ldi	r19, 0xFE	; 254
     bb2:	43 e7       	ldi	r20, 0x73	; 115
     bb4:	5f e3       	ldi	r21, 0x3F	; 63
     bb6:	0e 94 87 0b 	call	0x170e	; 0x170e <__mulsf3>
     bba:	2e eb       	ldi	r18, 0xBE	; 190
     bbc:	30 e3       	ldi	r19, 0x30	; 48
     bbe:	49 e9       	ldi	r20, 0x99	; 153
     bc0:	5c e3       	ldi	r21, 0x3C	; 60
     bc2:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__addsf3>
     bc6:	9b 01       	movw	r18, r22
     bc8:	ac 01       	movw	r20, r24
     bca:	60 93 38 01 	sts	0x0138, r22
     bce:	70 93 39 01 	sts	0x0139, r23
     bd2:	80 93 3a 01 	sts	0x013A, r24
     bd6:	90 93 3b 01 	sts	0x013B, r25
		
		//serial_display(sampling_rate);
		//uart_putc(9);
		
		// convert to rpm
		rpm = (double) 60E3/data_sampling_time;
     bda:	60 e0       	ldi	r22, 0x00	; 0
     bdc:	70 e6       	ldi	r23, 0x60	; 96
     bde:	8a e6       	ldi	r24, 0x6A	; 106
     be0:	97 e4       	ldi	r25, 0x47	; 71
     be2:	0e 94 41 0a 	call	0x1482	; 0x1482 <__divsf3>
     be6:	6b 01       	movw	r12, r22
     be8:	7c 01       	movw	r14, r24
     bea:	60 93 04 01 	sts	0x0104, r22
     bee:	70 93 05 01 	sts	0x0105, r23
     bf2:	80 93 06 01 	sts	0x0106, r24
     bf6:	90 93 07 01 	sts	0x0107, r25
		// Get hertz (1 rot = 4 Hz)
		hertz = 4 * (rpm/60);
     bfa:	20 e0       	ldi	r18, 0x00	; 0
     bfc:	30 e0       	ldi	r19, 0x00	; 0
     bfe:	40 e7       	ldi	r20, 0x70	; 112
     c00:	52 e4       	ldi	r21, 0x42	; 66
     c02:	0e 94 41 0a 	call	0x1482	; 0x1482 <__divsf3>
     c06:	20 e0       	ldi	r18, 0x00	; 0
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	40 e8       	ldi	r20, 0x80	; 128
     c0c:	50 e4       	ldi	r21, 0x40	; 64
     c0e:	0e 94 87 0b 	call	0x170e	; 0x170e <__mulsf3>
     c12:	60 93 1c 01 	sts	0x011C, r22
     c16:	70 93 1d 01 	sts	0x011D, r23
     c1a:	80 93 1e 01 	sts	0x011E, r24
     c1e:	90 93 1f 01 	sts	0x011F, r25
		//serial_display(rpm);
		//uart_putc(10);
		
		error = desired_rpm - rpm;
     c22:	a7 01       	movw	r20, r14
     c24:	96 01       	movw	r18, r12
     c26:	60 91 00 01 	lds	r22, 0x0100
     c2a:	70 91 01 01 	lds	r23, 0x0101
     c2e:	80 91 02 01 	lds	r24, 0x0102
     c32:	90 91 03 01 	lds	r25, 0x0103
     c36:	0e 94 d8 09 	call	0x13b0	; 0x13b0 <__subsf3>
     c3a:	60 93 30 01 	sts	0x0130, r22
     c3e:	70 93 31 01 	sts	0x0131, r23
     c42:	80 93 32 01 	sts	0x0132, r24
     c46:	90 93 33 01 	sts	0x0133, r25
		bldc_output += pid_output(error, last_error, sampling_rate);
     c4a:	c0 90 8a 00 	lds	r12, 0x008A
     c4e:	d0 90 8b 00 	lds	r13, 0x008B
     c52:	20 91 2c 01 	lds	r18, 0x012C
     c56:	30 91 2d 01 	lds	r19, 0x012D
     c5a:	40 91 2e 01 	lds	r20, 0x012E
     c5e:	50 91 2f 01 	lds	r21, 0x012F
     c62:	85 01       	movw	r16, r10
     c64:	74 01       	movw	r14, r8
     c66:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <pid_output>
     c6a:	9b 01       	movw	r18, r22
     c6c:	ac 01       	movw	r20, r24
     c6e:	b6 01       	movw	r22, r12
     c70:	80 e0       	ldi	r24, 0x00	; 0
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	29 83       	std	Y+1, r18	; 0x01
     c76:	3a 83       	std	Y+2, r19	; 0x02
     c78:	4b 83       	std	Y+3, r20	; 0x03
     c7a:	5c 83       	std	Y+4, r21	; 0x04
     c7c:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__floatunsisf>
     c80:	29 81       	ldd	r18, Y+1	; 0x01
     c82:	3a 81       	ldd	r19, Y+2	; 0x02
     c84:	4b 81       	ldd	r20, Y+3	; 0x03
     c86:	5c 81       	ldd	r21, Y+4	; 0x04
     c88:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__addsf3>
     c8c:	0e 94 a9 0a 	call	0x1552	; 0x1552 <__fixunssfsi>
     c90:	70 93 8b 00 	sts	0x008B, r23
     c94:	60 93 8a 00 	sts	0x008A, r22
		last_error = error;
     c98:	80 91 30 01 	lds	r24, 0x0130
     c9c:	90 91 31 01 	lds	r25, 0x0131
     ca0:	a0 91 32 01 	lds	r26, 0x0132
     ca4:	b0 91 33 01 	lds	r27, 0x0133
     ca8:	80 93 2c 01 	sts	0x012C, r24
     cac:	90 93 2d 01 	sts	0x012D, r25
     cb0:	a0 93 2e 01 	sts	0x012E, r26
     cb4:	b0 93 2f 01 	sts	0x012F, r27
		//if((timer2_overflow/100) >= 2000){
		//	bldc_init();
		//}
		
		
	}
     cb8:	c4 ce       	rjmp	.-632    	; 0xa42 <main+0x2a>

00000cba <vfprintf>:
     cba:	a3 e1       	ldi	r26, 0x13	; 19
     cbc:	b0 e0       	ldi	r27, 0x00	; 0
     cbe:	e3 e6       	ldi	r30, 0x63	; 99
     cc0:	f6 e0       	ldi	r31, 0x06	; 6
     cc2:	0c 94 ea 0b 	jmp	0x17d4	; 0x17d4 <__prologue_saves__>
     cc6:	7c 01       	movw	r14, r24
     cc8:	1b 01       	movw	r2, r22
     cca:	6a 01       	movw	r12, r20
     ccc:	fc 01       	movw	r30, r24
     cce:	17 82       	std	Z+7, r1	; 0x07
     cd0:	16 82       	std	Z+6, r1	; 0x06
     cd2:	83 81       	ldd	r24, Z+3	; 0x03
     cd4:	81 ff       	sbrs	r24, 1
     cd6:	66 c3       	rjmp	.+1740   	; 0x13a4 <vfprintf+0x6ea>
     cd8:	be 01       	movw	r22, r28
     cda:	6f 5f       	subi	r22, 0xFF	; 255
     cdc:	7f 4f       	sbci	r23, 0xFF	; 255
     cde:	4b 01       	movw	r8, r22
     ce0:	f7 01       	movw	r30, r14
     ce2:	93 81       	ldd	r25, Z+3	; 0x03
     ce4:	f1 01       	movw	r30, r2
     ce6:	93 fd       	sbrc	r25, 3
     ce8:	85 91       	lpm	r24, Z+
     cea:	93 ff       	sbrs	r25, 3
     cec:	81 91       	ld	r24, Z+
     cee:	1f 01       	movw	r2, r30
     cf0:	88 23       	and	r24, r24
     cf2:	09 f4       	brne	.+2      	; 0xcf6 <vfprintf+0x3c>
     cf4:	53 c3       	rjmp	.+1702   	; 0x139c <vfprintf+0x6e2>
     cf6:	85 32       	cpi	r24, 0x25	; 37
     cf8:	39 f4       	brne	.+14     	; 0xd08 <vfprintf+0x4e>
     cfa:	93 fd       	sbrc	r25, 3
     cfc:	85 91       	lpm	r24, Z+
     cfe:	93 ff       	sbrs	r25, 3
     d00:	81 91       	ld	r24, Z+
     d02:	1f 01       	movw	r2, r30
     d04:	85 32       	cpi	r24, 0x25	; 37
     d06:	39 f4       	brne	.+14     	; 0xd16 <vfprintf+0x5c>
     d08:	b7 01       	movw	r22, r14
     d0a:	90 e0       	ldi	r25, 0x00	; 0
     d0c:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
     d10:	56 01       	movw	r10, r12
     d12:	65 01       	movw	r12, r10
     d14:	e5 cf       	rjmp	.-54     	; 0xce0 <vfprintf+0x26>
     d16:	10 e0       	ldi	r17, 0x00	; 0
     d18:	51 2c       	mov	r5, r1
     d1a:	20 e0       	ldi	r18, 0x00	; 0
     d1c:	20 32       	cpi	r18, 0x20	; 32
     d1e:	a0 f4       	brcc	.+40     	; 0xd48 <vfprintf+0x8e>
     d20:	8b 32       	cpi	r24, 0x2B	; 43
     d22:	69 f0       	breq	.+26     	; 0xd3e <vfprintf+0x84>
     d24:	30 f4       	brcc	.+12     	; 0xd32 <vfprintf+0x78>
     d26:	80 32       	cpi	r24, 0x20	; 32
     d28:	59 f0       	breq	.+22     	; 0xd40 <vfprintf+0x86>
     d2a:	83 32       	cpi	r24, 0x23	; 35
     d2c:	69 f4       	brne	.+26     	; 0xd48 <vfprintf+0x8e>
     d2e:	20 61       	ori	r18, 0x10	; 16
     d30:	2c c0       	rjmp	.+88     	; 0xd8a <vfprintf+0xd0>
     d32:	8d 32       	cpi	r24, 0x2D	; 45
     d34:	39 f0       	breq	.+14     	; 0xd44 <vfprintf+0x8a>
     d36:	80 33       	cpi	r24, 0x30	; 48
     d38:	39 f4       	brne	.+14     	; 0xd48 <vfprintf+0x8e>
     d3a:	21 60       	ori	r18, 0x01	; 1
     d3c:	26 c0       	rjmp	.+76     	; 0xd8a <vfprintf+0xd0>
     d3e:	22 60       	ori	r18, 0x02	; 2
     d40:	24 60       	ori	r18, 0x04	; 4
     d42:	23 c0       	rjmp	.+70     	; 0xd8a <vfprintf+0xd0>
     d44:	28 60       	ori	r18, 0x08	; 8
     d46:	21 c0       	rjmp	.+66     	; 0xd8a <vfprintf+0xd0>
     d48:	27 fd       	sbrc	r18, 7
     d4a:	27 c0       	rjmp	.+78     	; 0xd9a <vfprintf+0xe0>
     d4c:	30 ed       	ldi	r19, 0xD0	; 208
     d4e:	38 0f       	add	r19, r24
     d50:	3a 30       	cpi	r19, 0x0A	; 10
     d52:	78 f4       	brcc	.+30     	; 0xd72 <vfprintf+0xb8>
     d54:	26 ff       	sbrs	r18, 6
     d56:	06 c0       	rjmp	.+12     	; 0xd64 <vfprintf+0xaa>
     d58:	fa e0       	ldi	r31, 0x0A	; 10
     d5a:	1f 9f       	mul	r17, r31
     d5c:	30 0d       	add	r19, r0
     d5e:	11 24       	eor	r1, r1
     d60:	13 2f       	mov	r17, r19
     d62:	13 c0       	rjmp	.+38     	; 0xd8a <vfprintf+0xd0>
     d64:	6a e0       	ldi	r22, 0x0A	; 10
     d66:	56 9e       	mul	r5, r22
     d68:	30 0d       	add	r19, r0
     d6a:	11 24       	eor	r1, r1
     d6c:	53 2e       	mov	r5, r19
     d6e:	20 62       	ori	r18, 0x20	; 32
     d70:	0c c0       	rjmp	.+24     	; 0xd8a <vfprintf+0xd0>
     d72:	8e 32       	cpi	r24, 0x2E	; 46
     d74:	21 f4       	brne	.+8      	; 0xd7e <vfprintf+0xc4>
     d76:	26 fd       	sbrc	r18, 6
     d78:	11 c3       	rjmp	.+1570   	; 0x139c <vfprintf+0x6e2>
     d7a:	20 64       	ori	r18, 0x40	; 64
     d7c:	06 c0       	rjmp	.+12     	; 0xd8a <vfprintf+0xd0>
     d7e:	8c 36       	cpi	r24, 0x6C	; 108
     d80:	11 f4       	brne	.+4      	; 0xd86 <vfprintf+0xcc>
     d82:	20 68       	ori	r18, 0x80	; 128
     d84:	02 c0       	rjmp	.+4      	; 0xd8a <vfprintf+0xd0>
     d86:	88 36       	cpi	r24, 0x68	; 104
     d88:	41 f4       	brne	.+16     	; 0xd9a <vfprintf+0xe0>
     d8a:	f1 01       	movw	r30, r2
     d8c:	93 fd       	sbrc	r25, 3
     d8e:	85 91       	lpm	r24, Z+
     d90:	93 ff       	sbrs	r25, 3
     d92:	81 91       	ld	r24, Z+
     d94:	1f 01       	movw	r2, r30
     d96:	81 11       	cpse	r24, r1
     d98:	c1 cf       	rjmp	.-126    	; 0xd1c <vfprintf+0x62>
     d9a:	9b eb       	ldi	r25, 0xBB	; 187
     d9c:	98 0f       	add	r25, r24
     d9e:	93 30       	cpi	r25, 0x03	; 3
     da0:	18 f4       	brcc	.+6      	; 0xda8 <vfprintf+0xee>
     da2:	20 61       	ori	r18, 0x10	; 16
     da4:	80 5e       	subi	r24, 0xE0	; 224
     da6:	06 c0       	rjmp	.+12     	; 0xdb4 <vfprintf+0xfa>
     da8:	9b e9       	ldi	r25, 0x9B	; 155
     daa:	98 0f       	add	r25, r24
     dac:	93 30       	cpi	r25, 0x03	; 3
     dae:	08 f0       	brcs	.+2      	; 0xdb2 <vfprintf+0xf8>
     db0:	aa c1       	rjmp	.+852    	; 0x1106 <vfprintf+0x44c>
     db2:	2f 7e       	andi	r18, 0xEF	; 239
     db4:	26 ff       	sbrs	r18, 6
     db6:	16 e0       	ldi	r17, 0x06	; 6
     db8:	2f 73       	andi	r18, 0x3F	; 63
     dba:	72 2e       	mov	r7, r18
     dbc:	85 36       	cpi	r24, 0x65	; 101
     dbe:	21 f4       	brne	.+8      	; 0xdc8 <vfprintf+0x10e>
     dc0:	f2 2f       	mov	r31, r18
     dc2:	f0 64       	ori	r31, 0x40	; 64
     dc4:	7f 2e       	mov	r7, r31
     dc6:	08 c0       	rjmp	.+16     	; 0xdd8 <vfprintf+0x11e>
     dc8:	86 36       	cpi	r24, 0x66	; 102
     dca:	21 f4       	brne	.+8      	; 0xdd4 <vfprintf+0x11a>
     dcc:	62 2f       	mov	r22, r18
     dce:	60 68       	ori	r22, 0x80	; 128
     dd0:	76 2e       	mov	r7, r22
     dd2:	02 c0       	rjmp	.+4      	; 0xdd8 <vfprintf+0x11e>
     dd4:	11 11       	cpse	r17, r1
     dd6:	11 50       	subi	r17, 0x01	; 1
     dd8:	77 fe       	sbrs	r7, 7
     dda:	07 c0       	rjmp	.+14     	; 0xdea <vfprintf+0x130>
     ddc:	1c 33       	cpi	r17, 0x3C	; 60
     dde:	48 f4       	brcc	.+18     	; 0xdf2 <vfprintf+0x138>
     de0:	44 24       	eor	r4, r4
     de2:	43 94       	inc	r4
     de4:	41 0e       	add	r4, r17
     de6:	27 e0       	ldi	r18, 0x07	; 7
     de8:	0b c0       	rjmp	.+22     	; 0xe00 <vfprintf+0x146>
     dea:	18 30       	cpi	r17, 0x08	; 8
     dec:	30 f4       	brcc	.+12     	; 0xdfa <vfprintf+0x140>
     dee:	21 2f       	mov	r18, r17
     df0:	06 c0       	rjmp	.+12     	; 0xdfe <vfprintf+0x144>
     df2:	27 e0       	ldi	r18, 0x07	; 7
     df4:	4c e3       	ldi	r20, 0x3C	; 60
     df6:	44 2e       	mov	r4, r20
     df8:	03 c0       	rjmp	.+6      	; 0xe00 <vfprintf+0x146>
     dfa:	27 e0       	ldi	r18, 0x07	; 7
     dfc:	17 e0       	ldi	r17, 0x07	; 7
     dfe:	41 2c       	mov	r4, r1
     e00:	56 01       	movw	r10, r12
     e02:	74 e0       	ldi	r23, 0x04	; 4
     e04:	a7 0e       	add	r10, r23
     e06:	b1 1c       	adc	r11, r1
     e08:	f6 01       	movw	r30, r12
     e0a:	60 81       	ld	r22, Z
     e0c:	71 81       	ldd	r23, Z+1	; 0x01
     e0e:	82 81       	ldd	r24, Z+2	; 0x02
     e10:	93 81       	ldd	r25, Z+3	; 0x03
     e12:	04 2d       	mov	r16, r4
     e14:	a4 01       	movw	r20, r8
     e16:	0e 94 25 0c 	call	0x184a	; 0x184a <__ftoa_engine>
     e1a:	6c 01       	movw	r12, r24
     e1c:	09 81       	ldd	r16, Y+1	; 0x01
     e1e:	00 ff       	sbrs	r16, 0
     e20:	02 c0       	rjmp	.+4      	; 0xe26 <vfprintf+0x16c>
     e22:	03 ff       	sbrs	r16, 3
     e24:	06 c0       	rjmp	.+12     	; 0xe32 <vfprintf+0x178>
     e26:	71 fc       	sbrc	r7, 1
     e28:	07 c0       	rjmp	.+14     	; 0xe38 <vfprintf+0x17e>
     e2a:	72 fc       	sbrc	r7, 2
     e2c:	08 c0       	rjmp	.+16     	; 0xe3e <vfprintf+0x184>
     e2e:	61 2c       	mov	r6, r1
     e30:	08 c0       	rjmp	.+16     	; 0xe42 <vfprintf+0x188>
     e32:	3d e2       	ldi	r19, 0x2D	; 45
     e34:	63 2e       	mov	r6, r19
     e36:	05 c0       	rjmp	.+10     	; 0xe42 <vfprintf+0x188>
     e38:	2b e2       	ldi	r18, 0x2B	; 43
     e3a:	62 2e       	mov	r6, r18
     e3c:	02 c0       	rjmp	.+4      	; 0xe42 <vfprintf+0x188>
     e3e:	90 e2       	ldi	r25, 0x20	; 32
     e40:	69 2e       	mov	r6, r25
     e42:	80 2f       	mov	r24, r16
     e44:	8c 70       	andi	r24, 0x0C	; 12
     e46:	99 f1       	breq	.+102    	; 0xeae <vfprintf+0x1f4>
     e48:	66 20       	and	r6, r6
     e4a:	11 f0       	breq	.+4      	; 0xe50 <vfprintf+0x196>
     e4c:	84 e0       	ldi	r24, 0x04	; 4
     e4e:	01 c0       	rjmp	.+2      	; 0xe52 <vfprintf+0x198>
     e50:	83 e0       	ldi	r24, 0x03	; 3
     e52:	85 15       	cp	r24, r5
     e54:	10 f0       	brcs	.+4      	; 0xe5a <vfprintf+0x1a0>
     e56:	51 2c       	mov	r5, r1
     e58:	0b c0       	rjmp	.+22     	; 0xe70 <vfprintf+0x1b6>
     e5a:	58 1a       	sub	r5, r24
     e5c:	73 fc       	sbrc	r7, 3
     e5e:	08 c0       	rjmp	.+16     	; 0xe70 <vfprintf+0x1b6>
     e60:	b7 01       	movw	r22, r14
     e62:	80 e2       	ldi	r24, 0x20	; 32
     e64:	90 e0       	ldi	r25, 0x00	; 0
     e66:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
     e6a:	5a 94       	dec	r5
     e6c:	c9 f7       	brne	.-14     	; 0xe60 <vfprintf+0x1a6>
     e6e:	f3 cf       	rjmp	.-26     	; 0xe56 <vfprintf+0x19c>
     e70:	66 20       	and	r6, r6
     e72:	29 f0       	breq	.+10     	; 0xe7e <vfprintf+0x1c4>
     e74:	b7 01       	movw	r22, r14
     e76:	86 2d       	mov	r24, r6
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
     e7e:	03 fd       	sbrc	r16, 3
     e80:	03 c0       	rjmp	.+6      	; 0xe88 <vfprintf+0x1ce>
     e82:	03 e7       	ldi	r16, 0x73	; 115
     e84:	10 e0       	ldi	r17, 0x00	; 0
     e86:	02 c0       	rjmp	.+4      	; 0xe8c <vfprintf+0x1d2>
     e88:	0f e6       	ldi	r16, 0x6F	; 111
     e8a:	10 e0       	ldi	r17, 0x00	; 0
     e8c:	f7 2d       	mov	r31, r7
     e8e:	f0 71       	andi	r31, 0x10	; 16
     e90:	7f 2e       	mov	r7, r31
     e92:	f8 01       	movw	r30, r16
     e94:	84 91       	lpm	r24, Z
     e96:	88 23       	and	r24, r24
     e98:	09 f4       	brne	.+2      	; 0xe9c <vfprintf+0x1e2>
     e9a:	76 c2       	rjmp	.+1260   	; 0x1388 <vfprintf+0x6ce>
     e9c:	71 10       	cpse	r7, r1
     e9e:	80 52       	subi	r24, 0x20	; 32
     ea0:	b7 01       	movw	r22, r14
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
     ea8:	0f 5f       	subi	r16, 0xFF	; 255
     eaa:	1f 4f       	sbci	r17, 0xFF	; 255
     eac:	f2 cf       	rjmp	.-28     	; 0xe92 <vfprintf+0x1d8>
     eae:	77 fe       	sbrs	r7, 7
     eb0:	0f c0       	rjmp	.+30     	; 0xed0 <vfprintf+0x216>
     eb2:	4c 0c       	add	r4, r12
     eb4:	04 ff       	sbrs	r16, 4
     eb6:	04 c0       	rjmp	.+8      	; 0xec0 <vfprintf+0x206>
     eb8:	8a 81       	ldd	r24, Y+2	; 0x02
     eba:	81 33       	cpi	r24, 0x31	; 49
     ebc:	09 f4       	brne	.+2      	; 0xec0 <vfprintf+0x206>
     ebe:	4a 94       	dec	r4
     ec0:	14 14       	cp	r1, r4
     ec2:	74 f5       	brge	.+92     	; 0xf20 <vfprintf+0x266>
     ec4:	f8 e0       	ldi	r31, 0x08	; 8
     ec6:	f4 15       	cp	r31, r4
     ec8:	78 f5       	brcc	.+94     	; 0xf28 <vfprintf+0x26e>
     eca:	88 e0       	ldi	r24, 0x08	; 8
     ecc:	48 2e       	mov	r4, r24
     ece:	2c c0       	rjmp	.+88     	; 0xf28 <vfprintf+0x26e>
     ed0:	76 fc       	sbrc	r7, 6
     ed2:	2a c0       	rjmp	.+84     	; 0xf28 <vfprintf+0x26e>
     ed4:	81 2f       	mov	r24, r17
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	8c 15       	cp	r24, r12
     eda:	9d 05       	cpc	r25, r13
     edc:	9c f0       	brlt	.+38     	; 0xf04 <vfprintf+0x24a>
     ede:	6c ef       	ldi	r22, 0xFC	; 252
     ee0:	c6 16       	cp	r12, r22
     ee2:	6f ef       	ldi	r22, 0xFF	; 255
     ee4:	d6 06       	cpc	r13, r22
     ee6:	74 f0       	brlt	.+28     	; 0xf04 <vfprintf+0x24a>
     ee8:	77 2d       	mov	r23, r7
     eea:	70 68       	ori	r23, 0x80	; 128
     eec:	77 2e       	mov	r7, r23
     eee:	0a c0       	rjmp	.+20     	; 0xf04 <vfprintf+0x24a>
     ef0:	e2 e0       	ldi	r30, 0x02	; 2
     ef2:	f0 e0       	ldi	r31, 0x00	; 0
     ef4:	ec 0f       	add	r30, r28
     ef6:	fd 1f       	adc	r31, r29
     ef8:	e1 0f       	add	r30, r17
     efa:	f1 1d       	adc	r31, r1
     efc:	80 81       	ld	r24, Z
     efe:	80 33       	cpi	r24, 0x30	; 48
     f00:	19 f4       	brne	.+6      	; 0xf08 <vfprintf+0x24e>
     f02:	11 50       	subi	r17, 0x01	; 1
     f04:	11 11       	cpse	r17, r1
     f06:	f4 cf       	rjmp	.-24     	; 0xef0 <vfprintf+0x236>
     f08:	77 fe       	sbrs	r7, 7
     f0a:	0e c0       	rjmp	.+28     	; 0xf28 <vfprintf+0x26e>
     f0c:	44 24       	eor	r4, r4
     f0e:	43 94       	inc	r4
     f10:	41 0e       	add	r4, r17
     f12:	81 2f       	mov	r24, r17
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	c8 16       	cp	r12, r24
     f18:	d9 06       	cpc	r13, r25
     f1a:	2c f4       	brge	.+10     	; 0xf26 <vfprintf+0x26c>
     f1c:	1c 19       	sub	r17, r12
     f1e:	04 c0       	rjmp	.+8      	; 0xf28 <vfprintf+0x26e>
     f20:	44 24       	eor	r4, r4
     f22:	43 94       	inc	r4
     f24:	01 c0       	rjmp	.+2      	; 0xf28 <vfprintf+0x26e>
     f26:	10 e0       	ldi	r17, 0x00	; 0
     f28:	77 fe       	sbrs	r7, 7
     f2a:	07 c0       	rjmp	.+14     	; 0xf3a <vfprintf+0x280>
     f2c:	1c 14       	cp	r1, r12
     f2e:	1d 04       	cpc	r1, r13
     f30:	3c f4       	brge	.+14     	; 0xf40 <vfprintf+0x286>
     f32:	96 01       	movw	r18, r12
     f34:	2f 5f       	subi	r18, 0xFF	; 255
     f36:	3f 4f       	sbci	r19, 0xFF	; 255
     f38:	05 c0       	rjmp	.+10     	; 0xf44 <vfprintf+0x28a>
     f3a:	25 e0       	ldi	r18, 0x05	; 5
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	02 c0       	rjmp	.+4      	; 0xf44 <vfprintf+0x28a>
     f40:	21 e0       	ldi	r18, 0x01	; 1
     f42:	30 e0       	ldi	r19, 0x00	; 0
     f44:	66 20       	and	r6, r6
     f46:	11 f0       	breq	.+4      	; 0xf4c <vfprintf+0x292>
     f48:	2f 5f       	subi	r18, 0xFF	; 255
     f4a:	3f 4f       	sbci	r19, 0xFF	; 255
     f4c:	11 23       	and	r17, r17
     f4e:	31 f0       	breq	.+12     	; 0xf5c <vfprintf+0x2a2>
     f50:	41 2f       	mov	r20, r17
     f52:	50 e0       	ldi	r21, 0x00	; 0
     f54:	4f 5f       	subi	r20, 0xFF	; 255
     f56:	5f 4f       	sbci	r21, 0xFF	; 255
     f58:	24 0f       	add	r18, r20
     f5a:	35 1f       	adc	r19, r21
     f5c:	45 2d       	mov	r20, r5
     f5e:	50 e0       	ldi	r21, 0x00	; 0
     f60:	24 17       	cp	r18, r20
     f62:	35 07       	cpc	r19, r21
     f64:	14 f4       	brge	.+4      	; 0xf6a <vfprintf+0x2b0>
     f66:	52 1a       	sub	r5, r18
     f68:	01 c0       	rjmp	.+2      	; 0xf6c <vfprintf+0x2b2>
     f6a:	51 2c       	mov	r5, r1
     f6c:	87 2d       	mov	r24, r7
     f6e:	89 70       	andi	r24, 0x09	; 9
     f70:	49 f4       	brne	.+18     	; 0xf84 <vfprintf+0x2ca>
     f72:	55 20       	and	r5, r5
     f74:	39 f0       	breq	.+14     	; 0xf84 <vfprintf+0x2ca>
     f76:	b7 01       	movw	r22, r14
     f78:	80 e2       	ldi	r24, 0x20	; 32
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
     f80:	5a 94       	dec	r5
     f82:	f7 cf       	rjmp	.-18     	; 0xf72 <vfprintf+0x2b8>
     f84:	66 20       	and	r6, r6
     f86:	29 f0       	breq	.+10     	; 0xf92 <vfprintf+0x2d8>
     f88:	b7 01       	movw	r22, r14
     f8a:	86 2d       	mov	r24, r6
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
     f92:	73 fc       	sbrc	r7, 3
     f94:	09 c0       	rjmp	.+18     	; 0xfa8 <vfprintf+0x2ee>
     f96:	55 20       	and	r5, r5
     f98:	39 f0       	breq	.+14     	; 0xfa8 <vfprintf+0x2ee>
     f9a:	b7 01       	movw	r22, r14
     f9c:	80 e3       	ldi	r24, 0x30	; 48
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
     fa4:	5a 94       	dec	r5
     fa6:	f7 cf       	rjmp	.-18     	; 0xf96 <vfprintf+0x2dc>
     fa8:	77 fe       	sbrs	r7, 7
     faa:	5f c0       	rjmp	.+190    	; 0x106a <vfprintf+0x3b0>
     fac:	9c 2d       	mov	r25, r12
     fae:	8d 2d       	mov	r24, r13
     fb0:	d7 fe       	sbrs	r13, 7
     fb2:	02 c0       	rjmp	.+4      	; 0xfb8 <vfprintf+0x2fe>
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	80 e0       	ldi	r24, 0x00	; 0
     fb8:	69 2e       	mov	r6, r25
     fba:	78 2e       	mov	r7, r24
     fbc:	40 e0       	ldi	r20, 0x00	; 0
     fbe:	50 e0       	ldi	r21, 0x00	; 0
     fc0:	c6 01       	movw	r24, r12
     fc2:	84 19       	sub	r24, r4
     fc4:	91 09       	sbc	r25, r1
     fc6:	9d 87       	std	Y+13, r25	; 0x0d
     fc8:	8c 87       	std	Y+12, r24	; 0x0c
     fca:	96 01       	movw	r18, r12
     fcc:	26 19       	sub	r18, r6
     fce:	37 09       	sbc	r19, r7
     fd0:	28 0d       	add	r18, r8
     fd2:	39 1d       	adc	r19, r9
     fd4:	81 2f       	mov	r24, r17
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	ee 27       	eor	r30, r30
     fda:	ff 27       	eor	r31, r31
     fdc:	e8 1b       	sub	r30, r24
     fde:	f9 0b       	sbc	r31, r25
     fe0:	ff 87       	std	Y+15, r31	; 0x0f
     fe2:	ee 87       	std	Y+14, r30	; 0x0e
     fe4:	ff ef       	ldi	r31, 0xFF	; 255
     fe6:	6f 16       	cp	r6, r31
     fe8:	7f 06       	cpc	r7, r31
     fea:	69 f4       	brne	.+26     	; 0x1006 <vfprintf+0x34c>
     fec:	b7 01       	movw	r22, r14
     fee:	8e e2       	ldi	r24, 0x2E	; 46
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	2b 8b       	std	Y+19, r18	; 0x13
     ff4:	3a 8b       	std	Y+18, r19	; 0x12
     ff6:	48 8b       	std	Y+16, r20	; 0x10
     ff8:	59 8b       	std	Y+17, r21	; 0x11
     ffa:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
     ffe:	59 89       	ldd	r21, Y+17	; 0x11
    1000:	48 89       	ldd	r20, Y+16	; 0x10
    1002:	3a 89       	ldd	r19, Y+18	; 0x12
    1004:	2b 89       	ldd	r18, Y+19	; 0x13
    1006:	c6 14       	cp	r12, r6
    1008:	d7 04       	cpc	r13, r7
    100a:	54 f0       	brlt	.+20     	; 0x1020 <vfprintf+0x366>
    100c:	6c 85       	ldd	r22, Y+12	; 0x0c
    100e:	7d 85       	ldd	r23, Y+13	; 0x0d
    1010:	66 15       	cp	r22, r6
    1012:	77 05       	cpc	r23, r7
    1014:	2c f4       	brge	.+10     	; 0x1020 <vfprintf+0x366>
    1016:	f9 01       	movw	r30, r18
    1018:	e4 0f       	add	r30, r20
    101a:	f5 1f       	adc	r31, r21
    101c:	81 81       	ldd	r24, Z+1	; 0x01
    101e:	01 c0       	rjmp	.+2      	; 0x1022 <vfprintf+0x368>
    1020:	80 e3       	ldi	r24, 0x30	; 48
    1022:	71 e0       	ldi	r23, 0x01	; 1
    1024:	67 1a       	sub	r6, r23
    1026:	71 08       	sbc	r7, r1
    1028:	4f 5f       	subi	r20, 0xFF	; 255
    102a:	5f 4f       	sbci	r21, 0xFF	; 255
    102c:	ee 85       	ldd	r30, Y+14	; 0x0e
    102e:	ff 85       	ldd	r31, Y+15	; 0x0f
    1030:	6e 16       	cp	r6, r30
    1032:	7f 06       	cpc	r7, r31
    1034:	6c f0       	brlt	.+26     	; 0x1050 <vfprintf+0x396>
    1036:	b7 01       	movw	r22, r14
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	2b 8b       	std	Y+19, r18	; 0x13
    103c:	3a 8b       	std	Y+18, r19	; 0x12
    103e:	48 8b       	std	Y+16, r20	; 0x10
    1040:	59 8b       	std	Y+17, r21	; 0x11
    1042:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
    1046:	2b 89       	ldd	r18, Y+19	; 0x13
    1048:	3a 89       	ldd	r19, Y+18	; 0x12
    104a:	48 89       	ldd	r20, Y+16	; 0x10
    104c:	59 89       	ldd	r21, Y+17	; 0x11
    104e:	ca cf       	rjmp	.-108    	; 0xfe4 <vfprintf+0x32a>
    1050:	6c 14       	cp	r6, r12
    1052:	7d 04       	cpc	r7, r13
    1054:	39 f4       	brne	.+14     	; 0x1064 <vfprintf+0x3aa>
    1056:	9a 81       	ldd	r25, Y+2	; 0x02
    1058:	96 33       	cpi	r25, 0x36	; 54
    105a:	18 f4       	brcc	.+6      	; 0x1062 <vfprintf+0x3a8>
    105c:	95 33       	cpi	r25, 0x35	; 53
    105e:	11 f4       	brne	.+4      	; 0x1064 <vfprintf+0x3aa>
    1060:	04 ff       	sbrs	r16, 4
    1062:	81 e3       	ldi	r24, 0x31	; 49
    1064:	b7 01       	movw	r22, r14
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	4b c0       	rjmp	.+150    	; 0x1100 <vfprintf+0x446>
    106a:	8a 81       	ldd	r24, Y+2	; 0x02
    106c:	81 33       	cpi	r24, 0x31	; 49
    106e:	09 f0       	breq	.+2      	; 0x1072 <vfprintf+0x3b8>
    1070:	0f 7e       	andi	r16, 0xEF	; 239
    1072:	b7 01       	movw	r22, r14
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
    107a:	11 11       	cpse	r17, r1
    107c:	05 c0       	rjmp	.+10     	; 0x1088 <vfprintf+0x3ce>
    107e:	74 fe       	sbrs	r7, 4
    1080:	18 c0       	rjmp	.+48     	; 0x10b2 <vfprintf+0x3f8>
    1082:	85 e4       	ldi	r24, 0x45	; 69
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	17 c0       	rjmp	.+46     	; 0x10b6 <vfprintf+0x3fc>
    1088:	b7 01       	movw	r22, r14
    108a:	8e e2       	ldi	r24, 0x2E	; 46
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
    1092:	82 e0       	ldi	r24, 0x02	; 2
    1094:	66 24       	eor	r6, r6
    1096:	63 94       	inc	r6
    1098:	68 0e       	add	r6, r24
    109a:	f4 01       	movw	r30, r8
    109c:	e8 0f       	add	r30, r24
    109e:	f1 1d       	adc	r31, r1
    10a0:	80 81       	ld	r24, Z
    10a2:	b7 01       	movw	r22, r14
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
    10aa:	11 50       	subi	r17, 0x01	; 1
    10ac:	41 f3       	breq	.-48     	; 0x107e <vfprintf+0x3c4>
    10ae:	86 2d       	mov	r24, r6
    10b0:	f1 cf       	rjmp	.-30     	; 0x1094 <vfprintf+0x3da>
    10b2:	85 e6       	ldi	r24, 0x65	; 101
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	b7 01       	movw	r22, r14
    10b8:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
    10bc:	d7 fc       	sbrc	r13, 7
    10be:	05 c0       	rjmp	.+10     	; 0x10ca <vfprintf+0x410>
    10c0:	c1 14       	cp	r12, r1
    10c2:	d1 04       	cpc	r13, r1
    10c4:	39 f4       	brne	.+14     	; 0x10d4 <vfprintf+0x41a>
    10c6:	04 ff       	sbrs	r16, 4
    10c8:	05 c0       	rjmp	.+10     	; 0x10d4 <vfprintf+0x41a>
    10ca:	d1 94       	neg	r13
    10cc:	c1 94       	neg	r12
    10ce:	d1 08       	sbc	r13, r1
    10d0:	8d e2       	ldi	r24, 0x2D	; 45
    10d2:	01 c0       	rjmp	.+2      	; 0x10d6 <vfprintf+0x41c>
    10d4:	8b e2       	ldi	r24, 0x2B	; 43
    10d6:	b7 01       	movw	r22, r14
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
    10de:	80 e3       	ldi	r24, 0x30	; 48
    10e0:	6a e0       	ldi	r22, 0x0A	; 10
    10e2:	c6 16       	cp	r12, r22
    10e4:	d1 04       	cpc	r13, r1
    10e6:	2c f0       	brlt	.+10     	; 0x10f2 <vfprintf+0x438>
    10e8:	8f 5f       	subi	r24, 0xFF	; 255
    10ea:	fa e0       	ldi	r31, 0x0A	; 10
    10ec:	cf 1a       	sub	r12, r31
    10ee:	d1 08       	sbc	r13, r1
    10f0:	f7 cf       	rjmp	.-18     	; 0x10e0 <vfprintf+0x426>
    10f2:	b7 01       	movw	r22, r14
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
    10fa:	b7 01       	movw	r22, r14
    10fc:	c6 01       	movw	r24, r12
    10fe:	c0 96       	adiw	r24, 0x30	; 48
    1100:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
    1104:	41 c1       	rjmp	.+642    	; 0x1388 <vfprintf+0x6ce>
    1106:	83 36       	cpi	r24, 0x63	; 99
    1108:	31 f0       	breq	.+12     	; 0x1116 <vfprintf+0x45c>
    110a:	83 37       	cpi	r24, 0x73	; 115
    110c:	79 f0       	breq	.+30     	; 0x112c <vfprintf+0x472>
    110e:	83 35       	cpi	r24, 0x53	; 83
    1110:	09 f0       	breq	.+2      	; 0x1114 <vfprintf+0x45a>
    1112:	58 c0       	rjmp	.+176    	; 0x11c4 <vfprintf+0x50a>
    1114:	21 c0       	rjmp	.+66     	; 0x1158 <vfprintf+0x49e>
    1116:	56 01       	movw	r10, r12
    1118:	72 e0       	ldi	r23, 0x02	; 2
    111a:	a7 0e       	add	r10, r23
    111c:	b1 1c       	adc	r11, r1
    111e:	f6 01       	movw	r30, r12
    1120:	80 81       	ld	r24, Z
    1122:	89 83       	std	Y+1, r24	; 0x01
    1124:	01 e0       	ldi	r16, 0x01	; 1
    1126:	10 e0       	ldi	r17, 0x00	; 0
    1128:	64 01       	movw	r12, r8
    112a:	14 c0       	rjmp	.+40     	; 0x1154 <vfprintf+0x49a>
    112c:	56 01       	movw	r10, r12
    112e:	f2 e0       	ldi	r31, 0x02	; 2
    1130:	af 0e       	add	r10, r31
    1132:	b1 1c       	adc	r11, r1
    1134:	f6 01       	movw	r30, r12
    1136:	c0 80       	ld	r12, Z
    1138:	d1 80       	ldd	r13, Z+1	; 0x01
    113a:	26 ff       	sbrs	r18, 6
    113c:	03 c0       	rjmp	.+6      	; 0x1144 <vfprintf+0x48a>
    113e:	61 2f       	mov	r22, r17
    1140:	70 e0       	ldi	r23, 0x00	; 0
    1142:	02 c0       	rjmp	.+4      	; 0x1148 <vfprintf+0x48e>
    1144:	6f ef       	ldi	r22, 0xFF	; 255
    1146:	7f ef       	ldi	r23, 0xFF	; 255
    1148:	c6 01       	movw	r24, r12
    114a:	2b 8b       	std	Y+19, r18	; 0x13
    114c:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <strnlen>
    1150:	8c 01       	movw	r16, r24
    1152:	2b 89       	ldd	r18, Y+19	; 0x13
    1154:	2f 77       	andi	r18, 0x7F	; 127
    1156:	15 c0       	rjmp	.+42     	; 0x1182 <vfprintf+0x4c8>
    1158:	56 01       	movw	r10, r12
    115a:	f2 e0       	ldi	r31, 0x02	; 2
    115c:	af 0e       	add	r10, r31
    115e:	b1 1c       	adc	r11, r1
    1160:	f6 01       	movw	r30, r12
    1162:	c0 80       	ld	r12, Z
    1164:	d1 80       	ldd	r13, Z+1	; 0x01
    1166:	26 ff       	sbrs	r18, 6
    1168:	03 c0       	rjmp	.+6      	; 0x1170 <vfprintf+0x4b6>
    116a:	61 2f       	mov	r22, r17
    116c:	70 e0       	ldi	r23, 0x00	; 0
    116e:	02 c0       	rjmp	.+4      	; 0x1174 <vfprintf+0x4ba>
    1170:	6f ef       	ldi	r22, 0xFF	; 255
    1172:	7f ef       	ldi	r23, 0xFF	; 255
    1174:	c6 01       	movw	r24, r12
    1176:	2b 8b       	std	Y+19, r18	; 0x13
    1178:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <strnlen_P>
    117c:	8c 01       	movw	r16, r24
    117e:	2b 89       	ldd	r18, Y+19	; 0x13
    1180:	20 68       	ori	r18, 0x80	; 128
    1182:	72 2e       	mov	r7, r18
    1184:	23 fd       	sbrc	r18, 3
    1186:	1a c0       	rjmp	.+52     	; 0x11bc <vfprintf+0x502>
    1188:	85 2d       	mov	r24, r5
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	08 17       	cp	r16, r24
    118e:	19 07       	cpc	r17, r25
    1190:	a8 f4       	brcc	.+42     	; 0x11bc <vfprintf+0x502>
    1192:	b7 01       	movw	r22, r14
    1194:	80 e2       	ldi	r24, 0x20	; 32
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
    119c:	5a 94       	dec	r5
    119e:	f4 cf       	rjmp	.-24     	; 0x1188 <vfprintf+0x4ce>
    11a0:	f6 01       	movw	r30, r12
    11a2:	77 fc       	sbrc	r7, 7
    11a4:	85 91       	lpm	r24, Z+
    11a6:	77 fe       	sbrs	r7, 7
    11a8:	81 91       	ld	r24, Z+
    11aa:	6f 01       	movw	r12, r30
    11ac:	b7 01       	movw	r22, r14
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
    11b4:	51 10       	cpse	r5, r1
    11b6:	5a 94       	dec	r5
    11b8:	01 50       	subi	r16, 0x01	; 1
    11ba:	11 09       	sbc	r17, r1
    11bc:	01 15       	cp	r16, r1
    11be:	11 05       	cpc	r17, r1
    11c0:	79 f7       	brne	.-34     	; 0x11a0 <vfprintf+0x4e6>
    11c2:	e2 c0       	rjmp	.+452    	; 0x1388 <vfprintf+0x6ce>
    11c4:	84 36       	cpi	r24, 0x64	; 100
    11c6:	11 f0       	breq	.+4      	; 0x11cc <vfprintf+0x512>
    11c8:	89 36       	cpi	r24, 0x69	; 105
    11ca:	51 f5       	brne	.+84     	; 0x1220 <vfprintf+0x566>
    11cc:	56 01       	movw	r10, r12
    11ce:	27 ff       	sbrs	r18, 7
    11d0:	09 c0       	rjmp	.+18     	; 0x11e4 <vfprintf+0x52a>
    11d2:	f4 e0       	ldi	r31, 0x04	; 4
    11d4:	af 0e       	add	r10, r31
    11d6:	b1 1c       	adc	r11, r1
    11d8:	f6 01       	movw	r30, r12
    11da:	60 81       	ld	r22, Z
    11dc:	71 81       	ldd	r23, Z+1	; 0x01
    11de:	82 81       	ldd	r24, Z+2	; 0x02
    11e0:	93 81       	ldd	r25, Z+3	; 0x03
    11e2:	0a c0       	rjmp	.+20     	; 0x11f8 <vfprintf+0x53e>
    11e4:	f2 e0       	ldi	r31, 0x02	; 2
    11e6:	af 0e       	add	r10, r31
    11e8:	b1 1c       	adc	r11, r1
    11ea:	f6 01       	movw	r30, r12
    11ec:	60 81       	ld	r22, Z
    11ee:	71 81       	ldd	r23, Z+1	; 0x01
    11f0:	88 27       	eor	r24, r24
    11f2:	77 fd       	sbrc	r23, 7
    11f4:	80 95       	com	r24
    11f6:	98 2f       	mov	r25, r24
    11f8:	02 2f       	mov	r16, r18
    11fa:	0f 76       	andi	r16, 0x6F	; 111
    11fc:	97 ff       	sbrs	r25, 7
    11fe:	08 c0       	rjmp	.+16     	; 0x1210 <vfprintf+0x556>
    1200:	90 95       	com	r25
    1202:	80 95       	com	r24
    1204:	70 95       	com	r23
    1206:	61 95       	neg	r22
    1208:	7f 4f       	sbci	r23, 0xFF	; 255
    120a:	8f 4f       	sbci	r24, 0xFF	; 255
    120c:	9f 4f       	sbci	r25, 0xFF	; 255
    120e:	00 68       	ori	r16, 0x80	; 128
    1210:	2a e0       	ldi	r18, 0x0A	; 10
    1212:	30 e0       	ldi	r19, 0x00	; 0
    1214:	a4 01       	movw	r20, r8
    1216:	0e 94 75 0d 	call	0x1aea	; 0x1aea <__ultoa_invert>
    121a:	c8 2e       	mov	r12, r24
    121c:	c8 18       	sub	r12, r8
    121e:	3e c0       	rjmp	.+124    	; 0x129c <vfprintf+0x5e2>
    1220:	02 2f       	mov	r16, r18
    1222:	85 37       	cpi	r24, 0x75	; 117
    1224:	21 f4       	brne	.+8      	; 0x122e <vfprintf+0x574>
    1226:	0f 7e       	andi	r16, 0xEF	; 239
    1228:	2a e0       	ldi	r18, 0x0A	; 10
    122a:	30 e0       	ldi	r19, 0x00	; 0
    122c:	1d c0       	rjmp	.+58     	; 0x1268 <vfprintf+0x5ae>
    122e:	09 7f       	andi	r16, 0xF9	; 249
    1230:	8f 36       	cpi	r24, 0x6F	; 111
    1232:	91 f0       	breq	.+36     	; 0x1258 <vfprintf+0x59e>
    1234:	18 f4       	brcc	.+6      	; 0x123c <vfprintf+0x582>
    1236:	88 35       	cpi	r24, 0x58	; 88
    1238:	59 f0       	breq	.+22     	; 0x1250 <vfprintf+0x596>
    123a:	b0 c0       	rjmp	.+352    	; 0x139c <vfprintf+0x6e2>
    123c:	80 37       	cpi	r24, 0x70	; 112
    123e:	19 f0       	breq	.+6      	; 0x1246 <vfprintf+0x58c>
    1240:	88 37       	cpi	r24, 0x78	; 120
    1242:	11 f0       	breq	.+4      	; 0x1248 <vfprintf+0x58e>
    1244:	ab c0       	rjmp	.+342    	; 0x139c <vfprintf+0x6e2>
    1246:	00 61       	ori	r16, 0x10	; 16
    1248:	04 ff       	sbrs	r16, 4
    124a:	09 c0       	rjmp	.+18     	; 0x125e <vfprintf+0x5a4>
    124c:	04 60       	ori	r16, 0x04	; 4
    124e:	07 c0       	rjmp	.+14     	; 0x125e <vfprintf+0x5a4>
    1250:	24 ff       	sbrs	r18, 4
    1252:	08 c0       	rjmp	.+16     	; 0x1264 <vfprintf+0x5aa>
    1254:	06 60       	ori	r16, 0x06	; 6
    1256:	06 c0       	rjmp	.+12     	; 0x1264 <vfprintf+0x5aa>
    1258:	28 e0       	ldi	r18, 0x08	; 8
    125a:	30 e0       	ldi	r19, 0x00	; 0
    125c:	05 c0       	rjmp	.+10     	; 0x1268 <vfprintf+0x5ae>
    125e:	20 e1       	ldi	r18, 0x10	; 16
    1260:	30 e0       	ldi	r19, 0x00	; 0
    1262:	02 c0       	rjmp	.+4      	; 0x1268 <vfprintf+0x5ae>
    1264:	20 e1       	ldi	r18, 0x10	; 16
    1266:	32 e0       	ldi	r19, 0x02	; 2
    1268:	56 01       	movw	r10, r12
    126a:	07 ff       	sbrs	r16, 7
    126c:	09 c0       	rjmp	.+18     	; 0x1280 <vfprintf+0x5c6>
    126e:	f4 e0       	ldi	r31, 0x04	; 4
    1270:	af 0e       	add	r10, r31
    1272:	b1 1c       	adc	r11, r1
    1274:	f6 01       	movw	r30, r12
    1276:	60 81       	ld	r22, Z
    1278:	71 81       	ldd	r23, Z+1	; 0x01
    127a:	82 81       	ldd	r24, Z+2	; 0x02
    127c:	93 81       	ldd	r25, Z+3	; 0x03
    127e:	08 c0       	rjmp	.+16     	; 0x1290 <vfprintf+0x5d6>
    1280:	f2 e0       	ldi	r31, 0x02	; 2
    1282:	af 0e       	add	r10, r31
    1284:	b1 1c       	adc	r11, r1
    1286:	f6 01       	movw	r30, r12
    1288:	60 81       	ld	r22, Z
    128a:	71 81       	ldd	r23, Z+1	; 0x01
    128c:	80 e0       	ldi	r24, 0x00	; 0
    128e:	90 e0       	ldi	r25, 0x00	; 0
    1290:	a4 01       	movw	r20, r8
    1292:	0e 94 75 0d 	call	0x1aea	; 0x1aea <__ultoa_invert>
    1296:	c8 2e       	mov	r12, r24
    1298:	c8 18       	sub	r12, r8
    129a:	0f 77       	andi	r16, 0x7F	; 127
    129c:	06 ff       	sbrs	r16, 6
    129e:	0b c0       	rjmp	.+22     	; 0x12b6 <vfprintf+0x5fc>
    12a0:	20 2f       	mov	r18, r16
    12a2:	2e 7f       	andi	r18, 0xFE	; 254
    12a4:	c1 16       	cp	r12, r17
    12a6:	50 f4       	brcc	.+20     	; 0x12bc <vfprintf+0x602>
    12a8:	04 ff       	sbrs	r16, 4
    12aa:	0a c0       	rjmp	.+20     	; 0x12c0 <vfprintf+0x606>
    12ac:	02 fd       	sbrc	r16, 2
    12ae:	08 c0       	rjmp	.+16     	; 0x12c0 <vfprintf+0x606>
    12b0:	20 2f       	mov	r18, r16
    12b2:	2e 7e       	andi	r18, 0xEE	; 238
    12b4:	05 c0       	rjmp	.+10     	; 0x12c0 <vfprintf+0x606>
    12b6:	dc 2c       	mov	r13, r12
    12b8:	20 2f       	mov	r18, r16
    12ba:	03 c0       	rjmp	.+6      	; 0x12c2 <vfprintf+0x608>
    12bc:	dc 2c       	mov	r13, r12
    12be:	01 c0       	rjmp	.+2      	; 0x12c2 <vfprintf+0x608>
    12c0:	d1 2e       	mov	r13, r17
    12c2:	24 ff       	sbrs	r18, 4
    12c4:	0d c0       	rjmp	.+26     	; 0x12e0 <vfprintf+0x626>
    12c6:	fe 01       	movw	r30, r28
    12c8:	ec 0d       	add	r30, r12
    12ca:	f1 1d       	adc	r31, r1
    12cc:	80 81       	ld	r24, Z
    12ce:	80 33       	cpi	r24, 0x30	; 48
    12d0:	11 f4       	brne	.+4      	; 0x12d6 <vfprintf+0x61c>
    12d2:	29 7e       	andi	r18, 0xE9	; 233
    12d4:	09 c0       	rjmp	.+18     	; 0x12e8 <vfprintf+0x62e>
    12d6:	22 ff       	sbrs	r18, 2
    12d8:	06 c0       	rjmp	.+12     	; 0x12e6 <vfprintf+0x62c>
    12da:	d3 94       	inc	r13
    12dc:	d3 94       	inc	r13
    12de:	04 c0       	rjmp	.+8      	; 0x12e8 <vfprintf+0x62e>
    12e0:	82 2f       	mov	r24, r18
    12e2:	86 78       	andi	r24, 0x86	; 134
    12e4:	09 f0       	breq	.+2      	; 0x12e8 <vfprintf+0x62e>
    12e6:	d3 94       	inc	r13
    12e8:	23 fd       	sbrc	r18, 3
    12ea:	13 c0       	rjmp	.+38     	; 0x1312 <vfprintf+0x658>
    12ec:	20 ff       	sbrs	r18, 0
    12ee:	06 c0       	rjmp	.+12     	; 0x12fc <vfprintf+0x642>
    12f0:	1c 2d       	mov	r17, r12
    12f2:	d5 14       	cp	r13, r5
    12f4:	18 f4       	brcc	.+6      	; 0x12fc <vfprintf+0x642>
    12f6:	15 0d       	add	r17, r5
    12f8:	1d 19       	sub	r17, r13
    12fa:	d5 2c       	mov	r13, r5
    12fc:	d5 14       	cp	r13, r5
    12fe:	68 f4       	brcc	.+26     	; 0x131a <vfprintf+0x660>
    1300:	b7 01       	movw	r22, r14
    1302:	80 e2       	ldi	r24, 0x20	; 32
    1304:	90 e0       	ldi	r25, 0x00	; 0
    1306:	2b 8b       	std	Y+19, r18	; 0x13
    1308:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
    130c:	d3 94       	inc	r13
    130e:	2b 89       	ldd	r18, Y+19	; 0x13
    1310:	f5 cf       	rjmp	.-22     	; 0x12fc <vfprintf+0x642>
    1312:	d5 14       	cp	r13, r5
    1314:	10 f4       	brcc	.+4      	; 0x131a <vfprintf+0x660>
    1316:	5d 18       	sub	r5, r13
    1318:	01 c0       	rjmp	.+2      	; 0x131c <vfprintf+0x662>
    131a:	51 2c       	mov	r5, r1
    131c:	24 ff       	sbrs	r18, 4
    131e:	12 c0       	rjmp	.+36     	; 0x1344 <vfprintf+0x68a>
    1320:	b7 01       	movw	r22, r14
    1322:	80 e3       	ldi	r24, 0x30	; 48
    1324:	90 e0       	ldi	r25, 0x00	; 0
    1326:	2b 8b       	std	Y+19, r18	; 0x13
    1328:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
    132c:	2b 89       	ldd	r18, Y+19	; 0x13
    132e:	22 ff       	sbrs	r18, 2
    1330:	17 c0       	rjmp	.+46     	; 0x1360 <vfprintf+0x6a6>
    1332:	21 ff       	sbrs	r18, 1
    1334:	03 c0       	rjmp	.+6      	; 0x133c <vfprintf+0x682>
    1336:	88 e5       	ldi	r24, 0x58	; 88
    1338:	90 e0       	ldi	r25, 0x00	; 0
    133a:	02 c0       	rjmp	.+4      	; 0x1340 <vfprintf+0x686>
    133c:	88 e7       	ldi	r24, 0x78	; 120
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	b7 01       	movw	r22, r14
    1342:	0c c0       	rjmp	.+24     	; 0x135c <vfprintf+0x6a2>
    1344:	82 2f       	mov	r24, r18
    1346:	86 78       	andi	r24, 0x86	; 134
    1348:	59 f0       	breq	.+22     	; 0x1360 <vfprintf+0x6a6>
    134a:	21 fd       	sbrc	r18, 1
    134c:	02 c0       	rjmp	.+4      	; 0x1352 <vfprintf+0x698>
    134e:	80 e2       	ldi	r24, 0x20	; 32
    1350:	01 c0       	rjmp	.+2      	; 0x1354 <vfprintf+0x69a>
    1352:	8b e2       	ldi	r24, 0x2B	; 43
    1354:	27 fd       	sbrc	r18, 7
    1356:	8d e2       	ldi	r24, 0x2D	; 45
    1358:	b7 01       	movw	r22, r14
    135a:	90 e0       	ldi	r25, 0x00	; 0
    135c:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
    1360:	c1 16       	cp	r12, r17
    1362:	38 f4       	brcc	.+14     	; 0x1372 <vfprintf+0x6b8>
    1364:	b7 01       	movw	r22, r14
    1366:	80 e3       	ldi	r24, 0x30	; 48
    1368:	90 e0       	ldi	r25, 0x00	; 0
    136a:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
    136e:	11 50       	subi	r17, 0x01	; 1
    1370:	f7 cf       	rjmp	.-18     	; 0x1360 <vfprintf+0x6a6>
    1372:	ca 94       	dec	r12
    1374:	f4 01       	movw	r30, r8
    1376:	ec 0d       	add	r30, r12
    1378:	f1 1d       	adc	r31, r1
    137a:	80 81       	ld	r24, Z
    137c:	b7 01       	movw	r22, r14
    137e:	90 e0       	ldi	r25, 0x00	; 0
    1380:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
    1384:	c1 10       	cpse	r12, r1
    1386:	f5 cf       	rjmp	.-22     	; 0x1372 <vfprintf+0x6b8>
    1388:	55 20       	and	r5, r5
    138a:	09 f4       	brne	.+2      	; 0x138e <vfprintf+0x6d4>
    138c:	c2 cc       	rjmp	.-1660   	; 0xd12 <vfprintf+0x58>
    138e:	b7 01       	movw	r22, r14
    1390:	80 e2       	ldi	r24, 0x20	; 32
    1392:	90 e0       	ldi	r25, 0x00	; 0
    1394:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <fputc>
    1398:	5a 94       	dec	r5
    139a:	f6 cf       	rjmp	.-20     	; 0x1388 <vfprintf+0x6ce>
    139c:	f7 01       	movw	r30, r14
    139e:	86 81       	ldd	r24, Z+6	; 0x06
    13a0:	97 81       	ldd	r25, Z+7	; 0x07
    13a2:	02 c0       	rjmp	.+4      	; 0x13a8 <vfprintf+0x6ee>
    13a4:	8f ef       	ldi	r24, 0xFF	; 255
    13a6:	9f ef       	ldi	r25, 0xFF	; 255
    13a8:	63 96       	adiw	r28, 0x13	; 19
    13aa:	e2 e1       	ldi	r30, 0x12	; 18
    13ac:	0c 94 06 0c 	jmp	0x180c	; 0x180c <__epilogue_restores__>

000013b0 <__subsf3>:
    13b0:	50 58       	subi	r21, 0x80	; 128

000013b2 <__addsf3>:
    13b2:	bb 27       	eor	r27, r27
    13b4:	aa 27       	eor	r26, r26
    13b6:	0e d0       	rcall	.+28     	; 0x13d4 <__addsf3x>
    13b8:	70 c1       	rjmp	.+736    	; 0x169a <__fp_round>
    13ba:	61 d1       	rcall	.+706    	; 0x167e <__fp_pscA>
    13bc:	30 f0       	brcs	.+12     	; 0x13ca <__addsf3+0x18>
    13be:	66 d1       	rcall	.+716    	; 0x168c <__fp_pscB>
    13c0:	20 f0       	brcs	.+8      	; 0x13ca <__addsf3+0x18>
    13c2:	31 f4       	brne	.+12     	; 0x13d0 <__addsf3+0x1e>
    13c4:	9f 3f       	cpi	r25, 0xFF	; 255
    13c6:	11 f4       	brne	.+4      	; 0x13cc <__addsf3+0x1a>
    13c8:	1e f4       	brtc	.+6      	; 0x13d0 <__addsf3+0x1e>
    13ca:	56 c1       	rjmp	.+684    	; 0x1678 <__fp_nan>
    13cc:	0e f4       	brtc	.+2      	; 0x13d0 <__addsf3+0x1e>
    13ce:	e0 95       	com	r30
    13d0:	e7 fb       	bst	r30, 7
    13d2:	4c c1       	rjmp	.+664    	; 0x166c <__fp_inf>

000013d4 <__addsf3x>:
    13d4:	e9 2f       	mov	r30, r25
    13d6:	72 d1       	rcall	.+740    	; 0x16bc <__fp_split3>
    13d8:	80 f3       	brcs	.-32     	; 0x13ba <__addsf3+0x8>
    13da:	ba 17       	cp	r27, r26
    13dc:	62 07       	cpc	r22, r18
    13de:	73 07       	cpc	r23, r19
    13e0:	84 07       	cpc	r24, r20
    13e2:	95 07       	cpc	r25, r21
    13e4:	18 f0       	brcs	.+6      	; 0x13ec <__addsf3x+0x18>
    13e6:	71 f4       	brne	.+28     	; 0x1404 <__addsf3x+0x30>
    13e8:	9e f5       	brtc	.+102    	; 0x1450 <__addsf3x+0x7c>
    13ea:	8a c1       	rjmp	.+788    	; 0x1700 <__fp_zero>
    13ec:	0e f4       	brtc	.+2      	; 0x13f0 <__addsf3x+0x1c>
    13ee:	e0 95       	com	r30
    13f0:	0b 2e       	mov	r0, r27
    13f2:	ba 2f       	mov	r27, r26
    13f4:	a0 2d       	mov	r26, r0
    13f6:	0b 01       	movw	r0, r22
    13f8:	b9 01       	movw	r22, r18
    13fa:	90 01       	movw	r18, r0
    13fc:	0c 01       	movw	r0, r24
    13fe:	ca 01       	movw	r24, r20
    1400:	a0 01       	movw	r20, r0
    1402:	11 24       	eor	r1, r1
    1404:	ff 27       	eor	r31, r31
    1406:	59 1b       	sub	r21, r25
    1408:	99 f0       	breq	.+38     	; 0x1430 <__addsf3x+0x5c>
    140a:	59 3f       	cpi	r21, 0xF9	; 249
    140c:	50 f4       	brcc	.+20     	; 0x1422 <__addsf3x+0x4e>
    140e:	50 3e       	cpi	r21, 0xE0	; 224
    1410:	68 f1       	brcs	.+90     	; 0x146c <__addsf3x+0x98>
    1412:	1a 16       	cp	r1, r26
    1414:	f0 40       	sbci	r31, 0x00	; 0
    1416:	a2 2f       	mov	r26, r18
    1418:	23 2f       	mov	r18, r19
    141a:	34 2f       	mov	r19, r20
    141c:	44 27       	eor	r20, r20
    141e:	58 5f       	subi	r21, 0xF8	; 248
    1420:	f3 cf       	rjmp	.-26     	; 0x1408 <__addsf3x+0x34>
    1422:	46 95       	lsr	r20
    1424:	37 95       	ror	r19
    1426:	27 95       	ror	r18
    1428:	a7 95       	ror	r26
    142a:	f0 40       	sbci	r31, 0x00	; 0
    142c:	53 95       	inc	r21
    142e:	c9 f7       	brne	.-14     	; 0x1422 <__addsf3x+0x4e>
    1430:	7e f4       	brtc	.+30     	; 0x1450 <__addsf3x+0x7c>
    1432:	1f 16       	cp	r1, r31
    1434:	ba 0b       	sbc	r27, r26
    1436:	62 0b       	sbc	r22, r18
    1438:	73 0b       	sbc	r23, r19
    143a:	84 0b       	sbc	r24, r20
    143c:	ba f0       	brmi	.+46     	; 0x146c <__addsf3x+0x98>
    143e:	91 50       	subi	r25, 0x01	; 1
    1440:	a1 f0       	breq	.+40     	; 0x146a <__addsf3x+0x96>
    1442:	ff 0f       	add	r31, r31
    1444:	bb 1f       	adc	r27, r27
    1446:	66 1f       	adc	r22, r22
    1448:	77 1f       	adc	r23, r23
    144a:	88 1f       	adc	r24, r24
    144c:	c2 f7       	brpl	.-16     	; 0x143e <__addsf3x+0x6a>
    144e:	0e c0       	rjmp	.+28     	; 0x146c <__addsf3x+0x98>
    1450:	ba 0f       	add	r27, r26
    1452:	62 1f       	adc	r22, r18
    1454:	73 1f       	adc	r23, r19
    1456:	84 1f       	adc	r24, r20
    1458:	48 f4       	brcc	.+18     	; 0x146c <__addsf3x+0x98>
    145a:	87 95       	ror	r24
    145c:	77 95       	ror	r23
    145e:	67 95       	ror	r22
    1460:	b7 95       	ror	r27
    1462:	f7 95       	ror	r31
    1464:	9e 3f       	cpi	r25, 0xFE	; 254
    1466:	08 f0       	brcs	.+2      	; 0x146a <__addsf3x+0x96>
    1468:	b3 cf       	rjmp	.-154    	; 0x13d0 <__addsf3+0x1e>
    146a:	93 95       	inc	r25
    146c:	88 0f       	add	r24, r24
    146e:	08 f0       	brcs	.+2      	; 0x1472 <__addsf3x+0x9e>
    1470:	99 27       	eor	r25, r25
    1472:	ee 0f       	add	r30, r30
    1474:	97 95       	ror	r25
    1476:	87 95       	ror	r24
    1478:	08 95       	ret

0000147a <__cmpsf2>:
    147a:	d4 d0       	rcall	.+424    	; 0x1624 <__fp_cmp>
    147c:	08 f4       	brcc	.+2      	; 0x1480 <__cmpsf2+0x6>
    147e:	81 e0       	ldi	r24, 0x01	; 1
    1480:	08 95       	ret

00001482 <__divsf3>:
    1482:	0c d0       	rcall	.+24     	; 0x149c <__divsf3x>
    1484:	0a c1       	rjmp	.+532    	; 0x169a <__fp_round>
    1486:	02 d1       	rcall	.+516    	; 0x168c <__fp_pscB>
    1488:	40 f0       	brcs	.+16     	; 0x149a <__divsf3+0x18>
    148a:	f9 d0       	rcall	.+498    	; 0x167e <__fp_pscA>
    148c:	30 f0       	brcs	.+12     	; 0x149a <__divsf3+0x18>
    148e:	21 f4       	brne	.+8      	; 0x1498 <__divsf3+0x16>
    1490:	5f 3f       	cpi	r21, 0xFF	; 255
    1492:	19 f0       	breq	.+6      	; 0x149a <__divsf3+0x18>
    1494:	eb c0       	rjmp	.+470    	; 0x166c <__fp_inf>
    1496:	51 11       	cpse	r21, r1
    1498:	34 c1       	rjmp	.+616    	; 0x1702 <__fp_szero>
    149a:	ee c0       	rjmp	.+476    	; 0x1678 <__fp_nan>

0000149c <__divsf3x>:
    149c:	0f d1       	rcall	.+542    	; 0x16bc <__fp_split3>
    149e:	98 f3       	brcs	.-26     	; 0x1486 <__divsf3+0x4>

000014a0 <__divsf3_pse>:
    14a0:	99 23       	and	r25, r25
    14a2:	c9 f3       	breq	.-14     	; 0x1496 <__divsf3+0x14>
    14a4:	55 23       	and	r21, r21
    14a6:	b1 f3       	breq	.-20     	; 0x1494 <__divsf3+0x12>
    14a8:	95 1b       	sub	r25, r21
    14aa:	55 0b       	sbc	r21, r21
    14ac:	bb 27       	eor	r27, r27
    14ae:	aa 27       	eor	r26, r26
    14b0:	62 17       	cp	r22, r18
    14b2:	73 07       	cpc	r23, r19
    14b4:	84 07       	cpc	r24, r20
    14b6:	38 f0       	brcs	.+14     	; 0x14c6 <__divsf3_pse+0x26>
    14b8:	9f 5f       	subi	r25, 0xFF	; 255
    14ba:	5f 4f       	sbci	r21, 0xFF	; 255
    14bc:	22 0f       	add	r18, r18
    14be:	33 1f       	adc	r19, r19
    14c0:	44 1f       	adc	r20, r20
    14c2:	aa 1f       	adc	r26, r26
    14c4:	a9 f3       	breq	.-22     	; 0x14b0 <__divsf3_pse+0x10>
    14c6:	33 d0       	rcall	.+102    	; 0x152e <__divsf3_pse+0x8e>
    14c8:	0e 2e       	mov	r0, r30
    14ca:	3a f0       	brmi	.+14     	; 0x14da <__divsf3_pse+0x3a>
    14cc:	e0 e8       	ldi	r30, 0x80	; 128
    14ce:	30 d0       	rcall	.+96     	; 0x1530 <__divsf3_pse+0x90>
    14d0:	91 50       	subi	r25, 0x01	; 1
    14d2:	50 40       	sbci	r21, 0x00	; 0
    14d4:	e6 95       	lsr	r30
    14d6:	00 1c       	adc	r0, r0
    14d8:	ca f7       	brpl	.-14     	; 0x14cc <__divsf3_pse+0x2c>
    14da:	29 d0       	rcall	.+82     	; 0x152e <__divsf3_pse+0x8e>
    14dc:	fe 2f       	mov	r31, r30
    14de:	27 d0       	rcall	.+78     	; 0x152e <__divsf3_pse+0x8e>
    14e0:	66 0f       	add	r22, r22
    14e2:	77 1f       	adc	r23, r23
    14e4:	88 1f       	adc	r24, r24
    14e6:	bb 1f       	adc	r27, r27
    14e8:	26 17       	cp	r18, r22
    14ea:	37 07       	cpc	r19, r23
    14ec:	48 07       	cpc	r20, r24
    14ee:	ab 07       	cpc	r26, r27
    14f0:	b0 e8       	ldi	r27, 0x80	; 128
    14f2:	09 f0       	breq	.+2      	; 0x14f6 <__divsf3_pse+0x56>
    14f4:	bb 0b       	sbc	r27, r27
    14f6:	80 2d       	mov	r24, r0
    14f8:	bf 01       	movw	r22, r30
    14fa:	ff 27       	eor	r31, r31
    14fc:	93 58       	subi	r25, 0x83	; 131
    14fe:	5f 4f       	sbci	r21, 0xFF	; 255
    1500:	2a f0       	brmi	.+10     	; 0x150c <__divsf3_pse+0x6c>
    1502:	9e 3f       	cpi	r25, 0xFE	; 254
    1504:	51 05       	cpc	r21, r1
    1506:	68 f0       	brcs	.+26     	; 0x1522 <__divsf3_pse+0x82>
    1508:	b1 c0       	rjmp	.+354    	; 0x166c <__fp_inf>
    150a:	fb c0       	rjmp	.+502    	; 0x1702 <__fp_szero>
    150c:	5f 3f       	cpi	r21, 0xFF	; 255
    150e:	ec f3       	brlt	.-6      	; 0x150a <__divsf3_pse+0x6a>
    1510:	98 3e       	cpi	r25, 0xE8	; 232
    1512:	dc f3       	brlt	.-10     	; 0x150a <__divsf3_pse+0x6a>
    1514:	86 95       	lsr	r24
    1516:	77 95       	ror	r23
    1518:	67 95       	ror	r22
    151a:	b7 95       	ror	r27
    151c:	f7 95       	ror	r31
    151e:	9f 5f       	subi	r25, 0xFF	; 255
    1520:	c9 f7       	brne	.-14     	; 0x1514 <__divsf3_pse+0x74>
    1522:	88 0f       	add	r24, r24
    1524:	91 1d       	adc	r25, r1
    1526:	96 95       	lsr	r25
    1528:	87 95       	ror	r24
    152a:	97 f9       	bld	r25, 7
    152c:	08 95       	ret
    152e:	e1 e0       	ldi	r30, 0x01	; 1
    1530:	66 0f       	add	r22, r22
    1532:	77 1f       	adc	r23, r23
    1534:	88 1f       	adc	r24, r24
    1536:	bb 1f       	adc	r27, r27
    1538:	62 17       	cp	r22, r18
    153a:	73 07       	cpc	r23, r19
    153c:	84 07       	cpc	r24, r20
    153e:	ba 07       	cpc	r27, r26
    1540:	20 f0       	brcs	.+8      	; 0x154a <__divsf3_pse+0xaa>
    1542:	62 1b       	sub	r22, r18
    1544:	73 0b       	sbc	r23, r19
    1546:	84 0b       	sbc	r24, r20
    1548:	ba 0b       	sbc	r27, r26
    154a:	ee 1f       	adc	r30, r30
    154c:	88 f7       	brcc	.-30     	; 0x1530 <__divsf3_pse+0x90>
    154e:	e0 95       	com	r30
    1550:	08 95       	ret

00001552 <__fixunssfsi>:
    1552:	bc d0       	rcall	.+376    	; 0x16cc <__fp_splitA>
    1554:	88 f0       	brcs	.+34     	; 0x1578 <__fixunssfsi+0x26>
    1556:	9f 57       	subi	r25, 0x7F	; 127
    1558:	90 f0       	brcs	.+36     	; 0x157e <__fixunssfsi+0x2c>
    155a:	b9 2f       	mov	r27, r25
    155c:	99 27       	eor	r25, r25
    155e:	b7 51       	subi	r27, 0x17	; 23
    1560:	a0 f0       	brcs	.+40     	; 0x158a <__fixunssfsi+0x38>
    1562:	d1 f0       	breq	.+52     	; 0x1598 <__fixunssfsi+0x46>
    1564:	66 0f       	add	r22, r22
    1566:	77 1f       	adc	r23, r23
    1568:	88 1f       	adc	r24, r24
    156a:	99 1f       	adc	r25, r25
    156c:	1a f0       	brmi	.+6      	; 0x1574 <__fixunssfsi+0x22>
    156e:	ba 95       	dec	r27
    1570:	c9 f7       	brne	.-14     	; 0x1564 <__fixunssfsi+0x12>
    1572:	12 c0       	rjmp	.+36     	; 0x1598 <__fixunssfsi+0x46>
    1574:	b1 30       	cpi	r27, 0x01	; 1
    1576:	81 f0       	breq	.+32     	; 0x1598 <__fixunssfsi+0x46>
    1578:	c3 d0       	rcall	.+390    	; 0x1700 <__fp_zero>
    157a:	b1 e0       	ldi	r27, 0x01	; 1
    157c:	08 95       	ret
    157e:	c0 c0       	rjmp	.+384    	; 0x1700 <__fp_zero>
    1580:	67 2f       	mov	r22, r23
    1582:	78 2f       	mov	r23, r24
    1584:	88 27       	eor	r24, r24
    1586:	b8 5f       	subi	r27, 0xF8	; 248
    1588:	39 f0       	breq	.+14     	; 0x1598 <__fixunssfsi+0x46>
    158a:	b9 3f       	cpi	r27, 0xF9	; 249
    158c:	cc f3       	brlt	.-14     	; 0x1580 <__fixunssfsi+0x2e>
    158e:	86 95       	lsr	r24
    1590:	77 95       	ror	r23
    1592:	67 95       	ror	r22
    1594:	b3 95       	inc	r27
    1596:	d9 f7       	brne	.-10     	; 0x158e <__fixunssfsi+0x3c>
    1598:	3e f4       	brtc	.+14     	; 0x15a8 <__fixunssfsi+0x56>
    159a:	90 95       	com	r25
    159c:	80 95       	com	r24
    159e:	70 95       	com	r23
    15a0:	61 95       	neg	r22
    15a2:	7f 4f       	sbci	r23, 0xFF	; 255
    15a4:	8f 4f       	sbci	r24, 0xFF	; 255
    15a6:	9f 4f       	sbci	r25, 0xFF	; 255
    15a8:	08 95       	ret

000015aa <__floatunsisf>:
    15aa:	e8 94       	clt
    15ac:	09 c0       	rjmp	.+18     	; 0x15c0 <__floatsisf+0x12>

000015ae <__floatsisf>:
    15ae:	97 fb       	bst	r25, 7
    15b0:	3e f4       	brtc	.+14     	; 0x15c0 <__floatsisf+0x12>
    15b2:	90 95       	com	r25
    15b4:	80 95       	com	r24
    15b6:	70 95       	com	r23
    15b8:	61 95       	neg	r22
    15ba:	7f 4f       	sbci	r23, 0xFF	; 255
    15bc:	8f 4f       	sbci	r24, 0xFF	; 255
    15be:	9f 4f       	sbci	r25, 0xFF	; 255
    15c0:	99 23       	and	r25, r25
    15c2:	a9 f0       	breq	.+42     	; 0x15ee <__floatsisf+0x40>
    15c4:	f9 2f       	mov	r31, r25
    15c6:	96 e9       	ldi	r25, 0x96	; 150
    15c8:	bb 27       	eor	r27, r27
    15ca:	93 95       	inc	r25
    15cc:	f6 95       	lsr	r31
    15ce:	87 95       	ror	r24
    15d0:	77 95       	ror	r23
    15d2:	67 95       	ror	r22
    15d4:	b7 95       	ror	r27
    15d6:	f1 11       	cpse	r31, r1
    15d8:	f8 cf       	rjmp	.-16     	; 0x15ca <__floatsisf+0x1c>
    15da:	fa f4       	brpl	.+62     	; 0x161a <__floatsisf+0x6c>
    15dc:	bb 0f       	add	r27, r27
    15de:	11 f4       	brne	.+4      	; 0x15e4 <__floatsisf+0x36>
    15e0:	60 ff       	sbrs	r22, 0
    15e2:	1b c0       	rjmp	.+54     	; 0x161a <__floatsisf+0x6c>
    15e4:	6f 5f       	subi	r22, 0xFF	; 255
    15e6:	7f 4f       	sbci	r23, 0xFF	; 255
    15e8:	8f 4f       	sbci	r24, 0xFF	; 255
    15ea:	9f 4f       	sbci	r25, 0xFF	; 255
    15ec:	16 c0       	rjmp	.+44     	; 0x161a <__floatsisf+0x6c>
    15ee:	88 23       	and	r24, r24
    15f0:	11 f0       	breq	.+4      	; 0x15f6 <__floatsisf+0x48>
    15f2:	96 e9       	ldi	r25, 0x96	; 150
    15f4:	11 c0       	rjmp	.+34     	; 0x1618 <__floatsisf+0x6a>
    15f6:	77 23       	and	r23, r23
    15f8:	21 f0       	breq	.+8      	; 0x1602 <__floatsisf+0x54>
    15fa:	9e e8       	ldi	r25, 0x8E	; 142
    15fc:	87 2f       	mov	r24, r23
    15fe:	76 2f       	mov	r23, r22
    1600:	05 c0       	rjmp	.+10     	; 0x160c <__floatsisf+0x5e>
    1602:	66 23       	and	r22, r22
    1604:	71 f0       	breq	.+28     	; 0x1622 <__floatsisf+0x74>
    1606:	96 e8       	ldi	r25, 0x86	; 134
    1608:	86 2f       	mov	r24, r22
    160a:	70 e0       	ldi	r23, 0x00	; 0
    160c:	60 e0       	ldi	r22, 0x00	; 0
    160e:	2a f0       	brmi	.+10     	; 0x161a <__floatsisf+0x6c>
    1610:	9a 95       	dec	r25
    1612:	66 0f       	add	r22, r22
    1614:	77 1f       	adc	r23, r23
    1616:	88 1f       	adc	r24, r24
    1618:	da f7       	brpl	.-10     	; 0x1610 <__floatsisf+0x62>
    161a:	88 0f       	add	r24, r24
    161c:	96 95       	lsr	r25
    161e:	87 95       	ror	r24
    1620:	97 f9       	bld	r25, 7
    1622:	08 95       	ret

00001624 <__fp_cmp>:
    1624:	99 0f       	add	r25, r25
    1626:	00 08       	sbc	r0, r0
    1628:	55 0f       	add	r21, r21
    162a:	aa 0b       	sbc	r26, r26
    162c:	e0 e8       	ldi	r30, 0x80	; 128
    162e:	fe ef       	ldi	r31, 0xFE	; 254
    1630:	16 16       	cp	r1, r22
    1632:	17 06       	cpc	r1, r23
    1634:	e8 07       	cpc	r30, r24
    1636:	f9 07       	cpc	r31, r25
    1638:	c0 f0       	brcs	.+48     	; 0x166a <__fp_cmp+0x46>
    163a:	12 16       	cp	r1, r18
    163c:	13 06       	cpc	r1, r19
    163e:	e4 07       	cpc	r30, r20
    1640:	f5 07       	cpc	r31, r21
    1642:	98 f0       	brcs	.+38     	; 0x166a <__fp_cmp+0x46>
    1644:	62 1b       	sub	r22, r18
    1646:	73 0b       	sbc	r23, r19
    1648:	84 0b       	sbc	r24, r20
    164a:	95 0b       	sbc	r25, r21
    164c:	39 f4       	brne	.+14     	; 0x165c <__fp_cmp+0x38>
    164e:	0a 26       	eor	r0, r26
    1650:	61 f0       	breq	.+24     	; 0x166a <__fp_cmp+0x46>
    1652:	23 2b       	or	r18, r19
    1654:	24 2b       	or	r18, r20
    1656:	25 2b       	or	r18, r21
    1658:	21 f4       	brne	.+8      	; 0x1662 <__fp_cmp+0x3e>
    165a:	08 95       	ret
    165c:	0a 26       	eor	r0, r26
    165e:	09 f4       	brne	.+2      	; 0x1662 <__fp_cmp+0x3e>
    1660:	a1 40       	sbci	r26, 0x01	; 1
    1662:	a6 95       	lsr	r26
    1664:	8f ef       	ldi	r24, 0xFF	; 255
    1666:	81 1d       	adc	r24, r1
    1668:	81 1d       	adc	r24, r1
    166a:	08 95       	ret

0000166c <__fp_inf>:
    166c:	97 f9       	bld	r25, 7
    166e:	9f 67       	ori	r25, 0x7F	; 127
    1670:	80 e8       	ldi	r24, 0x80	; 128
    1672:	70 e0       	ldi	r23, 0x00	; 0
    1674:	60 e0       	ldi	r22, 0x00	; 0
    1676:	08 95       	ret

00001678 <__fp_nan>:
    1678:	9f ef       	ldi	r25, 0xFF	; 255
    167a:	80 ec       	ldi	r24, 0xC0	; 192
    167c:	08 95       	ret

0000167e <__fp_pscA>:
    167e:	00 24       	eor	r0, r0
    1680:	0a 94       	dec	r0
    1682:	16 16       	cp	r1, r22
    1684:	17 06       	cpc	r1, r23
    1686:	18 06       	cpc	r1, r24
    1688:	09 06       	cpc	r0, r25
    168a:	08 95       	ret

0000168c <__fp_pscB>:
    168c:	00 24       	eor	r0, r0
    168e:	0a 94       	dec	r0
    1690:	12 16       	cp	r1, r18
    1692:	13 06       	cpc	r1, r19
    1694:	14 06       	cpc	r1, r20
    1696:	05 06       	cpc	r0, r21
    1698:	08 95       	ret

0000169a <__fp_round>:
    169a:	09 2e       	mov	r0, r25
    169c:	03 94       	inc	r0
    169e:	00 0c       	add	r0, r0
    16a0:	11 f4       	brne	.+4      	; 0x16a6 <__fp_round+0xc>
    16a2:	88 23       	and	r24, r24
    16a4:	52 f0       	brmi	.+20     	; 0x16ba <__fp_round+0x20>
    16a6:	bb 0f       	add	r27, r27
    16a8:	40 f4       	brcc	.+16     	; 0x16ba <__fp_round+0x20>
    16aa:	bf 2b       	or	r27, r31
    16ac:	11 f4       	brne	.+4      	; 0x16b2 <__fp_round+0x18>
    16ae:	60 ff       	sbrs	r22, 0
    16b0:	04 c0       	rjmp	.+8      	; 0x16ba <__fp_round+0x20>
    16b2:	6f 5f       	subi	r22, 0xFF	; 255
    16b4:	7f 4f       	sbci	r23, 0xFF	; 255
    16b6:	8f 4f       	sbci	r24, 0xFF	; 255
    16b8:	9f 4f       	sbci	r25, 0xFF	; 255
    16ba:	08 95       	ret

000016bc <__fp_split3>:
    16bc:	57 fd       	sbrc	r21, 7
    16be:	90 58       	subi	r25, 0x80	; 128
    16c0:	44 0f       	add	r20, r20
    16c2:	55 1f       	adc	r21, r21
    16c4:	59 f0       	breq	.+22     	; 0x16dc <__fp_splitA+0x10>
    16c6:	5f 3f       	cpi	r21, 0xFF	; 255
    16c8:	71 f0       	breq	.+28     	; 0x16e6 <__fp_splitA+0x1a>
    16ca:	47 95       	ror	r20

000016cc <__fp_splitA>:
    16cc:	88 0f       	add	r24, r24
    16ce:	97 fb       	bst	r25, 7
    16d0:	99 1f       	adc	r25, r25
    16d2:	61 f0       	breq	.+24     	; 0x16ec <__fp_splitA+0x20>
    16d4:	9f 3f       	cpi	r25, 0xFF	; 255
    16d6:	79 f0       	breq	.+30     	; 0x16f6 <__fp_splitA+0x2a>
    16d8:	87 95       	ror	r24
    16da:	08 95       	ret
    16dc:	12 16       	cp	r1, r18
    16de:	13 06       	cpc	r1, r19
    16e0:	14 06       	cpc	r1, r20
    16e2:	55 1f       	adc	r21, r21
    16e4:	f2 cf       	rjmp	.-28     	; 0x16ca <__fp_split3+0xe>
    16e6:	46 95       	lsr	r20
    16e8:	f1 df       	rcall	.-30     	; 0x16cc <__fp_splitA>
    16ea:	08 c0       	rjmp	.+16     	; 0x16fc <__fp_splitA+0x30>
    16ec:	16 16       	cp	r1, r22
    16ee:	17 06       	cpc	r1, r23
    16f0:	18 06       	cpc	r1, r24
    16f2:	99 1f       	adc	r25, r25
    16f4:	f1 cf       	rjmp	.-30     	; 0x16d8 <__fp_splitA+0xc>
    16f6:	86 95       	lsr	r24
    16f8:	71 05       	cpc	r23, r1
    16fa:	61 05       	cpc	r22, r1
    16fc:	08 94       	sec
    16fe:	08 95       	ret

00001700 <__fp_zero>:
    1700:	e8 94       	clt

00001702 <__fp_szero>:
    1702:	bb 27       	eor	r27, r27
    1704:	66 27       	eor	r22, r22
    1706:	77 27       	eor	r23, r23
    1708:	cb 01       	movw	r24, r22
    170a:	97 f9       	bld	r25, 7
    170c:	08 95       	ret

0000170e <__mulsf3>:
    170e:	0b d0       	rcall	.+22     	; 0x1726 <__mulsf3x>
    1710:	c4 cf       	rjmp	.-120    	; 0x169a <__fp_round>
    1712:	b5 df       	rcall	.-150    	; 0x167e <__fp_pscA>
    1714:	28 f0       	brcs	.+10     	; 0x1720 <__mulsf3+0x12>
    1716:	ba df       	rcall	.-140    	; 0x168c <__fp_pscB>
    1718:	18 f0       	brcs	.+6      	; 0x1720 <__mulsf3+0x12>
    171a:	95 23       	and	r25, r21
    171c:	09 f0       	breq	.+2      	; 0x1720 <__mulsf3+0x12>
    171e:	a6 cf       	rjmp	.-180    	; 0x166c <__fp_inf>
    1720:	ab cf       	rjmp	.-170    	; 0x1678 <__fp_nan>
    1722:	11 24       	eor	r1, r1
    1724:	ee cf       	rjmp	.-36     	; 0x1702 <__fp_szero>

00001726 <__mulsf3x>:
    1726:	ca df       	rcall	.-108    	; 0x16bc <__fp_split3>
    1728:	a0 f3       	brcs	.-24     	; 0x1712 <__mulsf3+0x4>

0000172a <__mulsf3_pse>:
    172a:	95 9f       	mul	r25, r21
    172c:	d1 f3       	breq	.-12     	; 0x1722 <__mulsf3+0x14>
    172e:	95 0f       	add	r25, r21
    1730:	50 e0       	ldi	r21, 0x00	; 0
    1732:	55 1f       	adc	r21, r21
    1734:	62 9f       	mul	r22, r18
    1736:	f0 01       	movw	r30, r0
    1738:	72 9f       	mul	r23, r18
    173a:	bb 27       	eor	r27, r27
    173c:	f0 0d       	add	r31, r0
    173e:	b1 1d       	adc	r27, r1
    1740:	63 9f       	mul	r22, r19
    1742:	aa 27       	eor	r26, r26
    1744:	f0 0d       	add	r31, r0
    1746:	b1 1d       	adc	r27, r1
    1748:	aa 1f       	adc	r26, r26
    174a:	64 9f       	mul	r22, r20
    174c:	66 27       	eor	r22, r22
    174e:	b0 0d       	add	r27, r0
    1750:	a1 1d       	adc	r26, r1
    1752:	66 1f       	adc	r22, r22
    1754:	82 9f       	mul	r24, r18
    1756:	22 27       	eor	r18, r18
    1758:	b0 0d       	add	r27, r0
    175a:	a1 1d       	adc	r26, r1
    175c:	62 1f       	adc	r22, r18
    175e:	73 9f       	mul	r23, r19
    1760:	b0 0d       	add	r27, r0
    1762:	a1 1d       	adc	r26, r1
    1764:	62 1f       	adc	r22, r18
    1766:	83 9f       	mul	r24, r19
    1768:	a0 0d       	add	r26, r0
    176a:	61 1d       	adc	r22, r1
    176c:	22 1f       	adc	r18, r18
    176e:	74 9f       	mul	r23, r20
    1770:	33 27       	eor	r19, r19
    1772:	a0 0d       	add	r26, r0
    1774:	61 1d       	adc	r22, r1
    1776:	23 1f       	adc	r18, r19
    1778:	84 9f       	mul	r24, r20
    177a:	60 0d       	add	r22, r0
    177c:	21 1d       	adc	r18, r1
    177e:	82 2f       	mov	r24, r18
    1780:	76 2f       	mov	r23, r22
    1782:	6a 2f       	mov	r22, r26
    1784:	11 24       	eor	r1, r1
    1786:	9f 57       	subi	r25, 0x7F	; 127
    1788:	50 40       	sbci	r21, 0x00	; 0
    178a:	8a f0       	brmi	.+34     	; 0x17ae <__mulsf3_pse+0x84>
    178c:	e1 f0       	breq	.+56     	; 0x17c6 <__mulsf3_pse+0x9c>
    178e:	88 23       	and	r24, r24
    1790:	4a f0       	brmi	.+18     	; 0x17a4 <__mulsf3_pse+0x7a>
    1792:	ee 0f       	add	r30, r30
    1794:	ff 1f       	adc	r31, r31
    1796:	bb 1f       	adc	r27, r27
    1798:	66 1f       	adc	r22, r22
    179a:	77 1f       	adc	r23, r23
    179c:	88 1f       	adc	r24, r24
    179e:	91 50       	subi	r25, 0x01	; 1
    17a0:	50 40       	sbci	r21, 0x00	; 0
    17a2:	a9 f7       	brne	.-22     	; 0x178e <__mulsf3_pse+0x64>
    17a4:	9e 3f       	cpi	r25, 0xFE	; 254
    17a6:	51 05       	cpc	r21, r1
    17a8:	70 f0       	brcs	.+28     	; 0x17c6 <__mulsf3_pse+0x9c>
    17aa:	60 cf       	rjmp	.-320    	; 0x166c <__fp_inf>
    17ac:	aa cf       	rjmp	.-172    	; 0x1702 <__fp_szero>
    17ae:	5f 3f       	cpi	r21, 0xFF	; 255
    17b0:	ec f3       	brlt	.-6      	; 0x17ac <__mulsf3_pse+0x82>
    17b2:	98 3e       	cpi	r25, 0xE8	; 232
    17b4:	dc f3       	brlt	.-10     	; 0x17ac <__mulsf3_pse+0x82>
    17b6:	86 95       	lsr	r24
    17b8:	77 95       	ror	r23
    17ba:	67 95       	ror	r22
    17bc:	b7 95       	ror	r27
    17be:	f7 95       	ror	r31
    17c0:	e7 95       	ror	r30
    17c2:	9f 5f       	subi	r25, 0xFF	; 255
    17c4:	c1 f7       	brne	.-16     	; 0x17b6 <__mulsf3_pse+0x8c>
    17c6:	fe 2b       	or	r31, r30
    17c8:	88 0f       	add	r24, r24
    17ca:	91 1d       	adc	r25, r1
    17cc:	96 95       	lsr	r25
    17ce:	87 95       	ror	r24
    17d0:	97 f9       	bld	r25, 7
    17d2:	08 95       	ret

000017d4 <__prologue_saves__>:
    17d4:	2f 92       	push	r2
    17d6:	3f 92       	push	r3
    17d8:	4f 92       	push	r4
    17da:	5f 92       	push	r5
    17dc:	6f 92       	push	r6
    17de:	7f 92       	push	r7
    17e0:	8f 92       	push	r8
    17e2:	9f 92       	push	r9
    17e4:	af 92       	push	r10
    17e6:	bf 92       	push	r11
    17e8:	cf 92       	push	r12
    17ea:	df 92       	push	r13
    17ec:	ef 92       	push	r14
    17ee:	ff 92       	push	r15
    17f0:	0f 93       	push	r16
    17f2:	1f 93       	push	r17
    17f4:	cf 93       	push	r28
    17f6:	df 93       	push	r29
    17f8:	cd b7       	in	r28, 0x3d	; 61
    17fa:	de b7       	in	r29, 0x3e	; 62
    17fc:	ca 1b       	sub	r28, r26
    17fe:	db 0b       	sbc	r29, r27
    1800:	0f b6       	in	r0, 0x3f	; 63
    1802:	f8 94       	cli
    1804:	de bf       	out	0x3e, r29	; 62
    1806:	0f be       	out	0x3f, r0	; 63
    1808:	cd bf       	out	0x3d, r28	; 61
    180a:	09 94       	ijmp

0000180c <__epilogue_restores__>:
    180c:	2a 88       	ldd	r2, Y+18	; 0x12
    180e:	39 88       	ldd	r3, Y+17	; 0x11
    1810:	48 88       	ldd	r4, Y+16	; 0x10
    1812:	5f 84       	ldd	r5, Y+15	; 0x0f
    1814:	6e 84       	ldd	r6, Y+14	; 0x0e
    1816:	7d 84       	ldd	r7, Y+13	; 0x0d
    1818:	8c 84       	ldd	r8, Y+12	; 0x0c
    181a:	9b 84       	ldd	r9, Y+11	; 0x0b
    181c:	aa 84       	ldd	r10, Y+10	; 0x0a
    181e:	b9 84       	ldd	r11, Y+9	; 0x09
    1820:	c8 84       	ldd	r12, Y+8	; 0x08
    1822:	df 80       	ldd	r13, Y+7	; 0x07
    1824:	ee 80       	ldd	r14, Y+6	; 0x06
    1826:	fd 80       	ldd	r15, Y+5	; 0x05
    1828:	0c 81       	ldd	r16, Y+4	; 0x04
    182a:	1b 81       	ldd	r17, Y+3	; 0x03
    182c:	aa 81       	ldd	r26, Y+2	; 0x02
    182e:	b9 81       	ldd	r27, Y+1	; 0x01
    1830:	ce 0f       	add	r28, r30
    1832:	d1 1d       	adc	r29, r1
    1834:	0f b6       	in	r0, 0x3f	; 63
    1836:	f8 94       	cli
    1838:	de bf       	out	0x3e, r29	; 62
    183a:	0f be       	out	0x3f, r0	; 63
    183c:	cd bf       	out	0x3d, r28	; 61
    183e:	ed 01       	movw	r28, r26
    1840:	08 95       	ret

00001842 <atof>:
    1842:	66 27       	eor	r22, r22
    1844:	77 27       	eor	r23, r23
    1846:	0c 94 d3 0d 	jmp	0x1ba6	; 0x1ba6 <strtod>

0000184a <__ftoa_engine>:
    184a:	28 30       	cpi	r18, 0x08	; 8
    184c:	08 f0       	brcs	.+2      	; 0x1850 <__ftoa_engine+0x6>
    184e:	27 e0       	ldi	r18, 0x07	; 7
    1850:	33 27       	eor	r19, r19
    1852:	da 01       	movw	r26, r20
    1854:	99 0f       	add	r25, r25
    1856:	31 1d       	adc	r19, r1
    1858:	87 fd       	sbrc	r24, 7
    185a:	91 60       	ori	r25, 0x01	; 1
    185c:	00 96       	adiw	r24, 0x00	; 0
    185e:	61 05       	cpc	r22, r1
    1860:	71 05       	cpc	r23, r1
    1862:	39 f4       	brne	.+14     	; 0x1872 <__ftoa_engine+0x28>
    1864:	32 60       	ori	r19, 0x02	; 2
    1866:	2e 5f       	subi	r18, 0xFE	; 254
    1868:	3d 93       	st	X+, r19
    186a:	30 e3       	ldi	r19, 0x30	; 48
    186c:	2a 95       	dec	r18
    186e:	e1 f7       	brne	.-8      	; 0x1868 <__ftoa_engine+0x1e>
    1870:	08 95       	ret
    1872:	9f 3f       	cpi	r25, 0xFF	; 255
    1874:	30 f0       	brcs	.+12     	; 0x1882 <__ftoa_engine+0x38>
    1876:	80 38       	cpi	r24, 0x80	; 128
    1878:	71 05       	cpc	r23, r1
    187a:	61 05       	cpc	r22, r1
    187c:	09 f0       	breq	.+2      	; 0x1880 <__ftoa_engine+0x36>
    187e:	3c 5f       	subi	r19, 0xFC	; 252
    1880:	3c 5f       	subi	r19, 0xFC	; 252
    1882:	3d 93       	st	X+, r19
    1884:	91 30       	cpi	r25, 0x01	; 1
    1886:	08 f0       	brcs	.+2      	; 0x188a <__ftoa_engine+0x40>
    1888:	80 68       	ori	r24, 0x80	; 128
    188a:	91 1d       	adc	r25, r1
    188c:	df 93       	push	r29
    188e:	cf 93       	push	r28
    1890:	1f 93       	push	r17
    1892:	0f 93       	push	r16
    1894:	ff 92       	push	r15
    1896:	ef 92       	push	r14
    1898:	19 2f       	mov	r17, r25
    189a:	98 7f       	andi	r25, 0xF8	; 248
    189c:	96 95       	lsr	r25
    189e:	e9 2f       	mov	r30, r25
    18a0:	96 95       	lsr	r25
    18a2:	96 95       	lsr	r25
    18a4:	e9 0f       	add	r30, r25
    18a6:	ff 27       	eor	r31, r31
    18a8:	ef 52       	subi	r30, 0x2F	; 47
    18aa:	ff 4f       	sbci	r31, 0xFF	; 255
    18ac:	99 27       	eor	r25, r25
    18ae:	33 27       	eor	r19, r19
    18b0:	ee 24       	eor	r14, r14
    18b2:	ff 24       	eor	r15, r15
    18b4:	a7 01       	movw	r20, r14
    18b6:	e7 01       	movw	r28, r14
    18b8:	05 90       	lpm	r0, Z+
    18ba:	08 94       	sec
    18bc:	07 94       	ror	r0
    18be:	28 f4       	brcc	.+10     	; 0x18ca <__ftoa_engine+0x80>
    18c0:	36 0f       	add	r19, r22
    18c2:	e7 1e       	adc	r14, r23
    18c4:	f8 1e       	adc	r15, r24
    18c6:	49 1f       	adc	r20, r25
    18c8:	51 1d       	adc	r21, r1
    18ca:	66 0f       	add	r22, r22
    18cc:	77 1f       	adc	r23, r23
    18ce:	88 1f       	adc	r24, r24
    18d0:	99 1f       	adc	r25, r25
    18d2:	06 94       	lsr	r0
    18d4:	a1 f7       	brne	.-24     	; 0x18be <__ftoa_engine+0x74>
    18d6:	05 90       	lpm	r0, Z+
    18d8:	07 94       	ror	r0
    18da:	28 f4       	brcc	.+10     	; 0x18e6 <__ftoa_engine+0x9c>
    18dc:	e7 0e       	add	r14, r23
    18de:	f8 1e       	adc	r15, r24
    18e0:	49 1f       	adc	r20, r25
    18e2:	56 1f       	adc	r21, r22
    18e4:	c1 1d       	adc	r28, r1
    18e6:	77 0f       	add	r23, r23
    18e8:	88 1f       	adc	r24, r24
    18ea:	99 1f       	adc	r25, r25
    18ec:	66 1f       	adc	r22, r22
    18ee:	06 94       	lsr	r0
    18f0:	a1 f7       	brne	.-24     	; 0x18da <__ftoa_engine+0x90>
    18f2:	05 90       	lpm	r0, Z+
    18f4:	07 94       	ror	r0
    18f6:	28 f4       	brcc	.+10     	; 0x1902 <__ftoa_engine+0xb8>
    18f8:	f8 0e       	add	r15, r24
    18fa:	49 1f       	adc	r20, r25
    18fc:	56 1f       	adc	r21, r22
    18fe:	c7 1f       	adc	r28, r23
    1900:	d1 1d       	adc	r29, r1
    1902:	88 0f       	add	r24, r24
    1904:	99 1f       	adc	r25, r25
    1906:	66 1f       	adc	r22, r22
    1908:	77 1f       	adc	r23, r23
    190a:	06 94       	lsr	r0
    190c:	a1 f7       	brne	.-24     	; 0x18f6 <__ftoa_engine+0xac>
    190e:	05 90       	lpm	r0, Z+
    1910:	07 94       	ror	r0
    1912:	20 f4       	brcc	.+8      	; 0x191c <__ftoa_engine+0xd2>
    1914:	49 0f       	add	r20, r25
    1916:	56 1f       	adc	r21, r22
    1918:	c7 1f       	adc	r28, r23
    191a:	d8 1f       	adc	r29, r24
    191c:	99 0f       	add	r25, r25
    191e:	66 1f       	adc	r22, r22
    1920:	77 1f       	adc	r23, r23
    1922:	88 1f       	adc	r24, r24
    1924:	06 94       	lsr	r0
    1926:	a9 f7       	brne	.-22     	; 0x1912 <__ftoa_engine+0xc8>
    1928:	84 91       	lpm	r24, Z
    192a:	10 95       	com	r17
    192c:	17 70       	andi	r17, 0x07	; 7
    192e:	41 f0       	breq	.+16     	; 0x1940 <__ftoa_engine+0xf6>
    1930:	d6 95       	lsr	r29
    1932:	c7 95       	ror	r28
    1934:	57 95       	ror	r21
    1936:	47 95       	ror	r20
    1938:	f7 94       	ror	r15
    193a:	e7 94       	ror	r14
    193c:	1a 95       	dec	r17
    193e:	c1 f7       	brne	.-16     	; 0x1930 <__ftoa_engine+0xe6>
    1940:	e7 e7       	ldi	r30, 0x77	; 119
    1942:	f0 e0       	ldi	r31, 0x00	; 0
    1944:	68 94       	set
    1946:	15 90       	lpm	r1, Z+
    1948:	15 91       	lpm	r17, Z+
    194a:	35 91       	lpm	r19, Z+
    194c:	65 91       	lpm	r22, Z+
    194e:	95 91       	lpm	r25, Z+
    1950:	05 90       	lpm	r0, Z+
    1952:	7f e2       	ldi	r23, 0x2F	; 47
    1954:	73 95       	inc	r23
    1956:	e1 18       	sub	r14, r1
    1958:	f1 0a       	sbc	r15, r17
    195a:	43 0b       	sbc	r20, r19
    195c:	56 0b       	sbc	r21, r22
    195e:	c9 0b       	sbc	r28, r25
    1960:	d0 09       	sbc	r29, r0
    1962:	c0 f7       	brcc	.-16     	; 0x1954 <__ftoa_engine+0x10a>
    1964:	e1 0c       	add	r14, r1
    1966:	f1 1e       	adc	r15, r17
    1968:	43 1f       	adc	r20, r19
    196a:	56 1f       	adc	r21, r22
    196c:	c9 1f       	adc	r28, r25
    196e:	d0 1d       	adc	r29, r0
    1970:	7e f4       	brtc	.+30     	; 0x1990 <__ftoa_engine+0x146>
    1972:	70 33       	cpi	r23, 0x30	; 48
    1974:	11 f4       	brne	.+4      	; 0x197a <__ftoa_engine+0x130>
    1976:	8a 95       	dec	r24
    1978:	e6 cf       	rjmp	.-52     	; 0x1946 <__ftoa_engine+0xfc>
    197a:	e8 94       	clt
    197c:	01 50       	subi	r16, 0x01	; 1
    197e:	30 f0       	brcs	.+12     	; 0x198c <__ftoa_engine+0x142>
    1980:	08 0f       	add	r16, r24
    1982:	0a f4       	brpl	.+2      	; 0x1986 <__ftoa_engine+0x13c>
    1984:	00 27       	eor	r16, r16
    1986:	02 17       	cp	r16, r18
    1988:	08 f4       	brcc	.+2      	; 0x198c <__ftoa_engine+0x142>
    198a:	20 2f       	mov	r18, r16
    198c:	23 95       	inc	r18
    198e:	02 2f       	mov	r16, r18
    1990:	7a 33       	cpi	r23, 0x3A	; 58
    1992:	28 f0       	brcs	.+10     	; 0x199e <__ftoa_engine+0x154>
    1994:	79 e3       	ldi	r23, 0x39	; 57
    1996:	7d 93       	st	X+, r23
    1998:	2a 95       	dec	r18
    199a:	e9 f7       	brne	.-6      	; 0x1996 <__ftoa_engine+0x14c>
    199c:	10 c0       	rjmp	.+32     	; 0x19be <__ftoa_engine+0x174>
    199e:	7d 93       	st	X+, r23
    19a0:	2a 95       	dec	r18
    19a2:	89 f6       	brne	.-94     	; 0x1946 <__ftoa_engine+0xfc>
    19a4:	06 94       	lsr	r0
    19a6:	97 95       	ror	r25
    19a8:	67 95       	ror	r22
    19aa:	37 95       	ror	r19
    19ac:	17 95       	ror	r17
    19ae:	17 94       	ror	r1
    19b0:	e1 18       	sub	r14, r1
    19b2:	f1 0a       	sbc	r15, r17
    19b4:	43 0b       	sbc	r20, r19
    19b6:	56 0b       	sbc	r21, r22
    19b8:	c9 0b       	sbc	r28, r25
    19ba:	d0 09       	sbc	r29, r0
    19bc:	98 f0       	brcs	.+38     	; 0x19e4 <__ftoa_engine+0x19a>
    19be:	23 95       	inc	r18
    19c0:	7e 91       	ld	r23, -X
    19c2:	73 95       	inc	r23
    19c4:	7a 33       	cpi	r23, 0x3A	; 58
    19c6:	08 f0       	brcs	.+2      	; 0x19ca <__ftoa_engine+0x180>
    19c8:	70 e3       	ldi	r23, 0x30	; 48
    19ca:	7c 93       	st	X, r23
    19cc:	20 13       	cpse	r18, r16
    19ce:	b8 f7       	brcc	.-18     	; 0x19be <__ftoa_engine+0x174>
    19d0:	7e 91       	ld	r23, -X
    19d2:	70 61       	ori	r23, 0x10	; 16
    19d4:	7d 93       	st	X+, r23
    19d6:	30 f0       	brcs	.+12     	; 0x19e4 <__ftoa_engine+0x19a>
    19d8:	83 95       	inc	r24
    19da:	71 e3       	ldi	r23, 0x31	; 49
    19dc:	7d 93       	st	X+, r23
    19de:	70 e3       	ldi	r23, 0x30	; 48
    19e0:	2a 95       	dec	r18
    19e2:	e1 f7       	brne	.-8      	; 0x19dc <__ftoa_engine+0x192>
    19e4:	11 24       	eor	r1, r1
    19e6:	ef 90       	pop	r14
    19e8:	ff 90       	pop	r15
    19ea:	0f 91       	pop	r16
    19ec:	1f 91       	pop	r17
    19ee:	cf 91       	pop	r28
    19f0:	df 91       	pop	r29
    19f2:	99 27       	eor	r25, r25
    19f4:	87 fd       	sbrc	r24, 7
    19f6:	90 95       	com	r25
    19f8:	08 95       	ret

000019fa <strnlen_P>:
    19fa:	fc 01       	movw	r30, r24
    19fc:	05 90       	lpm	r0, Z+
    19fe:	61 50       	subi	r22, 0x01	; 1
    1a00:	70 40       	sbci	r23, 0x00	; 0
    1a02:	01 10       	cpse	r0, r1
    1a04:	d8 f7       	brcc	.-10     	; 0x19fc <strnlen_P+0x2>
    1a06:	80 95       	com	r24
    1a08:	90 95       	com	r25
    1a0a:	8e 0f       	add	r24, r30
    1a0c:	9f 1f       	adc	r25, r31
    1a0e:	08 95       	ret

00001a10 <strnlen>:
    1a10:	fc 01       	movw	r30, r24
    1a12:	61 50       	subi	r22, 0x01	; 1
    1a14:	70 40       	sbci	r23, 0x00	; 0
    1a16:	01 90       	ld	r0, Z+
    1a18:	01 10       	cpse	r0, r1
    1a1a:	d8 f7       	brcc	.-10     	; 0x1a12 <strnlen+0x2>
    1a1c:	80 95       	com	r24
    1a1e:	90 95       	com	r25
    1a20:	8e 0f       	add	r24, r30
    1a22:	9f 1f       	adc	r25, r31
    1a24:	08 95       	ret

00001a26 <fputc>:
    1a26:	0f 93       	push	r16
    1a28:	1f 93       	push	r17
    1a2a:	cf 93       	push	r28
    1a2c:	df 93       	push	r29
    1a2e:	18 2f       	mov	r17, r24
    1a30:	09 2f       	mov	r16, r25
    1a32:	eb 01       	movw	r28, r22
    1a34:	8b 81       	ldd	r24, Y+3	; 0x03
    1a36:	81 fd       	sbrc	r24, 1
    1a38:	03 c0       	rjmp	.+6      	; 0x1a40 <fputc+0x1a>
    1a3a:	8f ef       	ldi	r24, 0xFF	; 255
    1a3c:	9f ef       	ldi	r25, 0xFF	; 255
    1a3e:	20 c0       	rjmp	.+64     	; 0x1a80 <fputc+0x5a>
    1a40:	82 ff       	sbrs	r24, 2
    1a42:	10 c0       	rjmp	.+32     	; 0x1a64 <fputc+0x3e>
    1a44:	4e 81       	ldd	r20, Y+6	; 0x06
    1a46:	5f 81       	ldd	r21, Y+7	; 0x07
    1a48:	2c 81       	ldd	r18, Y+4	; 0x04
    1a4a:	3d 81       	ldd	r19, Y+5	; 0x05
    1a4c:	42 17       	cp	r20, r18
    1a4e:	53 07       	cpc	r21, r19
    1a50:	7c f4       	brge	.+30     	; 0x1a70 <fputc+0x4a>
    1a52:	e8 81       	ld	r30, Y
    1a54:	f9 81       	ldd	r31, Y+1	; 0x01
    1a56:	9f 01       	movw	r18, r30
    1a58:	2f 5f       	subi	r18, 0xFF	; 255
    1a5a:	3f 4f       	sbci	r19, 0xFF	; 255
    1a5c:	39 83       	std	Y+1, r19	; 0x01
    1a5e:	28 83       	st	Y, r18
    1a60:	10 83       	st	Z, r17
    1a62:	06 c0       	rjmp	.+12     	; 0x1a70 <fputc+0x4a>
    1a64:	e8 85       	ldd	r30, Y+8	; 0x08
    1a66:	f9 85       	ldd	r31, Y+9	; 0x09
    1a68:	81 2f       	mov	r24, r17
    1a6a:	09 95       	icall
    1a6c:	89 2b       	or	r24, r25
    1a6e:	29 f7       	brne	.-54     	; 0x1a3a <fputc+0x14>
    1a70:	2e 81       	ldd	r18, Y+6	; 0x06
    1a72:	3f 81       	ldd	r19, Y+7	; 0x07
    1a74:	2f 5f       	subi	r18, 0xFF	; 255
    1a76:	3f 4f       	sbci	r19, 0xFF	; 255
    1a78:	3f 83       	std	Y+7, r19	; 0x07
    1a7a:	2e 83       	std	Y+6, r18	; 0x06
    1a7c:	81 2f       	mov	r24, r17
    1a7e:	90 2f       	mov	r25, r16
    1a80:	df 91       	pop	r29
    1a82:	cf 91       	pop	r28
    1a84:	1f 91       	pop	r17
    1a86:	0f 91       	pop	r16
    1a88:	08 95       	ret

00001a8a <snprintf>:
    1a8a:	ae e0       	ldi	r26, 0x0E	; 14
    1a8c:	b0 e0       	ldi	r27, 0x00	; 0
    1a8e:	eb e4       	ldi	r30, 0x4B	; 75
    1a90:	fd e0       	ldi	r31, 0x0D	; 13
    1a92:	0c 94 f8 0b 	jmp	0x17f0	; 0x17f0 <__prologue_saves__+0x1c>
    1a96:	0d 89       	ldd	r16, Y+21	; 0x15
    1a98:	1e 89       	ldd	r17, Y+22	; 0x16
    1a9a:	8f 89       	ldd	r24, Y+23	; 0x17
    1a9c:	98 8d       	ldd	r25, Y+24	; 0x18
    1a9e:	26 e0       	ldi	r18, 0x06	; 6
    1aa0:	2c 83       	std	Y+4, r18	; 0x04
    1aa2:	1a 83       	std	Y+2, r17	; 0x02
    1aa4:	09 83       	std	Y+1, r16	; 0x01
    1aa6:	97 ff       	sbrs	r25, 7
    1aa8:	02 c0       	rjmp	.+4      	; 0x1aae <snprintf+0x24>
    1aaa:	80 e0       	ldi	r24, 0x00	; 0
    1aac:	90 e8       	ldi	r25, 0x80	; 128
    1aae:	01 97       	sbiw	r24, 0x01	; 1
    1ab0:	9e 83       	std	Y+6, r25	; 0x06
    1ab2:	8d 83       	std	Y+5, r24	; 0x05
    1ab4:	ae 01       	movw	r20, r28
    1ab6:	45 5e       	subi	r20, 0xE5	; 229
    1ab8:	5f 4f       	sbci	r21, 0xFF	; 255
    1aba:	69 8d       	ldd	r22, Y+25	; 0x19
    1abc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1abe:	ce 01       	movw	r24, r28
    1ac0:	01 96       	adiw	r24, 0x01	; 1
    1ac2:	0e 94 5d 06 	call	0xcba	; 0xcba <vfprintf>
    1ac6:	4d 81       	ldd	r20, Y+5	; 0x05
    1ac8:	5e 81       	ldd	r21, Y+6	; 0x06
    1aca:	57 fd       	sbrc	r21, 7
    1acc:	0a c0       	rjmp	.+20     	; 0x1ae2 <snprintf+0x58>
    1ace:	2f 81       	ldd	r18, Y+7	; 0x07
    1ad0:	38 85       	ldd	r19, Y+8	; 0x08
    1ad2:	42 17       	cp	r20, r18
    1ad4:	53 07       	cpc	r21, r19
    1ad6:	0c f4       	brge	.+2      	; 0x1ada <snprintf+0x50>
    1ad8:	9a 01       	movw	r18, r20
    1ada:	f8 01       	movw	r30, r16
    1adc:	e2 0f       	add	r30, r18
    1ade:	f3 1f       	adc	r31, r19
    1ae0:	10 82       	st	Z, r1
    1ae2:	2e 96       	adiw	r28, 0x0e	; 14
    1ae4:	e4 e0       	ldi	r30, 0x04	; 4
    1ae6:	0c 94 14 0c 	jmp	0x1828	; 0x1828 <__epilogue_restores__+0x1c>

00001aea <__ultoa_invert>:
    1aea:	fa 01       	movw	r30, r20
    1aec:	aa 27       	eor	r26, r26
    1aee:	28 30       	cpi	r18, 0x08	; 8
    1af0:	51 f1       	breq	.+84     	; 0x1b46 <__ultoa_invert+0x5c>
    1af2:	20 31       	cpi	r18, 0x10	; 16
    1af4:	81 f1       	breq	.+96     	; 0x1b56 <__ultoa_invert+0x6c>
    1af6:	e8 94       	clt
    1af8:	6f 93       	push	r22
    1afa:	6e 7f       	andi	r22, 0xFE	; 254
    1afc:	6e 5f       	subi	r22, 0xFE	; 254
    1afe:	7f 4f       	sbci	r23, 0xFF	; 255
    1b00:	8f 4f       	sbci	r24, 0xFF	; 255
    1b02:	9f 4f       	sbci	r25, 0xFF	; 255
    1b04:	af 4f       	sbci	r26, 0xFF	; 255
    1b06:	b1 e0       	ldi	r27, 0x01	; 1
    1b08:	3e d0       	rcall	.+124    	; 0x1b86 <__ultoa_invert+0x9c>
    1b0a:	b4 e0       	ldi	r27, 0x04	; 4
    1b0c:	3c d0       	rcall	.+120    	; 0x1b86 <__ultoa_invert+0x9c>
    1b0e:	67 0f       	add	r22, r23
    1b10:	78 1f       	adc	r23, r24
    1b12:	89 1f       	adc	r24, r25
    1b14:	9a 1f       	adc	r25, r26
    1b16:	a1 1d       	adc	r26, r1
    1b18:	68 0f       	add	r22, r24
    1b1a:	79 1f       	adc	r23, r25
    1b1c:	8a 1f       	adc	r24, r26
    1b1e:	91 1d       	adc	r25, r1
    1b20:	a1 1d       	adc	r26, r1
    1b22:	6a 0f       	add	r22, r26
    1b24:	71 1d       	adc	r23, r1
    1b26:	81 1d       	adc	r24, r1
    1b28:	91 1d       	adc	r25, r1
    1b2a:	a1 1d       	adc	r26, r1
    1b2c:	20 d0       	rcall	.+64     	; 0x1b6e <__ultoa_invert+0x84>
    1b2e:	09 f4       	brne	.+2      	; 0x1b32 <__ultoa_invert+0x48>
    1b30:	68 94       	set
    1b32:	3f 91       	pop	r19
    1b34:	2a e0       	ldi	r18, 0x0A	; 10
    1b36:	26 9f       	mul	r18, r22
    1b38:	11 24       	eor	r1, r1
    1b3a:	30 19       	sub	r19, r0
    1b3c:	30 5d       	subi	r19, 0xD0	; 208
    1b3e:	31 93       	st	Z+, r19
    1b40:	de f6       	brtc	.-74     	; 0x1af8 <__ultoa_invert+0xe>
    1b42:	cf 01       	movw	r24, r30
    1b44:	08 95       	ret
    1b46:	46 2f       	mov	r20, r22
    1b48:	47 70       	andi	r20, 0x07	; 7
    1b4a:	40 5d       	subi	r20, 0xD0	; 208
    1b4c:	41 93       	st	Z+, r20
    1b4e:	b3 e0       	ldi	r27, 0x03	; 3
    1b50:	0f d0       	rcall	.+30     	; 0x1b70 <__ultoa_invert+0x86>
    1b52:	c9 f7       	brne	.-14     	; 0x1b46 <__ultoa_invert+0x5c>
    1b54:	f6 cf       	rjmp	.-20     	; 0x1b42 <__ultoa_invert+0x58>
    1b56:	46 2f       	mov	r20, r22
    1b58:	4f 70       	andi	r20, 0x0F	; 15
    1b5a:	40 5d       	subi	r20, 0xD0	; 208
    1b5c:	4a 33       	cpi	r20, 0x3A	; 58
    1b5e:	18 f0       	brcs	.+6      	; 0x1b66 <__ultoa_invert+0x7c>
    1b60:	49 5d       	subi	r20, 0xD9	; 217
    1b62:	31 fd       	sbrc	r19, 1
    1b64:	40 52       	subi	r20, 0x20	; 32
    1b66:	41 93       	st	Z+, r20
    1b68:	02 d0       	rcall	.+4      	; 0x1b6e <__ultoa_invert+0x84>
    1b6a:	a9 f7       	brne	.-22     	; 0x1b56 <__ultoa_invert+0x6c>
    1b6c:	ea cf       	rjmp	.-44     	; 0x1b42 <__ultoa_invert+0x58>
    1b6e:	b4 e0       	ldi	r27, 0x04	; 4
    1b70:	a6 95       	lsr	r26
    1b72:	97 95       	ror	r25
    1b74:	87 95       	ror	r24
    1b76:	77 95       	ror	r23
    1b78:	67 95       	ror	r22
    1b7a:	ba 95       	dec	r27
    1b7c:	c9 f7       	brne	.-14     	; 0x1b70 <__ultoa_invert+0x86>
    1b7e:	00 97       	sbiw	r24, 0x00	; 0
    1b80:	61 05       	cpc	r22, r1
    1b82:	71 05       	cpc	r23, r1
    1b84:	08 95       	ret
    1b86:	9b 01       	movw	r18, r22
    1b88:	ac 01       	movw	r20, r24
    1b8a:	0a 2e       	mov	r0, r26
    1b8c:	06 94       	lsr	r0
    1b8e:	57 95       	ror	r21
    1b90:	47 95       	ror	r20
    1b92:	37 95       	ror	r19
    1b94:	27 95       	ror	r18
    1b96:	ba 95       	dec	r27
    1b98:	c9 f7       	brne	.-14     	; 0x1b8c <__ultoa_invert+0xa2>
    1b9a:	62 0f       	add	r22, r18
    1b9c:	73 1f       	adc	r23, r19
    1b9e:	84 1f       	adc	r24, r20
    1ba0:	95 1f       	adc	r25, r21
    1ba2:	a0 1d       	adc	r26, r0
    1ba4:	08 95       	ret

00001ba6 <strtod>:
    1ba6:	a0 e0       	ldi	r26, 0x00	; 0
    1ba8:	b0 e0       	ldi	r27, 0x00	; 0
    1baa:	e9 ed       	ldi	r30, 0xD9	; 217
    1bac:	fd e0       	ldi	r31, 0x0D	; 13
    1bae:	0c 94 ec 0b 	jmp	0x17d8	; 0x17d8 <__prologue_saves__+0x4>
    1bb2:	8b 01       	movw	r16, r22
    1bb4:	61 15       	cp	r22, r1
    1bb6:	71 05       	cpc	r23, r1
    1bb8:	21 f0       	breq	.+8      	; 0x1bc2 <strtod+0x1c>
    1bba:	db 01       	movw	r26, r22
    1bbc:	8c 93       	st	X, r24
    1bbe:	11 96       	adiw	r26, 0x01	; 1
    1bc0:	9c 93       	st	X, r25
    1bc2:	ec 01       	movw	r28, r24
    1bc4:	5e 01       	movw	r10, r28
    1bc6:	bf ef       	ldi	r27, 0xFF	; 255
    1bc8:	ab 1a       	sub	r10, r27
    1bca:	bb 0a       	sbc	r11, r27
    1bcc:	75 01       	movw	r14, r10
    1bce:	c8 80       	ld	r12, Y
    1bd0:	8c 2d       	mov	r24, r12
    1bd2:	90 e0       	ldi	r25, 0x00	; 0
    1bd4:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <isspace>
    1bd8:	89 2b       	or	r24, r25
    1bda:	11 f0       	breq	.+4      	; 0x1be0 <strtod+0x3a>
    1bdc:	e5 01       	movw	r28, r10
    1bde:	f2 cf       	rjmp	.-28     	; 0x1bc4 <strtod+0x1e>
    1be0:	ed e2       	ldi	r30, 0x2D	; 45
    1be2:	ce 12       	cpse	r12, r30
    1be4:	08 c0       	rjmp	.+16     	; 0x1bf6 <strtod+0x50>
    1be6:	7e 01       	movw	r14, r28
    1be8:	f2 e0       	ldi	r31, 0x02	; 2
    1bea:	ef 0e       	add	r14, r31
    1bec:	f1 1c       	adc	r15, r1
    1bee:	c9 80       	ldd	r12, Y+1	; 0x01
    1bf0:	dd 24       	eor	r13, r13
    1bf2:	d3 94       	inc	r13
    1bf4:	09 c0       	rjmp	.+18     	; 0x1c08 <strtod+0x62>
    1bf6:	2b e2       	ldi	r18, 0x2B	; 43
    1bf8:	c2 12       	cpse	r12, r18
    1bfa:	05 c0       	rjmp	.+10     	; 0x1c06 <strtod+0x60>
    1bfc:	7e 01       	movw	r14, r28
    1bfe:	42 e0       	ldi	r20, 0x02	; 2
    1c00:	e4 0e       	add	r14, r20
    1c02:	f1 1c       	adc	r15, r1
    1c04:	c9 80       	ldd	r12, Y+1	; 0x01
    1c06:	d1 2c       	mov	r13, r1
    1c08:	e7 01       	movw	r28, r14
    1c0a:	21 97       	sbiw	r28, 0x01	; 1
    1c0c:	43 e0       	ldi	r20, 0x03	; 3
    1c0e:	50 e0       	ldi	r21, 0x00	; 0
    1c10:	69 e7       	ldi	r22, 0x79	; 121
    1c12:	71 e0       	ldi	r23, 0x01	; 1
    1c14:	ce 01       	movw	r24, r28
    1c16:	0e 94 42 0f 	call	0x1e84	; 0x1e84 <strncasecmp_P>
    1c1a:	89 2b       	or	r24, r25
    1c1c:	d1 f4       	brne	.+52     	; 0x1c52 <strtod+0xac>
    1c1e:	e7 01       	movw	r28, r14
    1c20:	22 96       	adiw	r28, 0x02	; 2
    1c22:	45 e0       	ldi	r20, 0x05	; 5
    1c24:	50 e0       	ldi	r21, 0x00	; 0
    1c26:	64 e7       	ldi	r22, 0x74	; 116
    1c28:	71 e0       	ldi	r23, 0x01	; 1
    1c2a:	ce 01       	movw	r24, r28
    1c2c:	0e 94 42 0f 	call	0x1e84	; 0x1e84 <strncasecmp_P>
    1c30:	89 2b       	or	r24, r25
    1c32:	11 f4       	brne	.+4      	; 0x1c38 <strtod+0x92>
    1c34:	e7 01       	movw	r28, r14
    1c36:	27 96       	adiw	r28, 0x07	; 7
    1c38:	01 15       	cp	r16, r1
    1c3a:	11 05       	cpc	r17, r1
    1c3c:	19 f0       	breq	.+6      	; 0x1c44 <strtod+0x9e>
    1c3e:	d8 01       	movw	r26, r16
    1c40:	cd 93       	st	X+, r28
    1c42:	dc 93       	st	X, r29
    1c44:	d1 10       	cpse	r13, r1
    1c46:	08 c1       	rjmp	.+528    	; 0x1e58 <strtod+0x2b2>
    1c48:	60 e0       	ldi	r22, 0x00	; 0
    1c4a:	70 e0       	ldi	r23, 0x00	; 0
    1c4c:	80 e8       	ldi	r24, 0x80	; 128
    1c4e:	9f e7       	ldi	r25, 0x7F	; 127
    1c50:	0c c1       	rjmp	.+536    	; 0x1e6a <strtod+0x2c4>
    1c52:	43 e0       	ldi	r20, 0x03	; 3
    1c54:	50 e0       	ldi	r21, 0x00	; 0
    1c56:	61 e7       	ldi	r22, 0x71	; 113
    1c58:	71 e0       	ldi	r23, 0x01	; 1
    1c5a:	ce 01       	movw	r24, r28
    1c5c:	0e 94 42 0f 	call	0x1e84	; 0x1e84 <strncasecmp_P>
    1c60:	89 2b       	or	r24, r25
    1c62:	59 f4       	brne	.+22     	; 0x1c7a <strtod+0xd4>
    1c64:	01 15       	cp	r16, r1
    1c66:	11 05       	cpc	r17, r1
    1c68:	09 f4       	brne	.+2      	; 0x1c6c <strtod+0xc6>
    1c6a:	fb c0       	rjmp	.+502    	; 0x1e62 <strtod+0x2bc>
    1c6c:	b2 e0       	ldi	r27, 0x02	; 2
    1c6e:	eb 0e       	add	r14, r27
    1c70:	f1 1c       	adc	r15, r1
    1c72:	f8 01       	movw	r30, r16
    1c74:	f1 82       	std	Z+1, r15	; 0x01
    1c76:	e0 82       	st	Z, r14
    1c78:	f4 c0       	rjmp	.+488    	; 0x1e62 <strtod+0x2bc>
    1c7a:	f7 01       	movw	r30, r14
    1c7c:	60 e0       	ldi	r22, 0x00	; 0
    1c7e:	70 e0       	ldi	r23, 0x00	; 0
    1c80:	cb 01       	movw	r24, r22
    1c82:	c0 e0       	ldi	r28, 0x00	; 0
    1c84:	d0 e0       	ldi	r29, 0x00	; 0
    1c86:	7f 01       	movw	r14, r30
    1c88:	a0 ed       	ldi	r26, 0xD0	; 208
    1c8a:	aa 2e       	mov	r10, r26
    1c8c:	ac 0c       	add	r10, r12
    1c8e:	29 e0       	ldi	r18, 0x09	; 9
    1c90:	2a 15       	cp	r18, r10
    1c92:	30 f1       	brcs	.+76     	; 0x1ce0 <strtod+0x13a>
    1c94:	4d 2d       	mov	r20, r13
    1c96:	42 60       	ori	r20, 0x02	; 2
    1c98:	b4 2e       	mov	r11, r20
    1c9a:	2d 2d       	mov	r18, r13
    1c9c:	28 70       	andi	r18, 0x08	; 8
    1c9e:	d2 fe       	sbrs	r13, 2
    1ca0:	04 c0       	rjmp	.+8      	; 0x1caa <strtod+0x104>
    1ca2:	21 11       	cpse	r18, r1
    1ca4:	25 c0       	rjmp	.+74     	; 0x1cf0 <strtod+0x14a>
    1ca6:	21 96       	adiw	r28, 0x01	; 1
    1ca8:	23 c0       	rjmp	.+70     	; 0x1cf0 <strtod+0x14a>
    1caa:	21 11       	cpse	r18, r1
    1cac:	21 97       	sbiw	r28, 0x01	; 1
    1cae:	a5 e0       	ldi	r26, 0x05	; 5
    1cb0:	b0 e0       	ldi	r27, 0x00	; 0
    1cb2:	9b 01       	movw	r18, r22
    1cb4:	ac 01       	movw	r20, r24
    1cb6:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <__muluhisi3>
    1cba:	66 0f       	add	r22, r22
    1cbc:	77 1f       	adc	r23, r23
    1cbe:	88 1f       	adc	r24, r24
    1cc0:	99 1f       	adc	r25, r25
    1cc2:	6a 0d       	add	r22, r10
    1cc4:	71 1d       	adc	r23, r1
    1cc6:	81 1d       	adc	r24, r1
    1cc8:	91 1d       	adc	r25, r1
    1cca:	68 39       	cpi	r22, 0x98	; 152
    1ccc:	a9 e9       	ldi	r26, 0x99	; 153
    1cce:	7a 07       	cpc	r23, r26
    1cd0:	8a 07       	cpc	r24, r26
    1cd2:	a9 e1       	ldi	r26, 0x19	; 25
    1cd4:	9a 07       	cpc	r25, r26
    1cd6:	60 f0       	brcs	.+24     	; 0x1cf0 <strtod+0x14a>
    1cd8:	bd 2d       	mov	r27, r13
    1cda:	b6 60       	ori	r27, 0x06	; 6
    1cdc:	bb 2e       	mov	r11, r27
    1cde:	08 c0       	rjmp	.+16     	; 0x1cf0 <strtod+0x14a>
    1ce0:	2e ef       	ldi	r18, 0xFE	; 254
    1ce2:	a2 12       	cpse	r10, r18
    1ce4:	0a c0       	rjmp	.+20     	; 0x1cfa <strtod+0x154>
    1ce6:	d3 fc       	sbrc	r13, 3
    1ce8:	50 c0       	rjmp	.+160    	; 0x1d8a <strtod+0x1e4>
    1cea:	4d 2d       	mov	r20, r13
    1cec:	48 60       	ori	r20, 0x08	; 8
    1cee:	b4 2e       	mov	r11, r20
    1cf0:	31 96       	adiw	r30, 0x01	; 1
    1cf2:	d7 01       	movw	r26, r14
    1cf4:	cc 90       	ld	r12, X
    1cf6:	db 2c       	mov	r13, r11
    1cf8:	c6 cf       	rjmp	.-116    	; 0x1c86 <strtod+0xe0>
    1cfa:	2c 2d       	mov	r18, r12
    1cfc:	2f 7d       	andi	r18, 0xDF	; 223
    1cfe:	25 34       	cpi	r18, 0x45	; 69
    1d00:	09 f0       	breq	.+2      	; 0x1d04 <strtod+0x15e>
    1d02:	43 c0       	rjmp	.+134    	; 0x1d8a <strtod+0x1e4>
    1d04:	a0 81       	ld	r26, Z
    1d06:	ad 32       	cpi	r26, 0x2D	; 45
    1d08:	41 f4       	brne	.+16     	; 0x1d1a <strtod+0x174>
    1d0a:	bd 2d       	mov	r27, r13
    1d0c:	b0 61       	ori	r27, 0x10	; 16
    1d0e:	db 2e       	mov	r13, r27
    1d10:	7f 01       	movw	r14, r30
    1d12:	22 e0       	ldi	r18, 0x02	; 2
    1d14:	e2 0e       	add	r14, r18
    1d16:	f1 1c       	adc	r15, r1
    1d18:	0c c0       	rjmp	.+24     	; 0x1d32 <strtod+0x18c>
    1d1a:	7f 01       	movw	r14, r30
    1d1c:	ab 32       	cpi	r26, 0x2B	; 43
    1d1e:	31 f0       	breq	.+12     	; 0x1d2c <strtod+0x186>
    1d20:	4f ef       	ldi	r20, 0xFF	; 255
    1d22:	e4 1a       	sub	r14, r20
    1d24:	f4 0a       	sbc	r15, r20
    1d26:	21 e0       	ldi	r18, 0x01	; 1
    1d28:	30 e0       	ldi	r19, 0x00	; 0
    1d2a:	06 c0       	rjmp	.+12     	; 0x1d38 <strtod+0x192>
    1d2c:	a2 e0       	ldi	r26, 0x02	; 2
    1d2e:	ea 0e       	add	r14, r26
    1d30:	f1 1c       	adc	r15, r1
    1d32:	a1 81       	ldd	r26, Z+1	; 0x01
    1d34:	22 e0       	ldi	r18, 0x02	; 2
    1d36:	30 e0       	ldi	r19, 0x00	; 0
    1d38:	a0 53       	subi	r26, 0x30	; 48
    1d3a:	aa 30       	cpi	r26, 0x0A	; 10
    1d3c:	18 f0       	brcs	.+6      	; 0x1d44 <strtod+0x19e>
    1d3e:	e2 1a       	sub	r14, r18
    1d40:	f3 0a       	sbc	r15, r19
    1d42:	23 c0       	rjmp	.+70     	; 0x1d8a <strtod+0x1e4>
    1d44:	f7 01       	movw	r30, r14
    1d46:	20 e0       	ldi	r18, 0x00	; 0
    1d48:	30 e0       	ldi	r19, 0x00	; 0
    1d4a:	20 38       	cpi	r18, 0x80	; 128
    1d4c:	bc e0       	ldi	r27, 0x0C	; 12
    1d4e:	3b 07       	cpc	r19, r27
    1d50:	5c f4       	brge	.+22     	; 0x1d68 <strtod+0x1c2>
    1d52:	a9 01       	movw	r20, r18
    1d54:	44 0f       	add	r20, r20
    1d56:	55 1f       	adc	r21, r21
    1d58:	44 0f       	add	r20, r20
    1d5a:	55 1f       	adc	r21, r21
    1d5c:	24 0f       	add	r18, r20
    1d5e:	35 1f       	adc	r19, r21
    1d60:	22 0f       	add	r18, r18
    1d62:	33 1f       	adc	r19, r19
    1d64:	2a 0f       	add	r18, r26
    1d66:	31 1d       	adc	r19, r1
    1d68:	af 01       	movw	r20, r30
    1d6a:	4f 5f       	subi	r20, 0xFF	; 255
    1d6c:	5f 4f       	sbci	r21, 0xFF	; 255
    1d6e:	7a 01       	movw	r14, r20
    1d70:	a0 81       	ld	r26, Z
    1d72:	a0 53       	subi	r26, 0x30	; 48
    1d74:	aa 30       	cpi	r26, 0x0A	; 10
    1d76:	10 f4       	brcc	.+4      	; 0x1d7c <strtod+0x1d6>
    1d78:	fa 01       	movw	r30, r20
    1d7a:	e7 cf       	rjmp	.-50     	; 0x1d4a <strtod+0x1a4>
    1d7c:	d4 fe       	sbrs	r13, 4
    1d7e:	03 c0       	rjmp	.+6      	; 0x1d86 <strtod+0x1e0>
    1d80:	31 95       	neg	r19
    1d82:	21 95       	neg	r18
    1d84:	31 09       	sbc	r19, r1
    1d86:	c2 0f       	add	r28, r18
    1d88:	d3 1f       	adc	r29, r19
    1d8a:	d1 fe       	sbrs	r13, 1
    1d8c:	09 c0       	rjmp	.+18     	; 0x1da0 <strtod+0x1fa>
    1d8e:	01 15       	cp	r16, r1
    1d90:	11 05       	cpc	r17, r1
    1d92:	31 f0       	breq	.+12     	; 0x1da0 <strtod+0x1fa>
    1d94:	e1 e0       	ldi	r30, 0x01	; 1
    1d96:	ee 1a       	sub	r14, r30
    1d98:	f1 08       	sbc	r15, r1
    1d9a:	d8 01       	movw	r26, r16
    1d9c:	ed 92       	st	X+, r14
    1d9e:	fc 92       	st	X, r15
    1da0:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__floatunsisf>
    1da4:	2d 2d       	mov	r18, r13
    1da6:	23 70       	andi	r18, 0x03	; 3
    1da8:	23 30       	cpi	r18, 0x03	; 3
    1daa:	19 f0       	breq	.+6      	; 0x1db2 <strtod+0x20c>
    1dac:	6b 01       	movw	r12, r22
    1dae:	7c 01       	movw	r14, r24
    1db0:	06 c0       	rjmp	.+12     	; 0x1dbe <strtod+0x218>
    1db2:	6b 01       	movw	r12, r22
    1db4:	7c 01       	movw	r14, r24
    1db6:	f7 fa       	bst	r15, 7
    1db8:	f0 94       	com	r15
    1dba:	f7 f8       	bld	r15, 7
    1dbc:	f0 94       	com	r15
    1dbe:	20 e0       	ldi	r18, 0x00	; 0
    1dc0:	30 e0       	ldi	r19, 0x00	; 0
    1dc2:	a9 01       	movw	r20, r18
    1dc4:	c7 01       	movw	r24, r14
    1dc6:	b6 01       	movw	r22, r12
    1dc8:	0e 94 3d 0a 	call	0x147a	; 0x147a <__cmpsf2>
    1dcc:	88 23       	and	r24, r24
    1dce:	09 f4       	brne	.+2      	; 0x1dd2 <strtod+0x22c>
    1dd0:	40 c0       	rjmp	.+128    	; 0x1e52 <strtod+0x2ac>
    1dd2:	d7 ff       	sbrs	r29, 7
    1dd4:	06 c0       	rjmp	.+12     	; 0x1de2 <strtod+0x23c>
    1dd6:	d1 95       	neg	r29
    1dd8:	c1 95       	neg	r28
    1dda:	d1 09       	sbc	r29, r1
    1ddc:	00 e9       	ldi	r16, 0x90	; 144
    1dde:	11 e0       	ldi	r17, 0x01	; 1
    1de0:	02 c0       	rjmp	.+4      	; 0x1de6 <strtod+0x240>
    1de2:	08 ea       	ldi	r16, 0xA8	; 168
    1de4:	11 e0       	ldi	r17, 0x01	; 1
    1de6:	48 01       	movw	r8, r16
    1de8:	b8 e1       	ldi	r27, 0x18	; 24
    1dea:	8b 1a       	sub	r8, r27
    1dec:	91 08       	sbc	r9, r1
    1dee:	90 e2       	ldi	r25, 0x20	; 32
    1df0:	a9 2e       	mov	r10, r25
    1df2:	b1 2c       	mov	r11, r1
    1df4:	f8 01       	movw	r30, r16
    1df6:	45 90       	lpm	r4, Z+
    1df8:	55 90       	lpm	r5, Z+
    1dfa:	65 90       	lpm	r6, Z+
    1dfc:	74 90       	lpm	r7, Z
    1dfe:	ca 15       	cp	r28, r10
    1e00:	db 05       	cpc	r29, r11
    1e02:	5c f0       	brlt	.+22     	; 0x1e1a <strtod+0x274>
    1e04:	a3 01       	movw	r20, r6
    1e06:	92 01       	movw	r18, r4
    1e08:	c7 01       	movw	r24, r14
    1e0a:	b6 01       	movw	r22, r12
    1e0c:	0e 94 87 0b 	call	0x170e	; 0x170e <__mulsf3>
    1e10:	6b 01       	movw	r12, r22
    1e12:	7c 01       	movw	r14, r24
    1e14:	ca 19       	sub	r28, r10
    1e16:	db 09       	sbc	r29, r11
    1e18:	f2 cf       	rjmp	.-28     	; 0x1dfe <strtod+0x258>
    1e1a:	04 50       	subi	r16, 0x04	; 4
    1e1c:	11 09       	sbc	r17, r1
    1e1e:	b5 94       	asr	r11
    1e20:	a7 94       	ror	r10
    1e22:	08 15       	cp	r16, r8
    1e24:	19 05       	cpc	r17, r9
    1e26:	31 f7       	brne	.-52     	; 0x1df4 <strtod+0x24e>
    1e28:	8e 2d       	mov	r24, r14
    1e2a:	88 0f       	add	r24, r24
    1e2c:	8f 2d       	mov	r24, r15
    1e2e:	88 1f       	adc	r24, r24
    1e30:	8f 3f       	cpi	r24, 0xFF	; 255
    1e32:	49 f0       	breq	.+18     	; 0x1e46 <strtod+0x2a0>
    1e34:	20 e0       	ldi	r18, 0x00	; 0
    1e36:	30 e0       	ldi	r19, 0x00	; 0
    1e38:	a9 01       	movw	r20, r18
    1e3a:	c7 01       	movw	r24, r14
    1e3c:	b6 01       	movw	r22, r12
    1e3e:	0e 94 3d 0a 	call	0x147a	; 0x147a <__cmpsf2>
    1e42:	81 11       	cpse	r24, r1
    1e44:	06 c0       	rjmp	.+12     	; 0x1e52 <strtod+0x2ac>
    1e46:	82 e2       	ldi	r24, 0x22	; 34
    1e48:	90 e0       	ldi	r25, 0x00	; 0
    1e4a:	90 93 c3 01 	sts	0x01C3, r25
    1e4e:	80 93 c2 01 	sts	0x01C2, r24
    1e52:	c7 01       	movw	r24, r14
    1e54:	b6 01       	movw	r22, r12
    1e56:	09 c0       	rjmp	.+18     	; 0x1e6a <strtod+0x2c4>
    1e58:	60 e0       	ldi	r22, 0x00	; 0
    1e5a:	70 e0       	ldi	r23, 0x00	; 0
    1e5c:	80 e8       	ldi	r24, 0x80	; 128
    1e5e:	9f ef       	ldi	r25, 0xFF	; 255
    1e60:	04 c0       	rjmp	.+8      	; 0x1e6a <strtod+0x2c4>
    1e62:	60 e0       	ldi	r22, 0x00	; 0
    1e64:	70 e0       	ldi	r23, 0x00	; 0
    1e66:	80 ec       	ldi	r24, 0xC0	; 192
    1e68:	9f e7       	ldi	r25, 0x7F	; 127
    1e6a:	cd b7       	in	r28, 0x3d	; 61
    1e6c:	de b7       	in	r29, 0x3e	; 62
    1e6e:	e0 e1       	ldi	r30, 0x10	; 16
    1e70:	0c 94 08 0c 	jmp	0x1810	; 0x1810 <__epilogue_restores__+0x4>

00001e74 <isspace>:
    1e74:	91 11       	cpse	r25, r1
    1e76:	1e c0       	rjmp	.+60     	; 0x1eb4 <__ctype_isfalse>
    1e78:	80 32       	cpi	r24, 0x20	; 32
    1e7a:	19 f0       	breq	.+6      	; 0x1e82 <isspace+0xe>
    1e7c:	89 50       	subi	r24, 0x09	; 9
    1e7e:	85 50       	subi	r24, 0x05	; 5
    1e80:	d0 f7       	brcc	.-12     	; 0x1e76 <isspace+0x2>
    1e82:	08 95       	ret

00001e84 <strncasecmp_P>:
    1e84:	fb 01       	movw	r30, r22
    1e86:	dc 01       	movw	r26, r24
    1e88:	41 50       	subi	r20, 0x01	; 1
    1e8a:	50 40       	sbci	r21, 0x00	; 0
    1e8c:	88 f0       	brcs	.+34     	; 0x1eb0 <strncasecmp_P+0x2c>
    1e8e:	8d 91       	ld	r24, X+
    1e90:	81 34       	cpi	r24, 0x41	; 65
    1e92:	1c f0       	brlt	.+6      	; 0x1e9a <strncasecmp_P+0x16>
    1e94:	8b 35       	cpi	r24, 0x5B	; 91
    1e96:	0c f4       	brge	.+2      	; 0x1e9a <strncasecmp_P+0x16>
    1e98:	80 5e       	subi	r24, 0xE0	; 224
    1e9a:	65 91       	lpm	r22, Z+
    1e9c:	61 34       	cpi	r22, 0x41	; 65
    1e9e:	1c f0       	brlt	.+6      	; 0x1ea6 <strncasecmp_P+0x22>
    1ea0:	6b 35       	cpi	r22, 0x5B	; 91
    1ea2:	0c f4       	brge	.+2      	; 0x1ea6 <strncasecmp_P+0x22>
    1ea4:	60 5e       	subi	r22, 0xE0	; 224
    1ea6:	86 1b       	sub	r24, r22
    1ea8:	61 11       	cpse	r22, r1
    1eaa:	71 f3       	breq	.-36     	; 0x1e88 <strncasecmp_P+0x4>
    1eac:	99 0b       	sbc	r25, r25
    1eae:	08 95       	ret
    1eb0:	88 1b       	sub	r24, r24
    1eb2:	fc cf       	rjmp	.-8      	; 0x1eac <strncasecmp_P+0x28>

00001eb4 <__ctype_isfalse>:
    1eb4:	99 27       	eor	r25, r25
    1eb6:	88 27       	eor	r24, r24

00001eb8 <__ctype_istrue>:
    1eb8:	08 95       	ret

00001eba <__muluhisi3>:
    1eba:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <__umulhisi3>
    1ebe:	a5 9f       	mul	r26, r21
    1ec0:	90 0d       	add	r25, r0
    1ec2:	b4 9f       	mul	r27, r20
    1ec4:	90 0d       	add	r25, r0
    1ec6:	a4 9f       	mul	r26, r20
    1ec8:	80 0d       	add	r24, r0
    1eca:	91 1d       	adc	r25, r1
    1ecc:	11 24       	eor	r1, r1
    1ece:	08 95       	ret

00001ed0 <__umulhisi3>:
    1ed0:	a2 9f       	mul	r26, r18
    1ed2:	b0 01       	movw	r22, r0
    1ed4:	b3 9f       	mul	r27, r19
    1ed6:	c0 01       	movw	r24, r0
    1ed8:	a3 9f       	mul	r26, r19
    1eda:	70 0d       	add	r23, r0
    1edc:	81 1d       	adc	r24, r1
    1ede:	11 24       	eor	r1, r1
    1ee0:	91 1d       	adc	r25, r1
    1ee2:	b2 9f       	mul	r27, r18
    1ee4:	70 0d       	add	r23, r0
    1ee6:	81 1d       	adc	r24, r1
    1ee8:	11 24       	eor	r1, r1
    1eea:	91 1d       	adc	r25, r1
    1eec:	08 95       	ret

00001eee <_exit>:
    1eee:	f8 94       	cli

00001ef0 <__stop_program>:
    1ef0:	ff cf       	rjmp	.-2      	; 0x1ef0 <__stop_program>
